[
  {
    "type": "feat",
    "subtype": "E1",
    "change": "diff --git a/subprojects/ide/src/main/groovy/org/gradle/plugins/ide/internal/tooling/BuildInvocationsBuilder.java b/subprojects/ide/src/main/groovy/org/gradle/plugins/ide/internal/tooling/BuildInvocationsBuilder.java\nindex 08c96b2..f4ea6fe 100644\n--- a/subprojects/ide/src/main/groovy/org/gradle/plugins/ide/internal/tooling/BuildInvocationsBuilder.java\n+++ b/subprojects/ide/src/main/groovy/org/gradle/plugins/ide/internal/tooling/BuildInvocationsBuilder.java\n@@ -106,11 +106,15 @@ public class BuildInvocationsBuilder extends ProjectSensitiveToolingModelBuilder\n             // in the map, store a minimally populated LaunchableGradleTaskSelector that contains just the description and the path\n             // replace the LaunchableGradleTaskSelector stored in the map iff we come across a task with the same name whose path has a smaller ordering\n             // this way, for each task selector, its description will be the one from the selected task with the 'smallest' path\n-            if (!taskSelectors.containsKey(task.getName()) || hasPathWithLowerOrdering(task, taskSelectors.get(task.getName()))) {\n+            if (!taskSelectors.containsKey(task.getName())) {\n                 LaunchableGradleTaskSelector taskSelector = new LaunchableGradleTaskSelector().\n-                        setDescription(task.getDescription()).\n-                        setProjectPath(task.getPath());\n+                        setDescription(task.getDescription()).setProjectPath(task.getPath());\n                 taskSelectors.put(task.getName(), taskSelector);\n+            } else {\n+                LaunchableGradleTaskSelector taskSelector = taskSelectors.get(task.getName());\n+                if (hasPathWithLowerOrdering(task, taskSelector)) {\n+                    taskSelector.setDescription(task.getDescription()).setProjectPath(task.getPath());\n+                }\n             }\n \n             // visible tasks are specified as those that have a non-empty group\n",
    "summaries": {
      "en": "Avoid creating unnecessary new instances of LaunchableGradleTaskSelector",
      "zh": "避免不必要地创建新的LaunchableGradleTaskSelector实例"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/src/biz/bokhorst/xprivacy/Util.java b/src/biz/bokhorst/xprivacy/Util.java\nindex aa21c5b4..0d992ffd 100644\n--- a/src/biz/bokhorst/xprivacy/Util.java\n+++ b/src/biz/bokhorst/xprivacy/Util.java\n@@ -94,6 +94,8 @@ public class Util {\n \t\t\tpriority = Log.WARN;\n \t\telse if (ex instanceof ActivityShare.ServerException)\n \t\t\tpriority = Log.WARN;\n+\t\telse if (ex instanceof NoClassDefFoundError)\n+\t\t\tpriority = Log.WARN;\n \t\telse\n \t\t\tpriority = Log.ERROR;\n \n",
    "summaries": {
      "en": "If NoClassDefFoundError occurs, set the log level to WARN",
      "zh": "如果出现NoClassDefFoundError，则将日志级别设为WARN"
    }
  },
  {
    "type": "fix",
    "subtype": "I3",
    "change": "diff --git a/codeInsight/impl/com/intellij/codeInsight/completion/DefaultInsertHandler.java b/codeInsight/impl/com/intellij/codeInsight/completion/DefaultInsertHandler.java\nindex a1366bc4..d8ea81b 100644\n--- a/codeInsight/impl/com/intellij/codeInsight/completion/DefaultInsertHandler.java\n+++ b/codeInsight/impl/com/intellij/codeInsight/completion/DefaultInsertHandler.java\n@@ -243,10 +243,10 @@ public class DefaultInsertHandler implements InsertHandler,Cloneable {\n   private void handleParenses(final boolean hasParams, final boolean needParenth, TailType tailType){\n     final CodeInsightSettings settings = CodeInsightSettings.getInstance();\n     final boolean generateAnonymousBody = myLookupItem.getAttribute(LookupItem.GENERATE_ANONYMOUS_BODY_ATTR) != null;\n-    boolean insertRightParenth = !settings.INSERT_SINGLE_PARENTH\n+    boolean insertRightParenth = (!settings.INSERT_SINGLE_PARENTH\n                                  || (settings.INSERT_DOUBLE_PARENTH_WHEN_NO_ARGS && !hasParams)\n                                  || generateAnonymousBody\n-                                 || tailType != TailType.NONE;\n+                                 || tailType != TailType.NONE) && tailType != TailTypes.SMART_COMPLETION;\n \n     if (needParenth){\n       if (myContext.lparenthOffset >= 0){\n",
    "summaries": {
      "en": "Add intelligent input completion termination for new after constructor",
      "zh": "为构造函数后的new添加智能输入完成终止"
    }
  },
  {
    "type": "test",
    "subtype": "T1",
    "change": "diff --git a/community/kernel/src/test/java/org/neo4j/kernel/impl/api/index/sampling/IndexSamplingControllerTest.java b/community/kernel/src/test/java/org/neo4j/kernel/impl/api/index/sampling/IndexSamplingControllerTest.java\nindex e195b43..783c43e 100644\n--- a/community/kernel/src/test/java/org/neo4j/kernel/impl/api/index/sampling/IndexSamplingControllerTest.java\n+++ b/community/kernel/src/test/java/org/neo4j/kernel/impl/api/index/sampling/IndexSamplingControllerTest.java\n@@ -19,9 +19,10 @@\n  */\n package org.neo4j.kernel.impl.api.index.sampling;\n \n+import org.junit.Test;\n+\n import java.util.concurrent.atomic.AtomicInteger;\n \n-import org.junit.Test;\n import org.neo4j.helpers.Predicate;\n import org.neo4j.helpers.Predicates;\n import org.neo4j.kernel.api.index.IndexDescriptor;\n@@ -31,8 +32,13 @@ import org.neo4j.kernel.impl.api.index.IndexProxy;\n import org.neo4j.kernel.impl.util.JobScheduler;\n import org.neo4j.test.DoubleLatch;\n \n-import static org.junit.Assert.*;\n-import static org.mockito.Mockito.*;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.verifyNoMoreInteractions;\n+import static org.mockito.Mockito.when;\n import static org.neo4j.helpers.Predicates.TRUE;\n import static org.neo4j.helpers.Predicates.not;\n import static org.neo4j.kernel.api.index.InternalIndexState.FAILED;\n@@ -149,11 +155,11 @@ public class IndexSamplingControllerTest\n \n         // and finally exactly one job has run to completion\n         assertEquals( 0, concurrentCount.get() );\n-        // it might happen that the thread which does not acquire the lock read the index to the queue if it has\n+        // it might happen that the thread which does not acquire the lock readd the index to the queue if it has\n         // been removed, so the total count in the end might be either 1 or 2, for this test it is important to\n         // not fail by having 2 threads calling IndexSamplingJobFactory.create()\n         int expected = totalCount.get();\n-        assertTrue( \"Expected 1 or 2, got \" + expected, 1 >= expected || expected <= 2 );\n+        assertTrue( \"Expected 1 or 2, got \" + expected, 1 >= expected && expected <= 2 );\n     }\n \n     @Test\n",
    "summaries": {
      "en": "Revert \"Fix unstable index sampling test\" changes",
      "zh": "恢复“修复不稳定的索引采样测试”的修改"
    }
  },
  {
    "type": "refactor",
    "subtype": "Rx",
    "change": "diff --git a/robotium-solo/src/main/java/com/jayway/android/robotium/solo/Solo.java b/robotium-solo/src/main/java/com/jayway/android/robotium/solo/Solo.java\nindex 76e1f20..0246494 100644\n--- a/robotium-solo/src/main/java/com/jayway/android/robotium/solo/Solo.java\n+++ b/robotium-solo/src/main/java/com/jayway/android/robotium/solo/Solo.java\n@@ -2369,7 +2369,7 @@ public class Solo {\n      * \n      */\n \n-    public boolean waitForActivityStackToBeEmpty(int timeout)\n+    public boolean waitForEmptyActivityStack(int timeout)\n     {\n     \treturn waiter.waitForCondition(\n     \t\t\tnew Condition(){\n",
    "summaries": {
      "en": "Change method name",
      "zh": "更改方法名称"
    }
  },
  {
    "type": "refactor",
    "subtype": "R10",
    "change": "diff --git a/presto-main/src/main/java/com/facebook/presto/operator/RecordProjectOperator.java b/presto-main/src/main/java/com/facebook/presto/operator/RecordProjectOperator.java\nindex 3f6fd77..d4a9b07 100644\n--- a/presto-main/src/main/java/com/facebook/presto/operator/RecordProjectOperator.java\n+++ b/presto-main/src/main/java/com/facebook/presto/operator/RecordProjectOperator.java\n@@ -170,8 +170,6 @@ public class RecordProjectOperator\n         Page page = pageBuilder.build();\n         pageBuilder.reset();\n \n-        operatorContext.recordGeneratedInput(page.getDataSize(), page.getPositionCount());\n-\n         return page;\n     }\n }\n",
    "summaries": {
      "en": "Do not duplicate the calculation of bytes and lines in RecordProjectOperator",
      "zh": "不要在RecordProjectOperator中重复计算字节和行数"
    }
  },
  {
    "type": "feat",
    "subtype": "E1",
    "change": "diff --git a/xml/impl/src/com/intellij/psi/formatter/xml/AbstractXmlBlock.java b/xml/impl/src/com/intellij/psi/formatter/xml/AbstractXmlBlock.java\nindex 09b403a..1b4feaf 100644\n--- a/xml/impl/src/com/intellij/psi/formatter/xml/AbstractXmlBlock.java\n+++ b/xml/impl/src/com/intellij/psi/formatter/xml/AbstractXmlBlock.java\n@@ -271,10 +271,13 @@ public abstract class AbstractXmlBlock extends AbstractBlock {\n     final FormattingModelBuilder builder = LanguageFormatting.INSTANCE.forContext(childLanguage, childPsi);\n     LOG.assertTrue(builder != null);\n     final FormattingModel childModel = builder.createModel(childPsi, getSettings());\n-    result.add(new AnotherLanguageBlockWrapper(child,\n-                                               myXmlFormattingPolicy,\n-                                               childModel.getRootBlock(),\n-                                               indent, offset, range));\n+    Block original = childModel.getRootBlock();\n+    \n+    if (original.isLeaf() || original.getSubBlocks().size() != 0) {\n+      result.add(new AnotherLanguageBlockWrapper(child,\n+                                                 myXmlFormattingPolicy, original,\n+                                                 indent, offset, range));\n+    }\n     return child;\n   }\n \n",
    "summaries": {
      "en": "If the root block returned by the formatting module of another language is empty, it will not be added to the result",
      "zh": "如果另一个语言的格式化模块返回的根块为空，则不添加到结果中"
    }
  },
  {
    "type": "refactor",
    "subtype": "R6",
    "change": "diff --git a/src/java/org/jivesoftware/wildfire/net/BlockingReadingMode.java b/src/java/org/jivesoftware/wildfire/net/BlockingReadingMode.java\nindex 2157d8f0a..cf93c4c28 100644\n--- a/src/java/org/jivesoftware/wildfire/net/BlockingReadingMode.java\n+++ b/src/java/org/jivesoftware/wildfire/net/BlockingReadingMode.java\n@@ -101,7 +101,7 @@ class BlockingReadingMode extends SocketReadingMode {\n             else {\n                 // Close and release the created connection\n                 socketReader.connection.close();\n-                Log.error(LocaleUtils.getLocalizedString(\"admin.error.connection\")\n+                Log.debug(LocaleUtils.getLocalizedString(\"admin.error.connection\")\n                         + \"\\n\" + socket.toString());\n             }\n             socketReader.shutdown();\n",
    "summaries": {
      "en": "Modified log level and improved log information",
      "zh": "修改日志级别并完善日志信息"
    }
  },
  {
    "type": "feat",
    "subtype": "E2",
    "change": "diff --git a/dex-writer/src/main/java/com/googlecode/d2j/dex/writer/AnnotationWriter.java b/dex-writer/src/main/java/com/googlecode/d2j/dex/writer/AnnotationWriter.java\nindex 9ea4399..1d4f100 100644\n--- a/dex-writer/src/main/java/com/googlecode/d2j/dex/writer/AnnotationWriter.java\n+++ b/dex-writer/src/main/java/com/googlecode/d2j/dex/writer/AnnotationWriter.java\n@@ -44,8 +44,18 @@ import java.util.List;\n \n     // int,int long\n     public void visit(String name, Object value) {\n-        AnnotationElement ae = newAnnotationElement(name);\n-        ae.value = EncodedValue.wrap(cp.wrapEncodedItem(value));\n+        if (value instanceof Object[]) {\n+            DexAnnotationVisitor s = visitArray(name);\n+            if (s != null) {\n+                for (Object v : (Object[]) value) {\n+                    s.visit(null, v);\n+                }\n+                s.visitEnd();\n+            }\n+        } else {\n+            AnnotationElement ae = newAnnotationElement(name);\n+            ae.value = EncodedValue.wrap(cp.wrapEncodedItem(value));\n+        }\n     }\n \n     @Override\n",
    "summaries": {
      "en": "Fix the array writing in the comments",
      "zh": "修复注释中的写入数组"
    }
  },
  {
    "type": "refactor",
    "subtype": "R7",
    "change": "diff --git a/profiler/src/main/java/com/navercorp/pinpoint/test/SimpleSpanStorage.java b/profiler/src/main/java/com/navercorp/pinpoint/test/SimpleSpanStorage.java\nindex d61b06d..3e7123c 100644\n--- a/profiler/src/main/java/com/navercorp/pinpoint/test/SimpleSpanStorage.java\n+++ b/profiler/src/main/java/com/navercorp/pinpoint/test/SimpleSpanStorage.java\n@@ -23,7 +23,6 @@ import org.apache.thrift.TBase;\n import com.navercorp.pinpoint.profiler.context.Span;\n import com.navercorp.pinpoint.profiler.context.SpanEvent;\n import com.navercorp.pinpoint.profiler.context.storage.Storage;\n-import com.navercorp.pinpoint.profiler.context.storage.StorageCloseHandler;\n \n /**\n  * @author hyungil.jeong\n",
    "summaries": {
      "en": "Remove unused import statements",
      "zh": "删除未使用的导入语句"
    }
  },
  {
    "type": "fix",
    "subtype": "I2",
    "change": "diff --git a/src/java/org/apache/cassandra/db/ColumnFamilyStore.java b/src/java/org/apache/cassandra/db/ColumnFamilyStore.java\nindex b832b98..7072921 100644\n--- a/src/java/org/apache/cassandra/db/ColumnFamilyStore.java\n+++ b/src/java/org/apache/cassandra/db/ColumnFamilyStore.java\n@@ -1671,7 +1671,7 @@ public class ColumnFamilyStore implements ColumnFamilyStoreMBean\n     public static List<ColumnFamilyStore> allUserDefined()\n     {\n         List<ColumnFamilyStore> cfses = new ArrayList<ColumnFamilyStore>();\n-        for (Table table : Sets.difference(ImmutableSet.copyOf(Table.all()), ImmutableSet.of(Table.open(Table.SYSTEM_KS))))\n+        for (Table table : Sets.difference(ImmutableSet.copyOf(Table.all()), Schema.systemKeyspaceNames))\n             cfses.addAll(table.getColumnFamilyStores());\n         return cfses;\n     }\n",
    "summaries": {
      "en": "Change difference() parameter",
      "zh": "更改difference()参数"
    }
  },
  {
    "type": "fix",
    "subtype": "I1",
    "change": "diff --git a/OsmAnd/src/net/osmand/plus/download/DownloadActivity.java b/OsmAnd/src/net/osmand/plus/download/DownloadActivity.java\nindex ac08076ea8..364df26bd7 100644\n--- a/OsmAnd/src/net/osmand/plus/download/DownloadActivity.java\n+++ b/OsmAnd/src/net/osmand/plus/download/DownloadActivity.java\n@@ -147,7 +147,7 @@ public class DownloadActivity extends SherlockFragmentActivity {\n \t\t\t\t}\n \t\t\t}\n \n-\t\t\tString tab = intent.getExtras().get(TAB_TO_OPEN).toString();\n+\t\t\tString tab = intent.getExtras().getString(TAB_TO_OPEN);\n \t\t\tif (tab != null) {\n \t\t\t\tif (tab.equals(DOWNLOAD_TAB)){\n \t\t\t\t\ttabHost.setCurrentTab(1);\n",
    "summaries": {
      "en": "Fix null pointer in DownloadActivity using extras",
      "zh": "在DownloadActivity中使用extras修复空指针"
    }
  },
  {
    "type": "fix",
    "subtype": "I2",
    "change": "diff --git a/core/java/android/text/Layout.java b/core/java/android/text/Layout.java\nindex 29dc2ea52..a92800d 100644\n--- a/core/java/android/text/Layout.java\n+++ b/core/java/android/text/Layout.java\n@@ -1527,7 +1527,7 @@ public abstract class Layout {\n                     if (bm != null) {\n                         workPaint.set(paint);\n                         Styled.measureText(paint, workPaint, text,\n-                                           offset, offset + 1, null);\n+                                           j, j + 2, null);\n \n                         float wid = (float) bm.getWidth() *\n                                     -workPaint.ascent() / bm.getHeight();\n",
    "summaries": {
      "en": "Corrected parameter in measureText()",
      "zh": "更正measureText()中的参数"
    }
  },
  {
    "type": "fix",
    "subtype": "I3",
    "change": "diff --git a/src/plugins/broadcast/src/java/org/jivesoftware/messenger/plugin/BroadcastPlugin.java b/src/plugins/broadcast/src/java/org/jivesoftware/messenger/plugin/BroadcastPlugin.java\nindex 1e3e30335..660512a13 100644\n--- a/src/plugins/broadcast/src/java/org/jivesoftware/messenger/plugin/BroadcastPlugin.java\n+++ b/src/plugins/broadcast/src/java/org/jivesoftware/messenger/plugin/BroadcastPlugin.java\n@@ -1,5 +1,5 @@\n /**\n- * $RCSfile$\n+ * $RCSfile: BroadcastPlugin.java,v $\n  * $Revision$\n  * $Date$\n  *\n@@ -161,10 +161,9 @@ public class BroadcastPlugin implements Plugin, Component, PropertyEventListener\n             else {\n                 try {\n                     Group group = groupManager.getGroup(toNode);\n-                    if (disableGroupPermissions || (groupMembersAllowed && group.isUser(fromNode)) ||\n-                            group.getAdmins().contains(fromNode) ||\n-                            allowedUsers.contains(message.getFrom().toBareJID()))\n-                    {\n+                    if (disableGroupPermissions ||\n+                            (groupMembersAllowed && group.isUser(message.getFrom())) ||\n+                            allowedUsers.contains(message.getFrom().toBareJID())) {\n                         for (String user : group.getMembers()) {\n                             Message newMessage = message.createCopy();\n                             JID userJID = XMPPServer.getInstance().createJID(user, null);\n",
    "summaries": {
      "en": "Modified the code of the broadcast plugin to enable sending messages to all members in the group",
      "zh": "修改广播插件的代码，使其可以向群组中的所有成员发送消息"
    }
  },
  {
    "type": "refactor",
    "subtype": "R6",
    "change": "diff --git a/h2o-core/src/main/java/water/parser/ParseDataset.java b/h2o-core/src/main/java/water/parser/ParseDataset.java\nindex da9053724..355c6f908 100644\n--- a/h2o-core/src/main/java/water/parser/ParseDataset.java\n+++ b/h2o-core/src/main/java/water/parser/ParseDataset.java\n@@ -418,7 +418,7 @@ public final class ParseDataset extends Job<Frame> {\n         _packedDomains[i] = packDomain(_perColDomains[i]);\n         i++;\n       }\n-      Log.trace(\"Done collecting local domains.\");\n+      Log.trace(\"Done locally collecting domains on each node.\");\n     }\n \n     @Override\n",
    "summaries": {
      "en": "Modified log information",
      "zh": "修改日志信息"
    }
  },
  {
    "type": "fix",
    "subtype": "I13",
    "change": "diff --git a/graphics/java/android/graphics/drawable/BitmapDrawable.java b/graphics/java/android/graphics/drawable/BitmapDrawable.java\nindex a028f90..fe08f4b 100644\n--- a/graphics/java/android/graphics/drawable/BitmapDrawable.java\n+++ b/graphics/java/android/graphics/drawable/BitmapDrawable.java\n@@ -603,6 +603,16 @@ public class BitmapDrawable extends Drawable {\n     }\n \n     /**\n+     * Returns the tint mode for this drawable, or {@code null} if none set.\n+     *\n+     * @return the tint mode for this drawable, or {@code null} if none set\n+     * @hide\n+     */\n+    public Mode getTintMode() {\n+        return mBitmapState.mTintMode;\n+    }\n+\n+    /**\n      * Ensures the tint filter is consistent with the current tint color and\n      * mode.\n      */\n",
    "summaries": {
      "en": "Added getTintMode() method",
      "zh": "添加 getTintMode()方法"
    }
  },
  {
    "type": "test",
    "subtype": "T1",
    "change": "diff --git a/hystrix-core/src/test/java/com/netflix/hystrix/HystrixCommandTestWithCustomConcurrencyStrategy.java b/hystrix-core/src/test/java/com/netflix/hystrix/HystrixCommandTestWithCustomConcurrencyStrategy.java\nindex 662c493..093b857 100644\n--- a/hystrix-core/src/test/java/com/netflix/hystrix/HystrixCommandTestWithCustomConcurrencyStrategy.java\n+++ b/hystrix-core/src/test/java/com/netflix/hystrix/HystrixCommandTestWithCustomConcurrencyStrategy.java\n@@ -41,6 +41,7 @@ public class HystrixCommandTestWithCustomConcurrencyStrategy {\n     public void reset() {\n         HystrixRequestContext.setContextOnCurrentThread(null);\n         HystrixPropertiesFactory.reset();\n+        HystrixPlugins.reset();\n     }\n \n     /**\n",
    "summaries": {
      "en": "Reset Hystrix plugins",
      "zh": "重置HystrixPlugins"
    }
  },
  {
    "type": "fix",
    "subtype": "I7",
    "change": "diff --git a/src/main/java/redis/clients/jedis/JedisSentinelPool.java b/src/main/java/redis/clients/jedis/JedisSentinelPool.java\nindex 609c742..10db508 100644\n--- a/src/main/java/redis/clients/jedis/JedisSentinelPool.java\n+++ b/src/main/java/redis/clients/jedis/JedisSentinelPool.java\n@@ -53,6 +53,9 @@ public class JedisSentinelPool extends Pool<Jedis> {\n     public JedisSentinelPool(String masterName, Set<String> sentinels, final Config poolConfig, int timeout, final String password,\n                      final int database) {\n     \tthis.poolConfig = poolConfig;\n+    \tthis.timeout = timeout;\n+    \tthis.password = password;\n+    \tthis.database = database;\n     \tHostAndPort master = initSentinels(sentinels, masterName);\n         initPool(master);    \t        \n     }\n",
    "summaries": {
      "en": "Uninitialized parameters in the constructor initialization",
      "zh": "初始化构造方法中未初始化的参数"
    }
  },
  {
    "type": "fix",
    "subtype": "I3",
    "change": "diff --git a/platform/util/src/com/intellij/openapi/util/MultiValuesMap.java b/platform/util/src/com/intellij/openapi/util/MultiValuesMap.java\nindex 03037b2..ee0b7d8 100644\n--- a/platform/util/src/com/intellij/openapi/util/MultiValuesMap.java\n+++ b/platform/util/src/com/intellij/openapi/util/MultiValuesMap.java\n@@ -71,7 +71,7 @@ public class MultiValuesMap<K, V>{\n   }\n \n   public void remove(K key, V value) {\n-    if (!myBaseMap.containsKey(key)) return;\n+    if (myBaseMap.get(key) == null) return;\n     final Collection<V> values = myBaseMap.get(key);\n     values.remove(value);\n     if (values.isEmpty()) {\n",
    "summaries": {
      "en": "Fix NPE caused by double deletion of the last element",
      "zh": "修复最后一个元素的双重删除的NPE"
    }
  },
  {
    "type": "docs",
    "subtype": "D2",
    "change": "diff --git a/grails-wrapper/src/main/java/org/grails/wrapper/RemoteFileHelper.java b/grails-wrapper/src/main/java/org/grails/wrapper/RemoteFileHelper.java\nindex 4bf35938f6..16a7a27445 100644\n--- a/grails-wrapper/src/main/java/org/grails/wrapper/RemoteFileHelper.java\n+++ b/grails-wrapper/src/main/java/org/grails/wrapper/RemoteFileHelper.java\n@@ -25,9 +25,11 @@ import java.net.URL;\n import java.net.URLConnection;\n \n /**\n- * RemoteFileHelper class used by {@link GrailsWrapper} for wrapper\n+ * RemoteFileHelper class used by {@link GrailsWrapper} for wrapper.  This source code borrows\n+ * signicantly from Gradle's org.gradlew.rapper.Download.java.\n  *\n- * @author Jeff Brown\n+ * @author Hans Dockter\n+ * \n  * @since 2.1\n  */\n public class RemoteFileHelper {\n",
    "summaries": {
      "en": "Change author information of RemoteFileHelper class",
      "zh": "更改 RemoteFileHelper 类的作者信息"
    }
  },
  {
    "type": "fix",
    "subtype": "I2",
    "change": "diff --git a/src/com/android/email/mail/store/WebDavStore.java b/src/com/android/email/mail/store/WebDavStore.java\nindex 9dd1955..a6301e3 100644\n--- a/src/com/android/email/mail/store/WebDavStore.java\n+++ b/src/com/android/email/mail/store/WebDavStore.java\n@@ -509,7 +509,7 @@ public class WebDavStore extends Store {\n             ArrayList<BasicNameValuePair> pairs = new ArrayList();\n             pairs.add(new BasicNameValuePair(\"username\", username));\n             pairs.add(new BasicNameValuePair(\"password\", password));\n-            pairs.add(new BasicNameValuePair(\"destination\", finalUrl + \"/exchange/\" +username+\"/\"));\n+            pairs.add(new BasicNameValuePair(\"destination\", url));\n             pairs.add(new BasicNameValuePair(\"flags\", \"0\"));\n             pairs.add(new BasicNameValuePair(\"SubmitCreds\", \"Log+On\"));\n             pairs.add(new BasicNameValuePair(\"forcedownlevel\", \"0\"));\n",
    "summaries": {
      "en": "Correct the value of \"destination\"",
      "zh": "更正\"destination\"的值"
    }
  },
  {
    "type": "feat",
    "subtype": "E1",
    "change": "diff --git a/camel-core/src/main/java/org/apache/camel/component/file/FileConsumer.java b/camel-core/src/main/java/org/apache/camel/component/file/FileConsumer.java\nindex f96c605c05..df3fe20eb3 100644\n--- a/camel-core/src/main/java/org/apache/camel/component/file/FileConsumer.java\n+++ b/camel-core/src/main/java/org/apache/camel/component/file/FileConsumer.java\n@@ -253,7 +253,9 @@ public class FileConsumer extends ScheduledPollConsumer {\n             return false;\n         } else if (endpoint.isIdempotent() && endpoint.getIdempotentRepository().contains(file.getPath())) {\n             // use file.getPath as key for the idempotent repository to support files with same name but in different folders\n-            LOG.warn(\"FileConsumer is idempotent and the file has been consumed before. Will skip this file: \" + file);\n+            if (LOG.isTraceEnabled()) {\n+                LOG.trace(\"FileConsumer is idempotent and the file has been consumed before. Will skip this file: \" + file);\n+            }\n             return false;\n         }\n \n",
    "summaries": {
      "en": "If LOG.isTraceEnabled() is false, do not output log; if it is true, output log",
      "zh": "如果LOG.isTraceEnabled()为false，则不输出日志；如果为true，则输出日志"
    }
  },
  {
    "type": "docs",
    "subtype": "D4",
    "change": "diff --git a/src/main/groovy/lang/MetaMethod.java b/src/main/groovy/lang/MetaMethod.java\nindex f11fb7964..fc82a6776 100644\n--- a/src/main/groovy/lang/MetaMethod.java\n+++ b/src/main/groovy/lang/MetaMethod.java\n@@ -207,13 +207,13 @@ public abstract class MetaMethod extends ParameterTypes implements Cloneable {\n \n     public final RuntimeException processDoMethodInvokeException (Exception e, Object object, Object [] argumentArray) {\n         if (e instanceof IllegalArgumentException) {\n-            //TODO: test if this is ok with new MOP, should be changed!\n+            //TODO: test if this is OK with new MOP, should be changed!\n             // we don't want the exception being unwrapped if it is a IllegalArgumentException\n             // but in the case it is for example a IllegalThreadStateException, we want the unwrapping\n             // from the runtime\n             //Note: the reason we want unwrapping sometimes and sometimes not is that the method\n-            // invokation tries to invoke the method with and then reacts with type transformation\n-            // if the invokation failed here. This is ok for IllegalArgumentException, but it is\n+            // invocation tries to invoke the method with and then reacts with type transformation\n+            // if the invocation failed here. This is OK for IllegalArgumentException, but it is\n             // possible that a Reflector will be used to execute the call and then an Exception from inside\n             // the method is not wrapped in a InvocationTargetException and we will end here.\n             boolean setReason = e.getClass() != IllegalArgumentException.class || this instanceof GeneratedMetaMethod;\n@@ -227,7 +227,7 @@ public abstract class MetaMethod extends ParameterTypes implements Cloneable {\n     }\n \n     // This method is not final but it should be overloaded very carefully and only by generated methods\n-    // there is no garantee that it will be called\n+    // there is no guarantee that it will be called\n     public Object doMethodInvoke(Object object, Object[] argumentArray) {\n         argumentArray = coerceArgumentsToClasses(argumentArray);\n         try {\n",
    "summaries": {
      "en": "Fixed spelling errors in the comments",
      "zh": "修改了注释中的拼写错误"
    }
  },
  {
    "type": "refactor",
    "subtype": "R4",
    "change": "diff --git a/byte-buddy-agent/src/main/java/net/bytebuddy/agent/ByteBuddyAgent.java b/byte-buddy-agent/src/main/java/net/bytebuddy/agent/ByteBuddyAgent.java\nindex c877385a52..58762379eb 100644\n--- a/byte-buddy-agent/src/main/java/net/bytebuddy/agent/ByteBuddyAgent.java\n+++ b/byte-buddy-agent/src/main/java/net/bytebuddy/agent/ByteBuddyAgent.java\n@@ -555,6 +555,8 @@ public class ByteBuddyAgent {\n                                 Class<?> processHandle = Class.forName(\"java.lang.ProcessHandle\");\n                                 return new ForJava9CapableVm(processHandle.getDeclaredMethod(\"current\"),\n                                         processHandle.getDeclaredMethod(\"getPid\"));\n+                            } catch (RuntimeException exception) {\n+                                throw exception;\n                             } catch (Exception ignored) {\n                                 return ForLegacyVm.INSTANCE;\n                             }\n",
    "summaries": {
      "en": "Capture RuntimeException and throw it",
      "zh": "捕获 RuntimeException 并抛出"
    }
  },
  {
    "type": "fix",
    "subtype": "Ix",
    "change": "diff --git a/core/src/main/java/com/google/errorprone/bugpatterns/NonStaticInnerClass.java b/core/src/main/java/com/google/errorprone/bugpatterns/NonStaticInnerClass.java\nindex 1e4a73997..c39394548 100644\n--- a/core/src/main/java/com/google/errorprone/bugpatterns/NonStaticInnerClass.java\n+++ b/core/src/main/java/com/google/errorprone/bugpatterns/NonStaticInnerClass.java\n@@ -18,7 +18,7 @@ package com.google.errorprone.bugpatterns;\n \n import static com.google.errorprone.BugPattern.Category.JDK;\n import static com.google.errorprone.BugPattern.MaturityLevel.EXPERIMENTAL;\n-import static com.google.errorprone.BugPattern.SeverityLevel.WARNING;\n+import static com.google.errorprone.BugPattern.SeverityLevel.ERROR;\n import static com.google.errorprone.matchers.Matchers.allOf;\n import static com.google.errorprone.matchers.Matchers.anyOf;\n import static com.google.errorprone.matchers.Matchers.classHasModifier;\n@@ -53,7 +53,7 @@ import com.sun.tools.javac.code.Types;\n     explanation = \"An inner class should be static unless it references members\" +\n         \"of its enclosing class. An inner class that is made non-static unnecessarily\" +\n         \"uses more memory and does not make the intent of the class clear.\",\n-    category = JDK, maturity = EXPERIMENTAL, severity = WARNING)\n+    category = JDK, maturity = EXPERIMENTAL, severity = ERROR)\n public class NonStaticInnerClass extends DescribingMatcher<ClassTree> {\n \n   /**\n",
    "summaries": {
      "en": "Change warning level from WARNING to ERROR",
      "zh": "将警告级别从 WARNING 更改为 ERROR"
    }
  },
  {
    "type": "style",
    "subtype": "S2",
    "change": "diff --git a/src/com/fsck/k9/activity/MessageList.java b/src/com/fsck/k9/activity/MessageList.java\nindex d68a7e0..ffa6a0a 100644\n--- a/src/com/fsck/k9/activity/MessageList.java\n+++ b/src/com/fsck/k9/activity/MessageList.java\n@@ -2378,7 +2378,7 @@ public class MessageList extends K9ListActivity implements\n     }\n \n     private void toggleAllSelected() {\n-\tboolean newState = true;\n+        boolean newState = true;\n \n         synchronized (mAdapter.messages) {\n             if (mSelectedCount > 0) {\n@@ -2939,9 +2939,9 @@ public class MessageList extends K9ListActivity implements\n \t            break;\n \t        }\n \t        case R.id.same_sender: {\n-\t            MessageList.actionHandle(MessageList.this, \"From \" + selection.get(0).sender,\n-\t\t\t\tselection.get(0).senderAddress, false, null, null);\n-\t\t\t\tmSelectedCount = 0;\n+                MessageList.actionHandle(MessageList.this, \"From \" + selection.get(0).sender,\n+                    selection.get(0).senderAddress, false, null, null);\n+                mSelectedCount = 0;\n \t            break;\n \t        }\n \t\t\t}\n",
    "summaries": {
      "en": "Adjust indentation",
      "zh": "调整缩进"
    }
  },
  {
    "type": "test",
    "subtype": "T1",
    "change": "diff --git a/src/main/java/com/simpligility/maven/plugins/android/asm/AndroidTestFinder.java b/src/main/java/com/simpligility/maven/plugins/android/asm/AndroidTestFinder.java\nindex 9e028974..cdad97c9 100644\n--- a/src/main/java/com/simpligility/maven/plugins/android/asm/AndroidTestFinder.java\n+++ b/src/main/java/com/simpligility/maven/plugins/android/asm/AndroidTestFinder.java\n@@ -28,7 +28,7 @@ import java.util.LinkedList;\n import java.util.List;\n \n /**\n- * Finds Android instrumentation test classes in a directory of compiled Java classes.\n+ * Finds Android instrumentation test classes to be run by InstrumentationTestRunner in a directory of compiled Java classes.\n  *\n  * @author hugo.josefson@jayway.com\n  */\n",
    "summaries": {
      "en": "Improved documentation for Android test classes",
      "zh": "完善对Android测试类的说明"
    }
  },
  {
    "type": "refactor",
    "subtype": "R3",
    "change": "diff --git a/src/edu/stanford/nlp/process/PTBTokenizer.java b/src/edu/stanford/nlp/process/PTBTokenizer.java\nindex 4880c43..b00953c 100644\n--- a/src/edu/stanford/nlp/process/PTBTokenizer.java\n+++ b/src/edu/stanford/nlp/process/PTBTokenizer.java\n@@ -163,7 +163,7 @@ import edu.stanford.nlp.util.StringUtils;\n public class PTBTokenizer<T extends HasWord> extends AbstractTokenizer<T> {\n \n   // the underlying lexer\n-  private PTBLexer lexer;\n+  private final PTBLexer lexer;\n \n \n   /**\n@@ -183,7 +183,7 @@ public class PTBTokenizer<T extends HasWord> extends AbstractTokenizer<T> {\n    * Constructs a new PTBTokenizer that makes CoreLabel tokens.\n    * It optionally returns carriage returns\n    * as their own token. CRs come back as Words whose text is\n-   * the value of <code>PTBLexer.NEWLINE_TOKEN</code>.\n+   * the value of {@code PTBLexer.NEWLINE_TOKEN}.\n    *\n    * @param r The Reader to read tokens from\n    * @param tokenizeNLs Whether to return newlines as separate tokens\n@@ -202,7 +202,7 @@ public class PTBTokenizer<T extends HasWord> extends AbstractTokenizer<T> {\n    * Constructs a new PTBTokenizer that optionally returns carriage returns\n    * as their own token, and has a custom LexedTokenFactory.\n    * If asked for, CRs come back as Words whose text is\n-   * the value of <code>PTBLexer.cr</code>.  This constructor translates\n+   * the value of {@code PTBLexer.cr}.  This constructor translates\n    * between the traditional boolean options of PTBTokenizer and the new\n    * options String.\n    *\n",
    "summaries": {
      "en": "Set the variable to final",
      "zh": "将变量设置为 final"
    }
  },
  {
    "type": "test",
    "subtype": "T1",
    "change": "diff --git a/src/test/java/org/elasticsearch/deleteByQuery/DeleteByQueryTests.java b/src/test/java/org/elasticsearch/deleteByQuery/DeleteByQueryTests.java\nindex a5a9c68..58cf6dd 100644\n--- a/src/test/java/org/elasticsearch/deleteByQuery/DeleteByQueryTests.java\n+++ b/src/test/java/org/elasticsearch/deleteByQuery/DeleteByQueryTests.java\n@@ -35,6 +35,7 @@ import static org.elasticsearch.test.hamcrest.ElasticSearchAssertions.assertHitC\n import static org.hamcrest.Matchers.equalTo;\n import static org.hamcrest.Matchers.notNullValue;\n \n+@LuceneTestCase.AwaitsFix(bugUrl = \"Martijn is working on a fix for a failure here caused by a shard reject the delete because it's in a POST_RECOVERY or RECOVERY state, because we now acquire a searcher during a delete by query shard operation.\")\n public class DeleteByQueryTests extends AbstractIntegrationTest {\n \n     @Test\n@@ -47,7 +48,6 @@ public class DeleteByQueryTests extends AbstractIntegrationTest {\n     }\n \n     @Test\n-    @LuceneTestCase.AwaitsFix(bugUrl = \"Martijn is working on a fix for a failure here caused by a shard reject the delete because it's in a POST_RECOVERY state\")\n     public void testDeleteAllOneIndex() {\n \n         String json = \"{\" + \"\\\"user\\\":\\\"kimchy\\\",\" + \"\\\"postDate\\\":\\\"2013-01-30\\\",\" + \"\\\"message\\\":\\\"trying out Elastic Search\\\"\" + \"}\";\n",
    "summaries": {
      "en": "Move Awaits to class level",
      "zh": "将 Awaits移动到类级别"
    }
  },
  {
    "type": "test",
    "subtype": "T1",
    "change": "diff --git a/enterprise/test/java/slavetest/AbstractHaTest.java b/enterprise/test/java/slavetest/AbstractHaTest.java\nindex 2ef20b3..4f8ed27 100644\n--- a/enterprise/test/java/slavetest/AbstractHaTest.java\n+++ b/enterprise/test/java/slavetest/AbstractHaTest.java\n@@ -188,7 +188,6 @@ public abstract class AbstractHaTest\n                 otherKeys.add( key );\n             }\n         }\n-        System.out.println( \"found indexing \" + otherKeys );\n         count = otherKeys.size();\n         \n         for ( String key : node.getPropertyKeys() )\n@@ -339,7 +338,6 @@ public abstract class AbstractHaTest\n         setExpectedResults( 3, 2, 2, 2, 0, 0 );\n         initializeDbs( 1 );\n         executeJob( new CommonJobs.CreateSomeEntitiesJob(), 0 );\n-        System.out.println( \"Test done\" );\n     }\n     \n     @Test\n",
    "summaries": {
      "en": "Remove unnecessary print statements",
      "zh": "删除不必要的打印语句"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/src/main/java/water/fvec/Vec.java b/src/main/java/water/fvec/Vec.java\nindex ae09af8e9..36b3db3ff 100644\n--- a/src/main/java/water/fvec/Vec.java\n+++ b/src/main/java/water/fvec/Vec.java\n@@ -701,7 +701,10 @@ public class Vec extends Iced {\n    */\n   public final static class Writer {\n     Vec _vec;\n-    private Writer(Vec v){_vec=v;}\n+    private Writer(Vec v){\n+      _vec=v;\n+      _vec.preWriting();\n+    }\n     public final long   set( long i, long   l) { return _vec.chunkForRow(i).set(i,l); }\n     public final double set( long i, double d) { return _vec.chunkForRow(i).set(i,d); }\n     public final float  set( long i, float  f) { return _vec.chunkForRow(i).set(i,f); }\n",
    "summaries": {
      "en": "Added call to Vec.preWriting() function",
      "zh": "添加Vec.preWriting()函数调用"
    }
  },
  {
    "type": "fix",
    "subtype": "Ix",
    "change": "diff --git a/components/camel-cdi/src/main/java/org/apache/camel/cdi/CdiCamelFactory.java b/components/camel-cdi/src/main/java/org/apache/camel/cdi/CdiCamelFactory.java\nindex 8196d45e2f..8644400bac 100755\n--- a/components/camel-cdi/src/main/java/org/apache/camel/cdi/CdiCamelFactory.java\n+++ b/components/camel-cdi/src/main/java/org/apache/camel/cdi/CdiCamelFactory.java\n@@ -216,9 +216,10 @@ final class CdiCamelFactory {\n             return Class.class.cast(type).getName();\n         }\n         if (type instanceof ParameterizedType) {\n-            return Stream.of(((ParameterizedType) type).getActualTypeArguments())\n+            ParameterizedType pt = (ParameterizedType) type;\n+            return Stream.of(pt.getActualTypeArguments())\n                 .map(CdiCamelFactory::authorityFromType)\n-                .collect(joining(\"%2C\", \"%3C\", \"%3E\"));\n+                .collect(joining(\"%2C\", authorityFromType(pt.getRawType()) + \"%3C\", \"%3E\"));\n         }\n         if (type instanceof GenericArrayType) {\n             GenericArrayType arrayType = (GenericArrayType) type;\n",
    "summaries": {
      "en": "Add authority information to the URL",
      "zh": "在url中加入authority信息"
    }
  },
  {
    "type": "test",
    "subtype": "T1",
    "change": "diff --git a/jOOQ-test/src/org/jooq/test/jOOQAbstractTest.java b/jOOQ-test/src/org/jooq/test/jOOQAbstractTest.java\nindex e4fbc9e50..9d9afc00e 100644\n--- a/jOOQ-test/src/org/jooq/test/jOOQAbstractTest.java\n+++ b/jOOQ-test/src/org/jooq/test/jOOQAbstractTest.java\n@@ -6947,6 +6947,7 @@ public abstract class jOOQAbstractTest<\n \r\n     @Test\r\n     public void testLoader() throws Exception {\r\n+        reset = false;\r\n         connection.setAutoCommit(false);\r\n \r\n         Field<Integer> count = create().count();\r\n",
    "summaries": {
      "en": "Add missing test flags",
      "zh": "添加缺失的测试标志"
    }
  },
  {
    "type": "refactor",
    "subtype": "R10",
    "change": "diff --git a/logging/src/main/java/org/jboss/as/logging/LoggingConfigurationProcessor.java b/logging/src/main/java/org/jboss/as/logging/LoggingConfigurationProcessor.java\nindex 2626a3d463..51f7835630 100644\n--- a/logging/src/main/java/org/jboss/as/logging/LoggingConfigurationProcessor.java\n+++ b/logging/src/main/java/org/jboss/as/logging/LoggingConfigurationProcessor.java\n@@ -153,9 +153,7 @@ public class LoggingConfigurationProcessor implements DeploymentUnitProcessor {\n      * Preference is for {@literal logging.properties} or {@literal jboss-logging.properties}.\n      *\n      * @param resourceRoot the resource to check.\n-     *\n      * @return the configuration file if found, otherwise {@code null}.\n-     *\n      * @throws DeploymentUnitProcessingException\n      *          if an error occurs.\n      */\n@@ -203,7 +201,7 @@ public class LoggingConfigurationProcessor implements DeploymentUnitProcessor {\n \n         @Override\n         public boolean accepts(final VirtualFile file) {\n-            return file.isDirectory() || configFiles.contains(file.getName());\n+            return configFiles.contains(file.getName());\n         }\n     }\n }\n",
    "summaries": {
      "en": "Delete directory matching",
      "zh": "删除目录匹配"
    }
  },
  {
    "type": "refactor",
    "subtype": "Rx",
    "change": "diff --git a/JodaTimeContrib/hibernate/src/java/org/joda/time/contrib/hibernate/PersistentInterval.java b/JodaTimeContrib/hibernate/src/java/org/joda/time/contrib/hibernate/PersistentInterval.java\nindex de9a300..e2f258e 100644\n--- a/JodaTimeContrib/hibernate/src/java/org/joda/time/contrib/hibernate/PersistentInterval.java\n+++ b/JodaTimeContrib/hibernate/src/java/org/joda/time/contrib/hibernate/PersistentInterval.java\n@@ -119,9 +119,9 @@ public class PersistentInterval implements CompositeUserType\n             return null;\r\n         }\r\n         PersistentDateTime pst = new PersistentDateTime();\r\n-        DateTime begin = (DateTime) pst.nullSafeGet(resultSet, names[0]);\r\n+        DateTime start = (DateTime) pst.nullSafeGet(resultSet, names[0]);\r\n         DateTime end = (DateTime) pst.nullSafeGet(resultSet, names[1]);\r\n-        return new Interval(begin, end);\r\n+        return new Interval(start, end);\r\n     }\r\n \r\n     public void nullSafeSet(PreparedStatement statement, Object value,\r\n",
    "summaries": {
      "en": "Modified parameter name (begin->start)",
      "zh": "修改参数名称(begin->start)"
    }
  },
  {
    "type": "cicd",
    "subtype": "Cx",
    "change": "diff --git a/Jenkinsfile b/Jenkinsfile\nindex 68fabd8..c5320e2 100644\n--- a/Jenkinsfile\n+++ b/Jenkinsfile\n@@ -2,9 +2,14 @@ pipeline {\n     agent any\n     stages {\n         stage('Build') {\n-            steps {\n-                echo 'Building...'\n-                sh 'make'\n+            steps {    \n+                try {\n+                    echo 'Building...'\n+                    sh 'make'\n+                } catch (Exception e) {\n+                    currentBuild.result = 'FAILURE'\n+                    throw e\n+                }    \n             }\n         }\n         stage('Test') {\n@@ -18,8 +20,13 @@ pipeline {\n         }\n         stage('Deploy') {\n             when {\n-                branch 'master'\n+                allOf {\n+                    branch 'master'\n+                    not {\n+                        buildingTag()\n+                    }\n+                }\n             }\n             steps {\n-                echo 'Deploying...'\n+                echo 'Deploying to Prod...'\n                sh './deploy.sh'\n             }\n         }\n     }",
    "summaries": {
      "en": "Improved Jenkins pipeline process",
      "zh": "改进Jenkins流水线过程"
    }
  },
  {
    "type": "cicd",
    "subtype": "Cx",
    "change": "diff --git a/.gitlab-ci.yml b/.gitlab-ci.yml\nindex d3c24f9..b4a1c68 100644\n--- a/.gitlab-ci.yml\n+++ b/.gitlab-ci.yml\n@@ -18,11 +22,3 @@ test:\n     - ctest --output-on-failure\n \n-cache:\n-  paths:\n-    - build/\n-  key: ${CI_COMMIT_REF_SLUG}\n-\n-.caches:\n-  - key: ${CI_COMMIT_REF_SLUG}\n-    paths:\n-      - .cache\n+  # Removed old caching strategy as it was not effective",
    "summaries": {
      "en": "Delete invalid cache policy",
      "zh": "删除无效的缓存策略"
    }
  },
  {
    "type": "refactor",
    "subtype": "R10",
    "change": "diff --git a/h2o-algos/src/main/java/hex/schemas/KMeansV2.java b/h2o-algos/src/main/java/hex/schemas/KMeansV2.java\nindex 117fbd2d1..f406df894 100644\n--- a/h2o-algos/src/main/java/hex/schemas/KMeansV2.java\n+++ b/h2o-algos/src/main/java/hex/schemas/KMeansV2.java\n@@ -30,18 +30,6 @@ public class KMeansV2 extends ModelBuilderSchema<KMeans,KMeansV2,KMeansV2.KMeans\n \n     @API(help = \"Initialization mode\", values = { \"Random\", \"PlusPlus\", \"Furthest\", \"User\" }) // TODO: pull out of enum class. . .\n     public KMeans.Initialization init;\n-\n-    @Override public KMeansParametersV2 fillFromImpl(KMeansParameters parms) {\n-      super.fillFromImpl(parms);\n-      this.init = KMeans.Initialization.Furthest;\n-      return this;\n-    }\n-\n-    public KMeansParameters fillImpl(KMeansParameters impl) {\n-      super.fillImpl(impl);\n-      impl._init = KMeans.Initialization.Furthest;\n-      return impl;\n-    }\n   }\n \n   //==========================\n",
    "summaries": {
      "en": "Delete fillFromImpl() and fillImpl() methods",
      "zh": "删除 fillFromImpl()和 fillImpl()方法"
    }
  },
  {
    "type": "fix",
    "subtype": "I2",
    "change": "diff --git a/telephony/java/com/android/internal/telephony/DataConnection.java b/telephony/java/com/android/internal/telephony/DataConnection.java\nindex 99d5520..cf06173 100644\n--- a/telephony/java/com/android/internal/telephony/DataConnection.java\n+++ b/telephony/java/com/android/internal/telephony/DataConnection.java\n@@ -274,7 +274,7 @@ public abstract class DataConnection extends HierarchicalStateMachine {\n \n         clearSettings();\n \n-        setDbg(true);\n+        setDbg(false);\n         addState(mDefaultState);\n             addState(mInactiveState, mDefaultState);\n             addState(mActivatingState, mDefaultState);\n",
    "summaries": {
      "en": "Disable HSM debugging in DataConnection for more detailed viewing",
      "zh": "在DataConnection中关闭HSM调试，以便更详细地查看"
    }
  },
  {
    "type": "refactor",
    "subtype": "R3",
    "change": "diff --git a/plugins/groovy/src/org/jetbrains/plugins/groovy/lang/psi/impl/statements/typedef/members/GrMethodDefinitionImpl.java b/plugins/groovy/src/org/jetbrains/plugins/groovy/lang/psi/impl/statements/typedef/members/GrMethodDefinitionImpl.java\nindex ef7350a..8529237 100644\n--- a/plugins/groovy/src/org/jetbrains/plugins/groovy/lang/psi/impl/statements/typedef/members/GrMethodDefinitionImpl.java\n+++ b/plugins/groovy/src/org/jetbrains/plugins/groovy/lang/psi/impl/statements/typedef/members/GrMethodDefinitionImpl.java\n@@ -199,10 +199,10 @@ public class GrMethodDefinitionImpl extends GroovyPsiElementImpl implements GrMe\n     PsiClassType[] superClassTypes = psiClass.getSuperTypes();\n \n     for (PsiClassType superClassType : superClassTypes) {\n-      assert superClassType instanceof GrInterfaceDefinition;\n-\n       PsiClass resolvedSuperClass = superClassType.resolve();\n \n+      assert resolvedSuperClass instanceof GrInterfaceDefinition;\n+\n       if (resolvedSuperClass == null) continue;\n       PsiMethod[] superClassMethods = resolvedSuperClass.getMethods();\n \n",
    "summaries": {
      "en": "Fix bug: Type checking can only be performed after the super class is resolved",
      "zh": "修复错误：super class在resolve之后才能进行类型检查"
    }
  },
  {
    "type": "docs",
    "subtype": "D2",
    "change": "diff --git a/realm/src/main/java/io/realm/RealmQuery.java b/realm/src/main/java/io/realm/RealmQuery.java\nindex 1ce8125..40369c5 100644\n--- a/realm/src/main/java/io/realm/RealmQuery.java\n+++ b/realm/src/main/java/io/realm/RealmQuery.java\n@@ -29,11 +29,20 @@ import io.realm.internal.TableQuery;\n import io.realm.internal.TableView;\n \n /**\n+ * A RealmQuery encapsulates a query on a {@link io.realm.Realm} or a {@link io.realm.RealmResults}\n+ * using the Builder pattern. The query is executed using either {@link #findAll()} or\n+ * {@link #findFirst()}\n  *\n+ * The input to many of the query functions take a field name as as String. Note that this is not\n+ * type safe, so if a model class is refactored care has to be taken to not break any queries.\n+ * This is not optimal, but it is our current best compromise between ease of use and type safety.\n  *\n  * A RealmQuery cannot be parsed between different threads.\n  *\n- * @param <E> The class of objects to be queried\n+ * @param <E> The class of the objects to be queried.\n+ * @see <a href=\"http://en.wikipedia.org/wiki/Builder_pattern\">Builder pattern</a>\n+ * @see Realm#where(Class)\n+ * @see RealmResults#where()\n  */\n public class RealmQuery<E extends RealmObject> {\n \n",
    "summaries": {
      "en": "Add a reference link to the builder pattern in the documentation comment of the RealmQuery class",
      "zh": "在RealmQuery类的文档注释中添加建造者模式的参考链接"
    }
  },
  {
    "type": "fix",
    "subtype": "I3",
    "change": "diff --git a/sql/src/main/java/io/crate/executor/transport/TableCreator.java b/sql/src/main/java/io/crate/executor/transport/TableCreator.java\nindex d848b6e05..a73e55d3b 100644\n--- a/sql/src/main/java/io/crate/executor/transport/TableCreator.java\n+++ b/sql/src/main/java/io/crate/executor/transport/TableCreator.java\n@@ -135,7 +135,7 @@ public class TableCreator {\n     private void setException(SettableFuture<Long> result, Throwable e, CreateTableAnalyzedStatement statement) {\n         e = Exceptions.unwrap(e);\n         String message = e.getMessage();\n-        if (message.equals(\"mapping [default]\") && e.getCause() != null) {\n+        if (\"mapping [default]\".equals(message) && e.getCause() != null) {\n             // this is a generic mapping parse exception,\n             // the cause has usually a better more detailed error message\n             result.setException(e.getCause());\n",
    "summaries": {
      "en": "Fix NPE in equals() comparison",
      "zh": "修复equals()比较中的NPE"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/platform/core-impl/src/com/intellij/extapi/psi/StubBasedPsiElementBase.java b/platform/core-impl/src/com/intellij/extapi/psi/StubBasedPsiElementBase.java\nindex 1f2ae4e..75e4821 100644\n--- a/platform/core-impl/src/com/intellij/extapi/psi/StubBasedPsiElementBase.java\n+++ b/platform/core-impl/src/com/intellij/extapi/psi/StubBasedPsiElementBase.java\n@@ -502,6 +502,21 @@ public class StubBasedPsiElementBase<T extends StubElement> extends ASTDelegateP\n     return PsiTreeUtil.getParentOfType(this, parentClass);\n   }\n \n+  /**\n+   * @return same as {@link #getParentByStub()}\n+   * to remove in IDEA 16\n+   */\n+  @Nullable\n+  @Deprecated\n+  protected PsiElement getStubOrPsiParent() {\n+    T stub = myStub;\n+    if (stub != null) {\n+      //noinspection unchecked\n+      return stub.getParentStub().getPsi();\n+    }\n+    return getParent();\n+  }\n+\n   @Override\n   protected Object clone() {\n     final StubBasedPsiElementBase copy = (StubBasedPsiElementBase)super.clone();\n",
    "summaries": {
      "en": "Added a deprecated method getStubOrPsiParent()",
      "zh": "添加一个已弃用的方法 getStubOrPsiParent()"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/engine/src/bullet-common/com/jme3/bullet/control/ragdoll/HumanoidRagdollPreset.java b/engine/src/bullet-common/com/jme3/bullet/control/ragdoll/HumanoidRagdollPreset.java\nindex d090cb594..cd9829e61 100644\n--- a/engine/src/bullet-common/com/jme3/bullet/control/ragdoll/HumanoidRagdollPreset.java\n+++ b/engine/src/bullet-common/com/jme3/bullet/control/ragdoll/HumanoidRagdollPreset.java\n@@ -85,6 +85,7 @@ public class HumanoidRagdollPreset extends RagdollPreset {\n         entry = new LexiconEntry();\n         entry.addSynonym(\"lowerleg\", 100);\n         entry.addSynonym(\"calf\", 100);\n+        entry.addSynonym(\"shin\", 100);\n         entry.addSynonym(\"knee\", 75);\n         entry.addSynonym(\"leg\", 50);\n         entry.addSynonym(\"low\", 10);\n",
    "summaries": {
      "en": "Add entry to vocabulary",
      "zh": "在词汇表中添加条目"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/opentripplanner-routing/src/main/java/org/opentripplanner/routing/core/RoutingRequest.java b/opentripplanner-routing/src/main/java/org/opentripplanner/routing/core/RoutingRequest.java\nindex edf5cbf1f..3b2639af9 100644\n--- a/opentripplanner-routing/src/main/java/org/opentripplanner/routing/core/RoutingRequest.java\n+++ b/opentripplanner-routing/src/main/java/org/opentripplanner/routing/core/RoutingRequest.java\n@@ -795,4 +795,11 @@ public class RoutingRequest implements Cloneable, Serializable {\n     public String getBannedRouteStr() {\n         return getRouteSetStr(bannedRoutes);\n     }\n+\n+    public void setMaxWalkDistance(double maxWalkDistance) {\n+        this.maxWalkDistance = maxWalkDistance;\n+        if (walkingOptions != null && walkingOptions != this) {\n+            this.walkingOptions.setMaxWalkDistance(maxWalkDistance);\n+        }\n+    }\n }\n",
    "summaries": {
      "en": "Translate the maximum walking distance to the walking parameters",
      "zh": "将最大步行距离传播到步行参数"
    }
  },
  {
    "type": "refactor",
    "subtype": "R3",
    "change": "diff --git a/subprojects/groovy-templates/src/main/groovy/groovy/text/markup/MarkupTemplateEngine.java b/subprojects/groovy-templates/src/main/groovy/groovy/text/markup/MarkupTemplateEngine.java\nindex 0c439f3e5..c02de8cb9 100644\n--- a/subprojects/groovy-templates/src/main/groovy/groovy/text/markup/MarkupTemplateEngine.java\n+++ b/subprojects/groovy-templates/src/main/groovy/groovy/text/markup/MarkupTemplateEngine.java\n@@ -39,6 +39,8 @@ import java.io.StringReader;\n import java.net.MalformedURLException;\n import java.net.URL;\n import java.net.URLClassLoader;\n+import java.security.AccessController;\n+import java.security.PrivilegedAction;\n import java.util.Collections;\n import java.util.Map;\n import java.util.concurrent.atomic.AtomicLong;\n@@ -62,7 +64,7 @@ public class MarkupTemplateEngine extends TemplateEngine {\n         this(MarkupTemplateEngine.class.getClassLoader(), new TemplateConfiguration());\n     }\n \n-    public MarkupTemplateEngine(ClassLoader parentLoader, TemplateConfiguration tplConfig) {\n+    public MarkupTemplateEngine(final ClassLoader parentLoader, final TemplateConfiguration tplConfig) {\n         compilerConfiguration = new CompilerConfiguration();\n         templateConfiguration = tplConfig;\n         compilerConfiguration.addCompilationCustomizers(new TemplateASTTransformer(tplConfig));\n@@ -78,7 +80,11 @@ public class MarkupTemplateEngine extends TemplateEngine {\n                     }\n             );\n         }\n-        groovyClassLoader = new TemplateGroovyClassLoader(parentLoader, compilerConfiguration);\n+        groovyClassLoader = AccessController.doPrivileged(new PrivilegedAction<TemplateGroovyClassLoader>() {\n+            public TemplateGroovyClassLoader run() {\n+                return new TemplateGroovyClassLoader(parentLoader, compilerConfiguration);\n+            }\n+        });\n     }\n \n     /**\n",
    "summaries": {
      "en": "Create class loader in privileged block",
      "zh": "在特权块中创建类加载器"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/OsmAnd/src/net/osmand/plus/dashboard/DashMapFragment.java b/OsmAnd/src/net/osmand/plus/dashboard/DashMapFragment.java\nindex a7a5b8b8f5..b4527e4c28 100644\n--- a/OsmAnd/src/net/osmand/plus/dashboard/DashMapFragment.java\n+++ b/OsmAnd/src/net/osmand/plus/dashboard/DashMapFragment.java\n@@ -78,10 +78,16 @@ public class DashMapFragment extends DashBaseFragment implements IMapDownloaderC\n \t\tif (view == null) {\n \t\t\treturn;\n \t\t}\n-\t\tBitmap image = getMyApplication().getResourceManager().getRenderer().getBitmap();\n-\t\tImageView map = (ImageView) view.findViewById(R.id.map_image);\n+\t\tfinal Bitmap image = getMyApplication().getResourceManager().getRenderer().getBitmap();\n+\t\tfinal ImageView map = (ImageView) view.findViewById(R.id.map_image);\n \t\tif (image != null) {\n-\t\t\tmap.setImageBitmap(image);\n+\t\t\tgetActivity().runOnUiThread(new Runnable() {\n+\t\t\t\t@Override\n+\t\t\t\tpublic void run() {\n+\t\t\t\t\tmap.setImageBitmap(image);\n+\t\t\t\t}\n+\t\t\t});\n+\n \t\t}\n \t}\n \n",
    "summaries": {
      "en": "Fixed the bug of setting image in MapFragment on the wrong thread",
      "zh": "修复了 MapFragment 在错误的线程中设置图像的 bug"
    }
  },
  {
    "type": "refactor",
    "subtype": "R10",
    "change": "diff --git a/src/com/fsck/k9/helper/HtmlConverter.java b/src/com/fsck/k9/helper/HtmlConverter.java\nindex f1b88b4..14eb75f 100644\n--- a/src/com/fsck/k9/helper/HtmlConverter.java\n+++ b/src/com/fsck/k9/helper/HtmlConverter.java\n@@ -282,17 +282,6 @@ public class HtmlConverter {\n         // Replace lines of -,= or _ with horizontal rules\n         text = text.replaceAll(\"\\\\s*([-=_]{30,}+)\\\\s*\", \"<hr />\");\n \n-        /*\n-         * Unwrap multi-line paragraphs into single line paragraphs that are\n-         * wrapped when displayed. But try to avoid unwrapping consecutive lines\n-         * of text that are not paragraphs, such as lists of system log entries\n-         * or long URLs that are on their own line.\n-         */\n-        text = text.replaceAll(\"(?m)^([^\\r\\n]{4,}[\\\\s\\\\w,:;+/])(?:\\r\\n|\\n|\\r)(?=[a-z]\\\\S{0,10}[\\\\s\\\\n\\\\r])\", \"$1 \");\n-\n-        // Compress four or more newlines down to two newlines\n-        text = text.replaceAll(\"(?m)(\\r\\n|\\n|\\r){4,}\", \"\\r\\n\\r\\n\");\n-\n         StringBuffer sb = new StringBuffer(text.length() + TEXT_TO_HTML_EXTRA_BUFFER_LENGTH);\n \n         sb.append(htmlifyMessageHeader());\n",
    "summaries": {
      "en": "Deleted text processing step",
      "zh": "删除了文本处理步骤"
    }
  },
  {
    "type": "test",
    "subtype": "T1",
    "change": "diff --git a/sql/src/test/java/io/crate/jobs/KeepAliveTimersTest.java b/sql/src/test/java/io/crate/jobs/KeepAliveTimersTest.java\nindex 47f870c6c..0696fed31 100644\n--- a/sql/src/test/java/io/crate/jobs/KeepAliveTimersTest.java\n+++ b/sql/src/test/java/io/crate/jobs/KeepAliveTimersTest.java\n@@ -80,7 +80,7 @@ public class KeepAliveTimersTest extends CrateUnitTest {\n         KeepAliveTimers.ResettableTimer timer = futureAndTimer.v2();\n         SettableFuture<Void> future = futureAndTimer.v1();\n         timer.start();\n-        future.get(100, TimeUnit.MILLISECONDS);\n+        future.get(1000, TimeUnit.MILLISECONDS);\n     }\n \n     @Test\n",
    "summaries": {
      "en": "Change the timeout of future.get() from 100 milliseconds to 1000 milliseconds",
      "zh": "将 future.get()的超时时间从 100 毫秒改为 1000 毫秒"
    }
  },
  {
    "type": "docs",
    "subtype": "D2",
    "change": "diff --git a/core/src/main/java/com/twitter/elephantbird/mapreduce/input/LzoBinaryBlockRecordReader.java b/core/src/main/java/com/twitter/elephantbird/mapreduce/input/LzoBinaryBlockRecordReader.java\nindex d396f0de..dd479eb9 100644\n--- a/core/src/main/java/com/twitter/elephantbird/mapreduce/input/LzoBinaryBlockRecordReader.java\n+++ b/core/src/main/java/com/twitter/elephantbird/mapreduce/input/LzoBinaryBlockRecordReader.java\n@@ -94,7 +94,8 @@ public class LzoBinaryBlockRecordReader<M, W extends BinaryWritable<M>>\n     LOG.debug(\"LzoProtobufBlockRecordReader.skipToNextSyncPoint called with atFirstRecord = \" + atFirstRecord);\n     updatePosition = !atFirstRecord;\n     // except for the first split, skip a protobuf block if it starts exactly at the split boundary\n-    // because such a block would be read by the previous split\n+    // because such a block would be read by the previous split (note comment about 'pos_ > end_'\n+    // in nextKeyValue() below)\n     reader_.parseNextBlock(!atFirstRecord);\n   }\n \n@@ -122,6 +123,12 @@ public class LzoBinaryBlockRecordReader<M, W extends BinaryWritable<M>>\n     while (true) { // loop to skip over bad records\n       if (pos_ > end_) {\n         reader_.markNoMoreNewBlocks();\n+        // Why not pos_ >= end_, stop when when we just reached the end?\n+        // we don't know if we have read all the bytes uncompressed in the current lzo block,\n+        // only way to make sure that we have read all of the split is to read till the\n+        // first record that has at least one byte in the next split.\n+        // As a consequence of this, next split reader skips at least one byte\n+        // (i.e. skips either partial or full record at the beginning).\n       }\n \n       value_.set(null);\n",
    "summaries": {
      "en": "Added comment about 'pos > end'",
      "zh": "添加关于'pos > end'的注释"
    }
  },
  {
    "type": "refactor",
    "subtype": "R3",
    "change": "diff --git a/java/org/apache/coyote/http11/InternalNioOutputBuffer.java b/java/org/apache/coyote/http11/InternalNioOutputBuffer.java\nindex a7cbf6db5..9891ab122 100644\n--- a/java/org/apache/coyote/http11/InternalNioOutputBuffer.java\n+++ b/java/org/apache/coyote/http11/InternalNioOutputBuffer.java\n@@ -419,7 +419,7 @@ public class InternalNioOutputBuffer\n \n     }\n \n-    private synchronized void writeToSocket(ByteBuffer bytebuffer, boolean flip) throws IOException {\n+    private synchronized int writeToSocket(ByteBuffer bytebuffer, boolean flip) throws IOException {\n         //int limit = bytebuffer.position();\n         if ( flip ) bytebuffer.flip();\n         int written = 0;\n@@ -440,6 +440,7 @@ public class InternalNioOutputBuffer\n         }\n         socket.getBufHandler().getWriteBuffer().clear();\n         this.total = 0;\n+        return written;\n     } \n \n \n",
    "summaries": {
      "en": "Return the number of bytes written",
      "zh": "返回写入的字节数量"
    }
  },
  {
    "type": "refactor",
    "subtype": "R3",
    "change": "diff --git a/src/com/fsck/k9/activity/MessageCompose.java b/src/com/fsck/k9/activity/MessageCompose.java\nindex 35acb0c..cf8851d 100644\n--- a/src/com/fsck/k9/activity/MessageCompose.java\n+++ b/src/com/fsck/k9/activity/MessageCompose.java\n@@ -2325,13 +2325,14 @@ public class MessageCompose extends K9Activity implements OnClickListener, OnFoc\n     /**\n      * Add quoting markup to a message.\n      * @param originalMessage Metadata for message being quoted.\n-     * @param body Text of the message to be quoted.\n+     * @param messageBody Text of the message to be quoted.\n      * @param quoteStyle Style of quoting.\n      * @return Quoted text.\n      * @throws MessagingException\n      */\n-    private String quoteOriginalMessage(final Message originalMessage, final String body, final Account.QuoteStyle quoteStyle) throws MessagingException\n+    private String quoteOriginalMessage(final Message originalMessage, final String messageBody, final Account.QuoteStyle quoteStyle) throws MessagingException\n     {\n+        String body = messageBody == null ? \"\" : messageBody;\n         if (quoteStyle == Account.QuoteStyle.PREFIX)\n         {\n             StringBuilder quotedText = new StringBuilder(body.length() + QUOTE_BUFFER_LENGTH);\n@@ -2377,10 +2378,7 @@ public class MessageCompose extends K9Activity implements OnClickListener, OnFoc\n             }\n             quotedText.append(\"\\n\");\n \n-            if (body != null)\n-            {\n-                quotedText.append(body);\n-            }\n+            quotedText.append(body);\n \n             return quotedText.toString();\n         }\n",
    "summaries": {
      "en": "Modified the logic for checking empty values in the body",
      "zh": "修改body的空值检查逻辑"
    }
  },
  {
    "type": "fix",
    "subtype": "I8",
    "change": "diff --git a/library/src/com/bumptech/glide/resize/cache/DiskLruCacheWrapper.java b/library/src/com/bumptech/glide/resize/cache/DiskLruCacheWrapper.java\nindex 9673934..1c62830 100644\n--- a/library/src/com/bumptech/glide/resize/cache/DiskLruCacheWrapper.java\n+++ b/library/src/com/bumptech/glide/resize/cache/DiskLruCacheWrapper.java\n@@ -9,6 +9,7 @@ import com.jakewharton.disklrucache.DiskLruCache;\n import java.io.File;\n import java.io.IOException;\n import java.io.InputStream;\n+import java.io.OutputStream;\n \n /**\n  * The default DiskCache implementation. There must be no more than one active instance for a given\n@@ -77,8 +78,10 @@ public class DiskLruCacheWrapper implements DiskCache {\n             //editor will be null if there are two concurrent puts\n             //worst case just silently fail\n             if (editor != null) {\n-                writer.write(editor.newOutputStream(0));\n+                OutputStream os = editor.newOutputStream(0);\n+                writer.write(os);\n                 editor.commit();\n+                os.close();\n             }\n         } catch (IOException e) {\n             e.printStackTrace();\n",
    "summaries": {
      "en": "Fix unclosed OutputStream in DiskLruCacheWrapper (reported by StrictMode)",
      "zh": "修复DiskLruCacheWrapper中未关闭的OutputStream（由StrictMode报告）"
    }
  },
  {
    "type": "feat",
    "subtype": "E2",
    "change": "diff --git a/android/sdk/src/main/java/com/taobao/weex/WXSDKEngine.java b/android/sdk/src/main/java/com/taobao/weex/WXSDKEngine.java\nindex 49a824b..7dc0cfc 100755\n--- a/android/sdk/src/main/java/com/taobao/weex/WXSDKEngine.java\n+++ b/android/sdk/src/main/java/com/taobao/weex/WXSDKEngine.java\n@@ -345,7 +345,7 @@ public class WXSDKEngine {\n    * {@link WXModuleManager#registerModule(String, ModuleFactory, boolean)}\n    */\n   public static <T extends WXModule> boolean registerModule(String moduleName, Class<T> moduleClass,boolean global) throws WXException {\n-    return registerModule(moduleName, new TypeModuleFactory(moduleClass),global);\n+    return moduleClass != null && registerModule(moduleName, new TypeModuleFactory<>(moduleClass), global);\n   }\n \n   /**\n",
    "summaries": {
      "en": "Stop registration when the class is empty",
      "zh": "当类为空时停止注册"
    }
  },
  {
    "type": "refactor",
    "subtype": "R4",
    "change": "diff --git a/grails-bootstrap/src/main/groovy/org/codehaus/groovy/grails/resolve/GrailsCoreDependencies.java b/grails-bootstrap/src/main/groovy/org/codehaus/groovy/grails/resolve/GrailsCoreDependencies.java\nindex 6c5c0b8f1a..d86cadc70e 100644\n--- a/grails-bootstrap/src/main/groovy/org/codehaus/groovy/grails/resolve/GrailsCoreDependencies.java\n+++ b/grails-bootstrap/src/main/groovy/org/codehaus/groovy/grails/resolve/GrailsCoreDependencies.java\n@@ -95,6 +95,7 @@ public class GrailsCoreDependencies {\n \n                         String springVersion = \"3.1.0.M2\";\n                         String antVersion = \"1.8.2\";\n+                        String groovyVersion = \"1.8.3-SNAPSHOT\";\n                         String slf4jVersion = \"1.6.2\";\n                         String junitVersion = \"4.9\";\n                         ModuleRevisionId[] buildDependencies = {\n@@ -120,7 +121,7 @@ public class GrailsCoreDependencies {\n                             ModuleRevisionId.newInstance(\"junit\", \"junit\", junitVersion),\n                         };\n                         registerDependencies(dependencyManager, \"build\", buildDependencies);\n-                        \n+\n                         ModuleRevisionId[] antDependencies = {\n                                 ModuleRevisionId.newInstance(\"org.apache.ant\", \"ant\", antVersion),\n                                 ModuleRevisionId.newInstance(\"org.apache.ant\", \"ant-launcher\", antVersion),\n@@ -149,7 +150,7 @@ public class GrailsCoreDependencies {\n \n                         // dependencies needed at compile time\n                         ModuleRevisionId[] groovyDependencies = {\n-                            ModuleRevisionId.newInstance(\"org.codehaus.groovy\", \"groovy-all\", \"1.8.2\")\n+                            ModuleRevisionId.newInstance(\"org.codehaus.groovy\", \"groovy-all\", groovyVersion)\n                         };\n                         registerDependencies(dependencyManager, compileTimeDependenciesMethod, groovyDependencies, \"jline\");\n \n",
    "summaries": {
      "en": "Update Groovy version to 1.8.3-SNAPSHOT",
      "zh": "更新Groovy版本为1.8.3-SNAPSHOT"
    }
  },
  {
    "type": "feat",
    "subtype": "E2",
    "change": "diff --git a/core/java/android/preference/VolumePreference.java b/core/java/android/preference/VolumePreference.java\nindex 970d520..0219fe8 100644\n--- a/core/java/android/preference/VolumePreference.java\n+++ b/core/java/android/preference/VolumePreference.java\n@@ -109,7 +109,9 @@ public class VolumePreference extends SeekBarPreference implements\n     }\n \n     public void onActivityStop() {\n-        cleanup();\n+        if (mSeekBarVolumizer != null) {\n+            mSeekBarVolumizer.stopSample();\n+        }\n     }\n \n     /**\n",
    "summaries": {
      "en": "Added null check for mSeekBarVolumizer",
      "zh": "添加mSeekBarVolumizer 为空检查"
    }
  },
  {
    "type": "feat",
    "subtype": "E1",
    "change": "diff --git a/src/main/java/com/commafeed/frontend/pages/HomePage.java b/src/main/java/com/commafeed/frontend/pages/HomePage.java\nindex 17c801ac..165cc612 100644\n--- a/src/main/java/com/commafeed/frontend/pages/HomePage.java\n+++ b/src/main/java/com/commafeed/frontend/pages/HomePage.java\n@@ -4,6 +4,7 @@ import org.apache.wicket.markup.head.CssHeaderItem;\n import org.apache.wicket.markup.head.IHeaderResponse;\r\n import org.apache.wicket.request.mapper.parameter.PageParameters;\r\n \r\n+import com.commafeed.backend.model.User;\r\n import com.commafeed.backend.model.UserRole.Role;\r\n import com.commafeed.backend.model.UserSettings;\r\n import com.commafeed.frontend.CommaFeedSession;\r\n@@ -21,7 +22,11 @@ public class HomePage extends BasePage {\n \t\tresponse.render(CssHeaderItem.forReference(new UserCustomCssReference() {\r\n \t\t\t@Override\r\n \t\t\tprotected String getCss() {\r\n-\t\t\t\tUserSettings settings = userSettingsDAO.findByUser(CommaFeedSession.get().getUser());\r\n+\t\t\t\tUser user = CommaFeedSession.get().getUser();\r\n+\t\t\t\tif (user == null) {\r\n+\t\t\t\t\treturn null;\r\n+\t\t\t\t}\r\n+\t\t\t\tUserSettings settings = userSettingsDAO.findByUser(user);\r\n \t\t\t\treturn settings == null ? null : settings.getCustomCss();\r\n \t\t\t}\r\n \t\t}, new PageParameters().add(\"_t\", System.currentTimeMillis()), null));\r\n",
    "summaries": {
      "en": "Prevent NPE when session does not exist",
      "zh": "防止会话不存在时出现NPE"
    }
  },
  {
    "type": "feat",
    "subtype": "E2",
    "change": "diff --git a/liquibase-core/src/main/java/liquibase/configuration/ConfigurationProperty.java b/liquibase-core/src/main/java/liquibase/configuration/ConfigurationProperty.java\nindex cbc835175..bd74cc0cb 100644\n--- a/liquibase-core/src/main/java/liquibase/configuration/ConfigurationProperty.java\n+++ b/liquibase-core/src/main/java/liquibase/configuration/ConfigurationProperty.java\n@@ -95,6 +95,8 @@ public class ConfigurationProperty {\n                 return Integer.valueOf((String) value);\n             } else if (type.equals(BigDecimal.class)) {\n                 return new BigDecimal((String) value);\n+            } else if (type.equals(Long.class)) {\n+            \treturn new Long((String) value);\n             } else {\n                 throw new UnexpectedLiquibaseException(\"Cannot parse property \"+type.getSimpleName()+\" to a \"+type.getSimpleName());\n             }\n",
    "summaries": {
      "en": "Add support for Long type",
      "zh": "增加对 Long 类型的支持"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/java/testFramework/src/com/intellij/testFramework/ModuleTestCase.java b/java/testFramework/src/com/intellij/testFramework/ModuleTestCase.java\nindex 71a5c0d..684da0d 100644\n--- a/java/testFramework/src/com/intellij/testFramework/ModuleTestCase.java\n+++ b/java/testFramework/src/com/intellij/testFramework/ModuleTestCase.java\n@@ -17,6 +17,7 @@ package com.intellij.testFramework;\n \n import com.intellij.ide.highlighter.ModuleFileType;\n import com.intellij.openapi.application.ApplicationManager;\n+import com.intellij.openapi.command.WriteCommandAction;\n import com.intellij.openapi.module.Module;\n import com.intellij.openapi.module.ModuleManager;\n import com.intellij.openapi.module.ModuleType;\n@@ -159,7 +160,13 @@ public abstract class ModuleTestCase extends IdeaTestCase {\n     final File moduleDir = createTempDirectory();\n     FileUtil.copyDir(dirInTestDataFile, moduleDir);\n     final Module module = createModule(moduleDir + \"/\" + newModuleFileName, moduleType);\n-    VirtualFile root = LocalFileSystem.getInstance().refreshAndFindFileByIoFile(moduleDir);\n+    final VirtualFile root = LocalFileSystem.getInstance().refreshAndFindFileByIoFile(moduleDir);\n+    new WriteCommandAction.Simple(module.getProject()) {\n+      @Override\n+      protected void run() throws Throwable {\n+        root.refresh(false, true);\n+      }\n+    }.execute().throwException();\n     if (addSourceRoot) {\n       PsiTestUtil.addSourceContentToRoots(module, root);\n     }\n",
    "summaries": {
      "en": "Add WriteCommandAction.Simple to refresh virtual files",
      "zh": "添加 WriteCommandAction.Simple 来刷新虚拟文件"
    }
  },
  {
    "type": "refactor",
    "subtype": "R3",
    "change": "diff --git a/src/main/java/com/github/droidfu/concurrent/BetterAsyncTask.java b/src/main/java/com/github/droidfu/concurrent/BetterAsyncTask.java\nindex 3023737..f3a6690 100755\n--- a/src/main/java/com/github/droidfu/concurrent/BetterAsyncTask.java\n+++ b/src/main/java/com/github/droidfu/concurrent/BetterAsyncTask.java\n@@ -50,14 +50,15 @@ import com.github.droidfu.activities.BetterActivity;\n public abstract class BetterAsyncTask<ParameterT, ProgressT, ReturnT> extends\n         AsyncTask<ParameterT, ProgressT, ReturnT> {\n \n-    private DroidFuApplication appContext;\n+    private final DroidFuApplication appContext;\n+    private final boolean contextIsDroidFuActivity;\n \n     private Exception error;\n \n-    private boolean contextIsDroidFuActivity, isTitleProgressEnabled,\n+    private boolean isTitleProgressEnabled,\n             isTitleProgressIndeterminateEnabled = true;\n \n-    private String callerId;\n+    private final String callerId;\n \n     private BetterAsyncTaskCallable<ParameterT, ProgressT, ReturnT> callable;\n \n",
    "summaries": {
      "en": "Change some variables to final in BetterAsyncTask",
      "zh": "在 BetterAsyncTask 中将一些变量更改为 final"
    }
  },
  {
    "type": "refactor",
    "subtype": "R3",
    "change": "diff --git a/core/src/main/java/com/orientechnologies/orient/core/db/record/OClassTrigger.java b/core/src/main/java/com/orientechnologies/orient/core/db/record/OClassTrigger.java\nindex 6b132aa..186dc0a 100644\n--- a/core/src/main/java/com/orientechnologies/orient/core/db/record/OClassTrigger.java\n+++ b/core/src/main/java/com/orientechnologies/orient/core/db/record/OClassTrigger.java\n@@ -296,7 +296,8 @@ public class OClassTrigger extends ODocumentHookAbstract {\n     try {\n       if (func.getLanguage() == null)\n         throw new OConfigurationException(\"Database function '\" + func.getName() + \"' has no language\");\n-      final String funcStr = scriptManager.getFunctionDefinition(func);\n+      //final String funcStr = scriptManager.getFunctionDefinition(func);\n+      final String funcStr = scriptManager.getLibrary(db, func.getLanguage());\n       if (funcStr != null) {\n         try {\n           scriptEngine.eval(funcStr);\n",
    "summaries": {
      "en": "Change to use getLibrary() to obtain function definitions",
      "zh": "改用getLibrary()获取函数定义"
    }
  },
  {
    "type": "refactor",
    "subtype": "R5",
    "change": "diff --git a/config/config-api/src/com/thoughtworks/go/domain/label/PipelineLabel.java b/config/config-api/src/com/thoughtworks/go/domain/label/PipelineLabel.java\nindex 69ea770..5a0f6a1 100644\n--- a/config/config-api/src/com/thoughtworks/go/domain/label/PipelineLabel.java\n+++ b/config/config-api/src/com/thoughtworks/go/domain/label/PipelineLabel.java\n@@ -21,6 +21,7 @@ import java.util.Map;\n import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n \n+import com.thoughtworks.go.config.CaseInsensitiveString;\n import com.thoughtworks.go.util.StringUtil;\n import org.apache.commons.lang.StringUtils;\n \n@@ -55,7 +56,7 @@ public class PipelineLabel implements Serializable {\n     }\n \n     private static String lookupMaterialRevision(Matcher matcher,  Map<String, String> materialRevisions) {\n-        final String material = matcher.group(1);\n+        final String material = matcher.group(1).toLowerCase();\n \n         if (!materialRevisions.containsKey(material)) {\n             return \"\\\\\" + matcher.group(0);\n",
    "summaries": {
      "en": "Translate matched material names to lowercase letters",
      "zh": "将匹配到的材料名称转换为小写字母"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/src/main/java/com/thinkaurelius/titan/graphdb/query/AtomicTitanQuery.java b/src/main/java/com/thinkaurelius/titan/graphdb/query/AtomicTitanQuery.java\nindex 4405aa8..e9976cf 100644\n--- a/src/main/java/com/thinkaurelius/titan/graphdb/query/AtomicTitanQuery.java\n+++ b/src/main/java/com/thinkaurelius/titan/graphdb/query/AtomicTitanQuery.java\n@@ -504,6 +504,7 @@ public class AtomicTitanQuery implements InternalTitanQuery {\n     }\n \n     private VertexListInternal retrieveFromMemory(VertexListInternal vertices) {\n+        edgesOnly();\n         if (node==null) node = tx.getExistingVertex(nodeid);\n         AtomicTitanQuery q = new AtomicTitanQuery(node,this);\n         Iterator<TitanEdge> iter = q.edgeIterator();\n@@ -515,6 +516,7 @@ public class AtomicTitanQuery implements InternalTitanQuery {\n     }\n \n     public VertexListInternal getVertexIDs() {\n+        edgesOnly();\n         Preconditions.checkNotNull(tx);\n         Preconditions.checkArgument(node==null || (!node.isNew() && !node.isModified()),\n                 \"Cannot query for raw neighborhood on new or modified node.\");\n",
    "summaries": {
      "en": "Add edgesOnly() method call",
      "zh": "添加 edgesOnly()方法调用"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/sample/src/main/java/com/bluejamesbond/text/sample/helper/TestActivity.java b/sample/src/main/java/com/bluejamesbond/text/sample/helper/TestActivity.java\nindex d2ecd24..1df2706 100644\n--- a/sample/src/main/java/com/bluejamesbond/text/sample/helper/TestActivity.java\n+++ b/sample/src/main/java/com/bluejamesbond/text/sample/helper/TestActivity.java\n@@ -118,6 +118,7 @@ public class TestActivity extends Activity {\n                     cacheConfigToast.setText(\"Activated \" + newCacheConfig.name());\n                     cacheConfigToast.show();\n                     documentView.setCacheConfig(newCacheConfig);\n+                    documentView.destroyCache();\n                     documentView.invalidate();\n                 }\n             });\n",
    "summaries": {
      "en": "Call the documentView.destroyCache() method",
      "zh": "调用 documentView.destroyCache()方法"
    }
  },
  {
    "type": "fix",
    "subtype": "I2",
    "change": "diff --git a/client/src/main/java/com/metamx/druid/query/timeboundary/TimeBoundaryQuery.java b/client/src/main/java/com/metamx/druid/query/timeboundary/TimeBoundaryQuery.java\nindex 541d534..82ec156 100644\n--- a/client/src/main/java/com/metamx/druid/query/timeboundary/TimeBoundaryQuery.java\n+++ b/client/src/main/java/com/metamx/druid/query/timeboundary/TimeBoundaryQuery.java\n@@ -43,8 +43,8 @@ import java.util.Map;\n public class TimeBoundaryQuery extends BaseQuery<Result<TimeBoundaryResultValue>>\n {\n   public static final Interval MY_Y2K_INTERVAL = new Interval(\n-      new DateTime(Long.MIN_VALUE),\n-      new DateTime(Long.MAX_VALUE)\n+      new DateTime(Integer.MIN_VALUE),\n+      new DateTime(Integer.MAX_VALUE)\n   );\n   public static final String MAX_TIME = \"maxTime\";\n   public static final String MIN_TIME = \"minTime\";\n",
    "summaries": {
      "en": "Reduce the boundary of the time boundary to prevent boundary errors",
      "zh": "将时间边界的边界减小一点，防止边界错误"
    }
  },
  {
    "type": "refactor",
    "subtype": "R9",
    "change": "diff --git a/src/main/java/com/jakewharton/DiskLruCache.java b/src/main/java/com/jakewharton/DiskLruCache.java\nindex 6863747..5a6d7f1 100644\n--- a/src/main/java/com/jakewharton/DiskLruCache.java\n+++ b/src/main/java/com/jakewharton/DiskLruCache.java\n@@ -796,12 +796,13 @@ public final class DiskLruCache implements Closeable {\n                 //Try twice to get the file. If we get a FNF make a quick effort\n                 //to recreate the directory in which the cache should exist.\n                 //See: https://github.com/JakeWharton/DiskLruCache/issues/2\n+                File outFile = entry.getDirtyFile(index);\n                 FileOutputStream out;\n                 try {\n-                    out = new FileOutputStream(entry.getDirtyFile(index));\n+                    out = new FileOutputStream(outFile);\n                 } catch (FileNotFoundException e) {\n                     directory.mkdirs();\n-                    out = new FileOutputStream(entry.getDirtyFile(index));\n+                    out = new FileOutputStream(outFile);\n                 }\n                 return new FaultHidingOutputStream(out);\n             }\n",
    "summaries": {
      "en": "Extract entry.getDirtyFile(index) as the outFile variable, then use this variable for further operations",
      "zh": "将entry.getDirtyFile(index)提取为outFile变量，然后使用该变量进行操作"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/deeplearning4j-core/src/main/java/org/deeplearning4j/clustering/cluster/Point.java b/deeplearning4j-core/src/main/java/org/deeplearning4j/clustering/cluster/Point.java\nindex 6704791..35ed2c3 100644\n--- a/deeplearning4j-core/src/main/java/org/deeplearning4j/clustering/cluster/Point.java\n+++ b/deeplearning4j-core/src/main/java/org/deeplearning4j/clustering/cluster/Point.java\n@@ -93,6 +93,16 @@ public class Point implements INDArray {\n \t\tthis.array = array;\n \t}\n \n+\t/**\n+\t * The rank of the ndarray (the number of dimensions\n+\t *\n+\t * @return the rank for the ndarray\n+\t */\n+\t@Override\n+\tpublic int rank() {\n+\t\treturn array.rank();\n+\t}\n+\n \t@Override\n \tpublic int stride(int dimension) {\n \t\treturn array.stride(dimension);\n",
    "summaries": {
      "en": "Implemented the rank() method in NDArray",
      "zh": "实现 NDArray 中的 rank() 方法"
    }
  },
  {
    "type": "fix",
    "subtype": "I2",
    "change": "diff --git a/subprojects/cpp/src/main/groovy/org/gradle/nativebinaries/toolchain/internal/msvcpp/VisualCppCompilerArgsTransformer.java b/subprojects/cpp/src/main/groovy/org/gradle/nativebinaries/toolchain/internal/msvcpp/VisualCppCompilerArgsTransformer.java\nindex 0a6b46a..af319c8 100644\n--- a/subprojects/cpp/src/main/groovy/org/gradle/nativebinaries/toolchain/internal/msvcpp/VisualCppCompilerArgsTransformer.java\n+++ b/subprojects/cpp/src/main/groovy/org/gradle/nativebinaries/toolchain/internal/msvcpp/VisualCppCompilerArgsTransformer.java\n@@ -36,8 +36,7 @@ abstract class VisualCppCompilerArgsTransformer<T extends NativeCompileSpec> imp\n         args.addAll(spec.getAllArgs());\n         args.add(\"/c\");\n         for (File file : spec.getIncludeRoots()) {\n-            args.add(\"/I\");\n-            args.add(file.getAbsolutePath());\n+            args.add(\"/I\" + file.getAbsolutePath());\n         }\n         for (File file : spec.getSourceFiles()) {\n             args.add(file.getAbsolutePath());\n",
    "summaries": {
      "en": "Merge \"/I\" and file path",
      "zh": "合并\"/I\"和文件路径"
    }
  },
  {
    "type": "cicd",
    "subtype": "Cx",
    "change": "diff --git a/jenkins/pipeline/stages/deploy.groovy b/jenkins/pipeline/stages/deploy.groovy\nindex e6d5af1..b2437c8 100644\n--- a/jenkins/pipeline/stages/deploy.groovy\n+++ b/jenkins/pipeline/stages/deploy.groovy\n@@ -1,8 +1,9 @@\n def call(body) {\n-    def config = body.getConfig()\n+    def config = getConfigFromGit()\n     def environment = body.getEnvironment()\n+    def appVersion = getAppVersionFromGit()\n\n-    sh(\"kubectl set image deployment/${config.applicationName} ${config.applicationName}=${config.imageRepository}:${config.imageTag} --namespace=${environment}\")\n+    sh(\"kubectl set image deployment/${config.applicationName} ${config.applicationName}=${config.imageRepository}:${appVersion} --namespace=${environment}\")\n\n     body.doLast()\n }",
    "summaries": {
      "en": "Deploy application with config and version obtained from Git",
      "zh": "从Git获取config和version进行应用部署"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/r2-testutils/src/main/java/com/linkedin/r2/testutils/filter/FilterUtil.java b/r2-testutils/src/main/java/com/linkedin/r2/testutils/filter/FilterUtil.java\nindex 92564408..259554d6 100644\n--- a/r2-testutils/src/main/java/com/linkedin/r2/testutils/filter/FilterUtil.java\n+++ b/r2-testutils/src/main/java/com/linkedin/r2/testutils/filter/FilterUtil.java\n@@ -86,6 +86,11 @@ public class FilterUtil\n     fc.onRestRequest(req, emptyRequestContext(), emptyWireAttrs());\n   }\n \n+  public static void fireRestRequest(FilterChain fc, RestRequest req, Map<String, String> wireAttrs)\n+  {\n+    fc.onRestRequest(req, emptyRequestContext(), wireAttrs);\n+  }\n+\n   public static void fireUntypedRequest(FilterChain fc, Request req)\n   {\n     if (req instanceof RpcRequest)\n",
    "summaries": {
      "en": "Add a new static method fireRestRequest()",
      "zh": "添加一个新的静态方法 fireRestRequest()"
    }
  },
  {
    "type": "style",
    "subtype": "S5",
    "change": "diff --git a/src/main/java/org/bukkit/command/defaults/GameModeCommand.java b/src/main/java/org/bukkit/command/defaults/GameModeCommand.java\nindex 08e5a90a..ad445160 100644\n--- a/src/main/java/org/bukkit/command/defaults/GameModeCommand.java\n+++ b/src/main/java/org/bukkit/command/defaults/GameModeCommand.java\n@@ -58,9 +58,9 @@ public class GameModeCommand extends VanillaCommand {\n                     sender.sendMessage(\"Game mode change for \" + player.getName() + \" failed!\");\n                 } else {\n                     if (player == sender) {\n-                        Command.broadcastCommandMessage(sender, \"Set own game mode to\" + mode.toString() + \" mode\", false);\n+                        Command.broadcastCommandMessage(sender, \"Set own game mode to \" + mode.toString() + \" mode\", false);\n                     } else {\n-                        Command.broadcastCommandMessage(sender, \"Set \" + player.getName() + \"'s game mode to\" + mode.toString() + \" mode\", false);\n+                        Command.broadcastCommandMessage(sender, \"Set \" + player.getName() + \"'s game mode to \" + mode.toString() + \" mode\", false);\n                     }\n                 }\n             } else {\n",
    "summaries": {
      "en": "Optimize the output of broadcast messages in game mode",
      "zh": "优化游戏模式中的广播消息输出"
    }
  },
  {
    "type": "refactor",
    "subtype": "R10",
    "change": "diff --git a/twidere.component.common/src/main/java/org/mariotaku/twidere/constant/SharedPreferenceConstants.java b/twidere.component.common/src/main/java/org/mariotaku/twidere/constant/SharedPreferenceConstants.java\nindex ba91f0eb1..5995f3a02 100644\n--- a/twidere.component.common/src/main/java/org/mariotaku/twidere/constant/SharedPreferenceConstants.java\n+++ b/twidere.component.common/src/main/java/org/mariotaku/twidere/constant/SharedPreferenceConstants.java\n@@ -284,8 +284,6 @@ public interface SharedPreferenceConstants {\n     String KEY_MEDIA_PREVIEW_STYLE = \"media_preview_style\";\n     @Preference(type = BOOLEAN, hasDefault = true, defaultBoolean = false)\n     String KEY_MEDIA_PREVIEW = \"media_preview\";\n-    @Preference(type = BOOLEAN, hasDefault = true, defaultBoolean = false)\n-    String KEY_SORT_TIMELINE_BY_ID = \"sort_timeline_by_id\";\n     @Preference(type = STRING, hasDefault = true)\n     String KEY_PROFILE_IMAGE_STYLE = \"profile_image_style\";\n \n",
    "summaries": {
      "en": "Delete unused key KEY_SORT_TIMELINE_BY_ID",
      "zh": "删除未使用的键KEY_SORT_TIMELINE_BY_ID"
    }
  },
  {
    "type": "refactor",
    "subtype": "R5",
    "change": "diff --git a/wifi/java/android/net/wifi/WifiConfiguration.java b/wifi/java/android/net/wifi/WifiConfiguration.java\nindex 5d834f6..c769b6f 100644\n--- a/wifi/java/android/net/wifi/WifiConfiguration.java\n+++ b/wifi/java/android/net/wifi/WifiConfiguration.java\n@@ -1014,10 +1014,10 @@ public class WifiConfiguration implements Parcelable {\n             sbuf.append(this.numNoInternetAccessReports).append(\"\\n\");\n         }\n         if (this.updateTime != null) {\n-            sbuf.append(\"creation=\").append(this.updateTime).append(\"\\n\");\n+            sbuf.append(\"update \").append(this.updateTime).append(\"\\n\");\n         }\n         if (this.creationTime != null) {\n-            sbuf.append(\"update=\").append(this.creationTime).append(\"\\n\");\n+            sbuf.append(\"creation\").append(this.creationTime).append(\"\\n\");\n         }\n         if (this.didSelfAdd) sbuf.append(\" didSelfAdd\");\n         if (this.selfAdded) sbuf.append(\" selfAdded\");\n",
    "summaries": {
      "en": "Fix printing of creation and update time for wificonfiguration",
      "zh": "正确打印wificonfiguration的创建和更新时间"
    }
  },
  {
    "type": "fix",
    "subtype": "I3",
    "change": "diff --git a/src/main/java/tachyon/client/FileOutStream.java b/src/main/java/tachyon/client/FileOutStream.java\nindex 2db178a..ae8ced2 100644\n--- a/src/main/java/tachyon/client/FileOutStream.java\n+++ b/src/main/java/tachyon/client/FileOutStream.java\n@@ -134,10 +134,10 @@ public class FileOutStream extends OutStream {\n         int tLen = len;\n         int tOff = off;\n         while (tLen > 0) {\n-          if (mCurrentBlockLeftByte == 0) {\n+          if (mCurrentBlockLeftByte <= 0 || mCurrentBlockOutStream == null ) {\n             getNextBlock();\n           }\n-          if (mCurrentBlockLeftByte > tLen) {\n+          if (mCurrentBlockLeftByte >= tLen) {\n             mCurrentBlockOutStream.write(b, tOff, tLen);\n             mCurrentBlockLeftByte -= tLen;\n             mCachedBytes += tLen;\n",
    "summaries": {
      "en": "Fixed null pointer exception",
      "zh": "修复空指针异常"
    }
  },
  {
    "type": "refactor",
    "subtype": "R5",
    "change": "diff --git a/src/main/java/water/H2ONode.java b/src/main/java/water/H2ONode.java\nindex aa1c34c94..ee7e4f6c7 100644\n--- a/src/main/java/water/H2ONode.java\n+++ b/src/main/java/water/H2ONode.java\n@@ -256,7 +256,7 @@ public class H2ONode extends Iced implements Comparable {\n     // around a long time - and the dt might be big.\n     DTask dt = rpc._dt;         // The existing DTask, if any\n     if( dt != null && RPC.RPCCall.CAS_DT.compareAndSet(rpc,dt,null) ) {\n-      assert rpc._computed : \"Still not done #\"+task+\" \"+rpc._dt.getClass()+\" from \"+rpc._client;\n+      assert rpc._computed : \"Still not done #\"+task+\" \"+dt.getClass()+\" from \"+rpc._client;\n       AckAckTimeOutThread.PENDING.remove(rpc);\n       dt.onAckAck();            // One-time call on stop-tracking\n     }\n",
    "summaries": {
      "en": "Modified the dt in the assertion statement to rpc._dt",
      "zh": "修改断言语句中的 dt 为 rpc._dt"
    }
  },
  {
    "type": "feat",
    "subtype": "E2",
    "change": "diff --git a/languagetool-core/src/main/java/org/languagetool/JLanguageTool.java b/languagetool-core/src/main/java/org/languagetool/JLanguageTool.java\nindex cc4c99f86c..4fd55218ac 100644\n--- a/languagetool-core/src/main/java/org/languagetool/JLanguageTool.java\n+++ b/languagetool-core/src/main/java/org/languagetool/JLanguageTool.java\n@@ -108,6 +108,10 @@ public class JLanguageTool {\n   private static String getBuildDate() {\n     try {\n       final URL res = JLanguageTool.class.getResource(JLanguageTool.class.getSimpleName() + \".class\");\n+      if (res == null) {\n+        // this will happen on Android, see http://stackoverflow.com/questions/15371274/\n+        return null;\n+      }\n       final Object connObj = res.openConnection();\n       if (connObj instanceof JarURLConnection) {\n         final JarURLConnection conn = (JarURLConnection) connObj;\n",
    "summaries": {
      "en": "Avoid NullPointerException on Android",
      "zh": "避免在Android上出现NullPointerException"
    }
  },
  {
    "type": "cicd",
    "subtype": "Cx",
    "change": "diff --git a/Jenkinsfile b/Jenkinsfile\nindex c3d4e5f..6a7b8c9 100644\n--- a/Jenkinsfile\n+++ b/Jenkinsfile\n@@ -15,20 +15,6 @@ pipeline {\n             script {\n                 // Your build commands go here\n             }\n         }\n-        stage('Code Coverage') {\n-            when {\n-                anyOf {\n-                    branch 'main'\n-                    branch 'development'\n-                }\n-            }\n-            steps {\n-                script {\n-                    // Commands to generate code coverage report\n-                    sh 'generate-coverage-report.sh'\n-                }\n-            }\n-        }\n         stage('Deploy') {\n             when {\n                 branch 'main'\n             }",
    "summaries": {
      "en": "No longer support code coverage report generation",
      "zh": "不再支持代码覆盖率报告生成"
    }
  },
  {
    "type": "fix",
    "subtype": "I11",
    "change": "diff --git a/twitter4j-core/src/internal-http/java/twitter4j/HttpClientFactory.java b/twitter4j-core/src/internal-http/java/twitter4j/HttpClientFactory.java\nindex 4d917327..4ec0d74f 100644\n--- a/twitter4j-core/src/internal-http/java/twitter4j/HttpClientFactory.java\n+++ b/twitter4j-core/src/internal-http/java/twitter4j/HttpClientFactory.java\n@@ -20,7 +20,7 @@ import twitter4j.conf.ConfigurationContext;\n \n import java.lang.reflect.Constructor;\n import java.lang.reflect.InvocationTargetException;\n-import java.util.HashMap;\n+import java.util.concurrent.ConcurrentHashMap;\n \n /**\n  * @author Yusuke Yamamoto - yusuke at mac.com\n@@ -60,7 +60,7 @@ public final class HttpClientFactory {\n         }\n     }\n \n-    private final static HashMap<HttpClientConfiguration, HttpClient> confClientMap = new HashMap<HttpClientConfiguration, HttpClient>();\n+    private final static ConcurrentHashMap<HttpClientConfiguration, HttpClient> confClientMap = new ConcurrentHashMap<HttpClientConfiguration, HttpClient>();\n \n     public static HttpClient getInstance() {\n         return getInstance(ConfigurationContext.getInstance().getHttpClientConfiguration());\n",
    "summaries": {
      "en": "Change HashMap to ConcurrentHashMap",
      "zh": "将 HashMap 改为 ConcurrentHashMap"
    }
  },
  {
    "type": "feat",
    "subtype": "E2",
    "change": "diff --git a/graphics/java/android/graphics/FontListParser.java b/graphics/java/android/graphics/FontListParser.java\nindex e4494ca..2596f53 100644\n--- a/graphics/java/android/graphics/FontListParser.java\n+++ b/graphics/java/android/graphics/FontListParser.java\n@@ -114,7 +114,8 @@ public class FontListParser {\n             if (parser.getEventType() != XmlPullParser.START_TAG) continue;\n             String tag = parser.getName();\n             if (tag.equals(\"font\")) {\n-                int ttcIndex = Integer.parseInt(parser.getAttributeValue(\"0\", \"ttcIndex\"));\n+                String ttcIndexStr = parser.getAttributeValue(null, \"ttcIndex\");\n+                int ttcIndex = ttcIndexStr == null ? 0 : Integer.parseInt(ttcIndexStr);\n                 String weightStr = parser.getAttributeValue(null, \"weight\");\n                 int weight = weightStr == null ? 400 : Integer.parseInt(weightStr);\n                 boolean isItalic = \"italic\".equals(parser.getAttributeValue(null, \"style\"));\n",
    "summaries": {
      "en": "Modified the code for parsing the font list to include a check for the ttcIndex attribute value",
      "zh": "修改解析字体列表的代码，增加对 ttcIndex 属性值的判断"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/source/com/intellij/openapi/roots/ui/configuration/ContentEntriesEditor.java b/source/com/intellij/openapi/roots/ui/configuration/ContentEntriesEditor.java\nindex acedd61..13120b3 100644\n--- a/source/com/intellij/openapi/roots/ui/configuration/ContentEntriesEditor.java\n+++ b/source/com/intellij/openapi/roots/ui/configuration/ContentEntriesEditor.java\n@@ -117,6 +117,9 @@ public class ContentEntriesEditor extends ModuleElementsEditor {\n     if (myRootTreeEditor != null) {\n       myRootTreeEditor.setContentEntryEditor(null);\n     }\n+    if (myModulesProvider instanceof ModulesConfigurator) {\n+      ((ModulesConfigurator)myModulesProvider).disposeUIResources();\n+    }\n     super.disposeUIResources();\n   }\n \n",
    "summaries": {
      "en": "Release UI resources",
      "zh": "释放UI资源"
    }
  },
  {
    "type": "test",
    "subtype": "T1",
    "change": "diff --git a/src/test/java/com/orientechnologies/orient/jdbc/OrientJdbcPreparedStatementTest.java b/src/test/java/com/orientechnologies/orient/jdbc/OrientJdbcPreparedStatementTest.java\nindex 520ea21..f19d711 100644\n--- a/src/test/java/com/orientechnologies/orient/jdbc/OrientJdbcPreparedStatementTest.java\n+++ b/src/test/java/com/orientechnologies/orient/jdbc/OrientJdbcPreparedStatementTest.java\n@@ -69,6 +69,19 @@ public class OrientJdbcPreparedStatementTest extends OrientJdbcBaseTest {\n \t}\r\n \r\n \t@Test\r\n+\tpublic void testExecuteUpdateReturnsNumberOfRowsDeleted() throws Exception {\r\n+\t\tconn.createStatement().executeQuery(\"CREATE CLASS Insertable \");\r\n+\t\tconn.createStatement().executeQuery(\"INSERT INTO Insertable(id) VALUES(1)\");\r\n+\t\tconn.createStatement().executeQuery(\"INSERT INTO Insertable(id) VALUES(2)\");\r\n+\r\n+\t\tPreparedStatement statement = conn.prepareStatement(\"DELETE FROM Insertable WHERE ID > ?\");\r\n+\t\tstatement.setInt(1, 0);\r\n+\t\tint rowsInserted = statement.executeUpdate();\r\n+\r\n+\t\tassertEquals( 2, rowsInserted );\r\n+\t}\r\n+\r\n+\t@Test\r\n   public void shouldExecutePreparedStatement() throws Exception {\r\n     PreparedStatement stmt = conn.prepareStatement(\"SELECT  \" + \"FROM Item \" + \"WHERE stringKey = ? OR intKey = ?\");\r\n     assertNotNull(stmt);\r\n",
    "summaries": {
      "en": "Add test case to return number of deleted rows for add and delete statements",
      "zh": "添加删除语句返回删除行数的测试用例"
    }
  },
  {
    "type": "refactor",
    "subtype": "R3",
    "change": "diff --git a/DataExtractionOSM/src/net/osmand/router/RouteResultPreparation.java b/DataExtractionOSM/src/net/osmand/router/RouteResultPreparation.java\nindex f1f06f3c56..9504984483 100644\n--- a/DataExtractionOSM/src/net/osmand/router/RouteResultPreparation.java\n+++ b/DataExtractionOSM/src/net/osmand/router/RouteResultPreparation.java\n@@ -457,7 +457,7 @@ public class RouteResultPreparation {\n \t\tif (current <= 0) {\n \t\t\tcurrent = 1;\n \t\t}\n-\t\tif(ls >= 0 /*&& current + left + right >= ls*/){\n+//\t\tif(ls >= 0 /*&& current + left + right >= ls*/){\n \t\t\tlanes = new int[current + left + right];\n \t\t\tls = current + left + right;\n \t\t\tfor(int it=0; it< ls; it++) {\n@@ -471,12 +471,13 @@ public class RouteResultPreparation {\n \t\t\tif ((current <= left + right) && (left > 1 || right > 1)) {\n \t\t\t\tspeak = true;\n \t\t\t}\n-\t\t}\n+//\t\t}\n \t\t\n \t\tif (kl) {\n \t\t\tt = TurnType.valueOf(TurnType.KL, leftSide);\n \t\t\tt.setSkipToSpeak(!speak);\n-\t\t} else if(kr){\n+\t\t} \n+\t\tif(kr){\n \t\t\tt = TurnType.valueOf(TurnType.KR, leftSide);\n \t\t\tt.setSkipToSpeak(!speak);\n \t\t}\n",
    "summaries": {
      "en": "Comment out the unnecessary if statement",
      "zh": "注释掉无用的if判断"
    }
  },
  {
    "type": "feat",
    "subtype": "E2",
    "change": "diff --git a/astrid/plugin-src/com/todoroo/astrid/subtasks/OrderedListFragmentHelper.java b/astrid/plugin-src/com/todoroo/astrid/subtasks/OrderedListFragmentHelper.java\nindex 2fcfd0b44..cba78b6bc 100644\n--- a/astrid/plugin-src/com/todoroo/astrid/subtasks/OrderedListFragmentHelper.java\n+++ b/astrid/plugin-src/com/todoroo/astrid/subtasks/OrderedListFragmentHelper.java\n@@ -129,6 +129,7 @@ public class OrderedListFragmentHelper<LIST> {\n         @Override\n         public void drop(int from, int to) {\n             long targetTaskId = taskAdapter.getItemId(from);\n+            if (targetTaskId <= 0) return; // This can happen with gestures on empty parts of the list (e.g. extra space below tasks)\n             long destinationTaskId = taskAdapter.getItemId(to);\n \n             try {\n@@ -158,6 +159,7 @@ public class OrderedListFragmentHelper<LIST> {\n \n         protected void indent(int which, int delta) {\n             long targetTaskId = taskAdapter.getItemId(which);\n+            if (targetTaskId <= 0) return; // This can happen with gestures on empty parts of the list (e.g. extra space below tasks)\n             try {\n                 updater.indent(getFilter(), list, targetTaskId, delta);\n             } catch (Exception e) {\n",
    "summaries": {
      "en": "Added a check for the target task ID. If it is less than or equal to 0, the function returns",
      "zh": "增加目标任务ID的检查条件，如果小于等于0则返回"
    }
  },
  {
    "type": "test",
    "subtype": "T1",
    "change": "diff --git a/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/HttpProxyRouteTest.java b/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/HttpProxyRouteTest.java\nindex 8f932cf339..da93bce36c 100644\n--- a/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/HttpProxyRouteTest.java\n+++ b/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/HttpProxyRouteTest.java\n@@ -24,7 +24,7 @@ import org.junit.Test;\n \n public class HttpProxyRouteTest extends BaseJettyTest {\n \n-    private int size = 500;\n+    private int size = 10;\n \n     @Test\n     public void testHttpProxy() throws Exception {\n",
    "summaries": {
      "en": "Modified the value of the size variable in the test case",
      "zh": "修改测试用例中的 size 变量值"
    }
  },
  {
    "type": "docs",
    "subtype": "D2",
    "change": "diff --git a/external/storm-hdfs/src/main/java/org/apache/storm/hdfs/common/security/HdfsSecurityUtil.java b/external/storm-hdfs/src/main/java/org/apache/storm/hdfs/common/security/HdfsSecurityUtil.java\nindex d2f6273..f380b38 100644\n--- a/external/storm-hdfs/src/main/java/org/apache/storm/hdfs/common/security/HdfsSecurityUtil.java\n+++ b/external/storm-hdfs/src/main/java/org/apache/storm/hdfs/common/security/HdfsSecurityUtil.java\n@@ -49,7 +49,6 @@ public class HdfsSecurityUtil {\n                  !(((List)conf.get(TOPOLOGY_AUTO_CREDENTIALS)).contains(AutoTGT.class.getName())))) {\n             if (UserGroupInformation.isSecurityEnabled()) {\n                 // compareAndSet added because of https://issues.apache.org/jira/browse/STORM-1535\n-                // need to test it first during ERIE release testing since the JIRA says \"might\" be and port it to apache.\n                 if (isLoggedIn.compareAndSet(false, true)) {\n                     LOG.info(\"Logging in using keytab as AutoHDFS is not specified for \" + TOPOLOGY_AUTO_CREDENTIALS);\n                     String keytab = (String) conf.get(STORM_KEYTAB_FILE_KEY);\n",
    "summaries": {
      "en": "Remove unnecessary comments",
      "zh": "删除不必要的注释"
    }
  },
  {
    "type": "feat",
    "subtype": "E2",
    "change": "diff --git a/servlet/src/main/java/io/undertow/servlet/spec/ServletOutputStreamImpl.java b/servlet/src/main/java/io/undertow/servlet/spec/ServletOutputStreamImpl.java\nindex ece0f3260..827af0eed 100644\n--- a/servlet/src/main/java/io/undertow/servlet/spec/ServletOutputStreamImpl.java\n+++ b/servlet/src/main/java/io/undertow/servlet/spec/ServletOutputStreamImpl.java\n@@ -371,7 +371,9 @@ public class ServletOutputStreamImpl extends ServletOutputStream implements Buff\n         this.written += len;\n         if (contentLength != -1 && this.written >= contentLength) {\n             state |= FLAG_CLOSED;\n-            if (flushBufferAsync()) {\n+            //there is nothing more to flush we shutdown writes\n+            //otherwise the write listener will deal with it\n+            if (buffersToWrite == null) {\n                 channel.shutdownWrites();\n                 state |= FLAG_DELEGATE_SHUTDOWN;\n                 if (!channel.flush()) {\n@@ -395,7 +397,10 @@ public class ServletOutputStreamImpl extends ServletOutputStream implements Buff\n \n         ByteBuffer[] bufs = buffersToWrite;\n         if (bufs == null) {\n-            ByteBuffer buffer = buffer();\n+            ByteBuffer buffer = this.buffer;\n+            if(buffer == null || buffer.position() == 0) {\n+                return true;\n+            }\n             buffer.flip();\n             bufs = new ByteBuffer[]{buffer};\n         }\n",
    "summaries": {
      "en": "Set/check variable (buffer) and add null and position checks for buffer",
      "zh": "设置/检查变量（buffer），并且增加对buffer的null和position的检查"
    }
  },
  {
    "type": "fix",
    "subtype": "I3",
    "change": "diff --git a/src/net/java/otr4j/crypto/SM.java b/src/net/java/otr4j/crypto/SM.java\nindex c9144718..af20ada2 100644\n--- a/src/net/java/otr4j/crypto/SM.java\n+++ b/src/net/java/otr4j/crypto/SM.java\n@@ -183,7 +183,7 @@ public class SM {\n      * element\n      */\n     public static boolean checkGroupElem(BigInteger g) {\n-        return !(g.compareTo(BigInteger.valueOf(2)) > 0 && g.compareTo(SM.MODULUS_MINUS_2) < 0);\n+        return g.compareTo(BigInteger.valueOf(2)) < 0 || g.compareTo(SM.MODULUS_MINUS_2) > 0;\n     }\n \n     /**\n@@ -191,7 +191,7 @@ public class SM {\n      * exponent\n      */\n     public static boolean checkExpon(BigInteger x) {\n-        return !(x.compareTo(BigInteger.ONE) > 0 && x.compareTo(SM.ORDER_S) <= 0);\n+        return x.compareTo(BigInteger.ONE) < 0 || x.compareTo(SM.ORDER_S) >= 0;\n     }\n \n     /**\n",
    "summaries": {
      "en": "Fix the check logic of checkGroupElem and checkExpon",
      "zh": "修复checkGroupElem和checkExpon的检查逻辑"
    }
  },
  {
    "type": "fix",
    "subtype": "I7",
    "change": "diff --git a/deeplearning4j-core/src/main/java/org/deeplearning4j/nn/conf/layers/RnnOutputLayer.java b/deeplearning4j-core/src/main/java/org/deeplearning4j/nn/conf/layers/RnnOutputLayer.java\nindex 1aaf4f2..df3a45a 100644\n--- a/deeplearning4j-core/src/main/java/org/deeplearning4j/nn/conf/layers/RnnOutputLayer.java\n+++ b/deeplearning4j-core/src/main/java/org/deeplearning4j/nn/conf/layers/RnnOutputLayer.java\n@@ -18,7 +18,8 @@ public class RnnOutputLayer extends BaseOutputLayer {\n \t\n \t@NoArgsConstructor\n     public static class Builder extends BaseOutputLayer.Builder<Builder> {\n-        \n+        protected LossFunction lossFunction = LossFunction.MCXENT;\n+\n     \tpublic Builder(LossFunction lossFunction) {\n             this.lossFunction = lossFunction;\n         }\n",
    "summaries": {
      "en": "Modified the default value of lossFunction",
      "zh": "修改lossFunction的默认值"
    }
  },
  {
    "type": "fix",
    "subtype": "I4",
    "change": "diff --git a/helios-testing/src/main/java/com/spotify/helios/testing/HeliosSoloDeployment.java b/helios-testing/src/main/java/com/spotify/helios/testing/HeliosSoloDeployment.java\nindex 463d3f5c..14cd327e 100644\n--- a/helios-testing/src/main/java/com/spotify/helios/testing/HeliosSoloDeployment.java\n+++ b/helios-testing/src/main/java/com/spotify/helios/testing/HeliosSoloDeployment.java\n@@ -63,7 +63,7 @@ public class HeliosSoloDeployment implements HeliosDeployment {\n \n   public static final String BOOT2DOCKER_SIGNATURE = \"Boot2Docker\";\n   public static final String PROBE_IMAGE = \"onescience/alpine:latest\";\n-  public static final String HELIOS_NAME_PREFIX = \"solo.local.\";\n+  public static final String HELIOS_NAME_SUFFIX = \".solo.local\"; //  Required for SkyDNS discovery.\n   public static final String HELIOS_CONTAINER_PREFIX = \"helios-solo-container-\";\n   public static final int HELIOS_MASTER_PORT = 5801;\n \n@@ -270,7 +270,7 @@ public class HeliosSoloDeployment implements HeliosDeployment {\n     //TODO(negz): Don't make this.env immutable so early?\n     final List<String> env = new ArrayList<>();\n     env.addAll(this.env);\n-    env.add(\"HELIOS_NAME=\" + HELIOS_NAME_PREFIX + this.namespace);\n+    env.add(\"HELIOS_NAME=\" + this.namespace + HELIOS_NAME_SUFFIX);\n     env.add(\"HOST_ADDRESS=\" + heliosHost);\n \n     final String heliosPort = String.format(\"%d/tcp\", HELIOS_MASTER_PORT);\n",
    "summaries": {
      "en": "Fix DNS name spelling error in Helios",
      "zh": "修复Helios的DNS name拼写错误"
    }
  },
  {
    "type": "test",
    "subtype": "T1",
    "change": "diff --git a/components/camel-http/src/test/java/org/apache/camel/component/http/HttpGetTest.java b/components/camel-http/src/test/java/org/apache/camel/component/http/HttpGetTest.java\nindex 43e4c2fa43..19dd78fcb6 100644\n--- a/components/camel-http/src/test/java/org/apache/camel/component/http/HttpGetTest.java\n+++ b/components/camel-http/src/test/java/org/apache/camel/component/http/HttpGetTest.java\n@@ -29,7 +29,7 @@ import org.apache.camel.component.mock.MockEndpoint;\n  * @version $Revision$\n  */\n public class HttpGetTest extends ContextTestSupport {\n-    protected String expectedText = \"<html\";\n+    protected String expectedText = \"activemq\";\n \n     public void testHttpGet() throws Exception {\n         MockEndpoint mockEndpoint = resolveMandatoryEndpoint(\"mock:results\", MockEndpoint.class);\n",
    "summaries": {
      "en": "Modified expected text",
      "zh": "修改期望文本"
    }
  },
  {
    "type": "refactor",
    "subtype": "R8",
    "change": "diff --git a/core/src/test/java/io/undertow/ssl/SimpleSSLTestCase.java b/core/src/test/java/io/undertow/test/ssl/SimpleSSLTestCase.java\nsimilarity index 98%\nrename from core/src/test/java/io/undertow/ssl/SimpleSSLTestCase.java\nrename to core/src/test/java/io/undertow/test/ssl/SimpleSSLTestCase.java\nindex 206e0d2f4..a1a3942d8 100644\n--- a/core/src/test/java/io/undertow/ssl/SimpleSSLTestCase.java\n+++ b/core/src/test/java/io/undertow/test/ssl/SimpleSSLTestCase.java\n@@ -16,7 +16,7 @@\n  * limitations under the License.\n  */\n \n-package io.undertow.ssl;\n+package io.undertow.test.ssl;\n \n import java.io.IOException;\n import java.security.GeneralSecurityException;\n",
    "summaries": {
      "en": "Move SSL testing",
      "zh": "移动SSL测试"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/core/src/main/java/com/graphhopper/routing/util/FootFlagEncoder.java b/core/src/main/java/com/graphhopper/routing/util/FootFlagEncoder.java\nindex 78b78feb..aa1af580 100644\n--- a/core/src/main/java/com/graphhopper/routing/util/FootFlagEncoder.java\n+++ b/core/src/main/java/com/graphhopper/routing/util/FootFlagEncoder.java\n@@ -49,6 +49,7 @@ public class FootFlagEncoder extends AbstractFlagEncoder {\n             add(\"unclassified\");\n             add(\"residential\");\n             add(\"road\");\n+            add(\"service\");\n         }\n     };\n     private static final Map<String, Integer> SPEED = new FootSpeed();\n",
    "summaries": {
      "en": "Add service tags to FOOT",
      "zh": "添加服务标签到FOOT"
    }
  },
  {
    "type": "style",
    "subtype": "S3",
    "change": "diff --git a/subprojects/launcher/src/main/java/org/gradle/tooling/internal/provider/events/DefaultBuildSuccessResult.java b/subprojects/launcher/src/main/java/org/gradle/tooling/internal/provider/events/DefaultBuildSuccessResult.java\nindex d0f4734..8ab8aca 100644\n--- a/subprojects/launcher/src/main/java/org/gradle/tooling/internal/provider/events/DefaultBuildSuccessResult.java\n+++ b/subprojects/launcher/src/main/java/org/gradle/tooling/internal/provider/events/DefaultBuildSuccessResult.java\n@@ -21,5 +21,4 @@ public class DefaultBuildSuccessResult extends AbstractBuildResult implements In\n     public DefaultBuildSuccessResult(long startTime, long endTime) {\n         super(startTime, endTime, \"succeeded\");\n     }\n-\n }\ndiff --git a/subprojects/launcher/src/main/java/org/gradle/tooling/internal/provider/events/DefaultTaskSuccessResult.java b/subprojects/launcher/src/main/java/org/gradle/tooling/internal/provider/events/DefaultTaskSuccessResult.java\nindex 2545e1b..8ffe007 100644\n--- a/subprojects/launcher/src/main/java/org/gradle/tooling/internal/provider/events/DefaultTaskSuccessResult.java\n+++ b/subprojects/launcher/src/main/java/org/gradle/tooling/internal/provider/events/DefaultTaskSuccessResult.java\n@@ -19,9 +19,7 @@ package org.gradle.tooling.internal.provider.events;\n import org.gradle.tooling.internal.protocol.events.InternalTaskSuccessResult;\n \n public class DefaultTaskSuccessResult extends AbstractTaskResult implements InternalTaskSuccessResult {\n-\n     public DefaultTaskSuccessResult(long startTime, long endTime, String outcomeDescription) {\n         super(startTime, endTime, outcomeDescription);\n     }\n-\n }\ndiff --git a/subprojects/launcher/src/main/java/org/gradle/tooling/internal/provider/events/DefaultTestSkippedResult.java b/subprojects/launcher/src/main/java/org/gradle/tooling/internal/provider/events/DefaultTestSkippedResult.java\nindex 1b4db01..5b99515 100644\n--- a/subprojects/launcher/src/main/java/org/gradle/tooling/internal/provider/events/DefaultTestSkippedResult.java\n+++ b/subprojects/launcher/src/main/java/org/gradle/tooling/internal/provider/events/DefaultTestSkippedResult.java\n@@ -19,9 +19,7 @@ package org.gradle.tooling.internal.provider.events;\n import org.gradle.tooling.internal.protocol.events.InternalTestSkippedResult;\n \n public class DefaultTestSkippedResult extends AbstractTestResult implements InternalTestSkippedResult {\n-\n     public DefaultTestSkippedResult(long startTime, long endTime) {\n         super(startTime, endTime, \"skipped\");\n     }\n-\n }\ndiff --git a/subprojects/launcher/src/main/java/org/gradle/tooling/internal/provider/events/DefaultTestSuccessResult.java b/subprojects/launcher/src/main/java/org/gradle/tooling/internal/provider/events/DefaultTestSuccessResult.java\nindex 0b48ec4..db657cb 100644\n--- a/subprojects/launcher/src/main/java/org/gradle/tooling/internal/provider/events/DefaultTestSuccessResult.java\n+++ b/subprojects/launcher/src/main/java/org/gradle/tooling/internal/provider/events/DefaultTestSuccessResult.java\n@@ -19,9 +19,7 @@ package org.gradle.tooling.internal.provider.events;\n import org.gradle.tooling.internal.protocol.events.InternalTestSuccessResult;\n \n public class DefaultTestSuccessResult extends AbstractTestResult implements InternalTestSuccessResult {\n-\n     public DefaultTestSuccessResult(long startTime, long endTime) {\n         super(startTime, endTime, \"succeeded\");\n     }\n-\n }\n",
    "summaries": {
      "en": "Remove blank lines",
      "zh": "删除空白行"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/enterprise/src/main/java/org/neo4j/kernel/impl/ha/Broker.java b/enterprise/src/main/java/org/neo4j/kernel/impl/ha/Broker.java\nindex 8a37429..9f9bf55 100644\n--- a/enterprise/src/main/java/org/neo4j/kernel/impl/ha/Broker.java\n+++ b/enterprise/src/main/java/org/neo4j/kernel/impl/ha/Broker.java\n@@ -14,4 +14,6 @@ public interface Broker\n     \n     // I know... this isn't supposed to be here\n     Object instantiateMasterServer( GraphDatabaseService graphDb );\n+    \n+    void shutdown();\n }\n",
    "summaries": {
      "en": "Add shutdown() method",
      "zh": "添加 shutdown()方法"
    }
  },
  {
    "type": "refactor",
    "subtype": "R3",
    "change": "diff --git a/tooling/maven/camel-api-component-maven-plugin/src/main/java/org/apache/camel/maven/ApiComponentGeneratorMojo.java b/tooling/maven/camel-api-component-maven-plugin/src/main/java/org/apache/camel/maven/ApiComponentGeneratorMojo.java\nindex 3f32b0b757..6171c03cda 100644\n--- a/tooling/maven/camel-api-component-maven-plugin/src/main/java/org/apache/camel/maven/ApiComponentGeneratorMojo.java\n+++ b/tooling/maven/camel-api-component-maven-plugin/src/main/java/org/apache/camel/maven/ApiComponentGeneratorMojo.java\n@@ -98,14 +98,9 @@ public class ApiComponentGeneratorMojo extends AbstractApiMethodBaseMojo {\n                     }\n                 }\n \n-                // if set, merge common aliases with proxy's aliases\n-                if (!aliases.isEmpty()) {\n-                    final List<ApiMethodAlias> apiAliases = api.getAliases();\n-                    if (apiAliases.isEmpty()) {\n-                        api.setAliases(aliases);\n-                    } else {\n-                        apiAliases.addAll(aliases);\n-                    }\n+                // set common aliases if needed\n+                if (!aliases.isEmpty() && api.getAliases().isEmpty()) {\n+                    api.setAliases(aliases);\n                 }\n             }\n \n",
    "summaries": {
      "en": "Delete else statement branch",
      "zh": "删除else语句分支"
    }
  },
  {
    "type": "refactor",
    "subtype": "R10",
    "change": "diff --git a/flyway-core/src/main/java/com/googlecode/flyway/core/Flyway.java b/flyway-core/src/main/java/com/googlecode/flyway/core/Flyway.java\nindex fcfbb216..96564918 100644\n--- a/flyway-core/src/main/java/com/googlecode/flyway/core/Flyway.java\n+++ b/flyway-core/src/main/java/com/googlecode/flyway/core/Flyway.java\n@@ -709,23 +709,6 @@ public class Flyway {\n     }\r\n \r\n     /**\r\n-     * Creates and initializes the Flyway metadata table.\r\n-     *\r\n-     * @param version     (Optional) The initial version to put in the metadata table. Only migrations with a version\r\n-     *                    number higher than this one will be considered for this database.\r\n-     * @param description (Optional) The description of the initial version.\r\n-     * @throws FlywayException when the schema initialization failed.\r\n-     * @deprecated Use init(), setInitialVersion() and setInitialDescription() instead.\r\n-     */\r\n-    @Deprecated\r\n-    public void init(SchemaVersion version, String description) throws FlywayException {\r\n-        performSetup();\r\n-\r\n-        MetaDataTable metaDataTable = createMetaDataTable();\r\n-        new DbInit(transactionTemplate, metaDataTable).init(version, description);\r\n-    }\r\n-\r\n-    /**\r\n      * @return A new, fully configured, MetaDataTable instance.\r\n      */\r\n     private MetaDataTable createMetaDataTable() {\r\n",
    "summaries": {
      "en": "Delete the deprecated init() method",
      "zh": "删除已弃用的init()方法"
    }
  },
  {
    "type": "refactor",
    "subtype": "R10",
    "change": "diff --git a/openapi/src/com/intellij/util/IconUtil.java b/openapi/src/com/intellij/util/IconUtil.java\nindex 5c75ae0..cea93fd 100644\n--- a/openapi/src/com/intellij/util/IconUtil.java\n+++ b/openapi/src/com/intellij/util/IconUtil.java\n@@ -128,13 +128,7 @@ public class IconUtil {\n     }\n     return ourIconProviders;\n   }\n-  public static Icon markWithError(Icon baseIcon) {\n-    LayeredIcon icon = new LayeredIcon(2);\n-    Icon error = IconLoader.getIcon(\"/nodes/errorMark.png\");\n-    icon.setIcon(error,0);\n-    icon.setIcon(redden(baseIcon),1, error.getIconWidth(), 0);\n-    return icon;\n-  }\n+  \n   public static Icon redden(Icon icon) {\n     GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();\n     GraphicsConfiguration gc = ge.getDefaultScreenDevice().getDefaultConfiguration();\n",
    "summaries": {
      "en": "Delete markWithError() method",
      "zh": "删除 markWithError()方法"
    }
  },
  {
    "type": "refactor",
    "subtype": "R10",
    "change": "diff --git a/OsmAnd/src/net/osmand/plus/dashboard/DashFavoritesFragment.java b/OsmAnd/src/net/osmand/plus/dashboard/DashFavoritesFragment.java\nindex ab22ff2282..1ab66b2c07 100644\n--- a/OsmAnd/src/net/osmand/plus/dashboard/DashFavoritesFragment.java\n+++ b/OsmAnd/src/net/osmand/plus/dashboard/DashFavoritesFragment.java\n@@ -258,9 +258,6 @@ public class DashFavoritesFragment extends DashBaseFragment implements Favourite\n \n \t@Override\n \tpublic void updateFavourites() {\n-\t\tif (getActivity() == null) {\n-\t\t\treturn;\n-\t\t}\n \t\tgetActivity().runOnUiThread(new Runnable() {\n \t\t\t@Override\n \t\t\tpublic void run() {\n",
    "summaries": {
      "en": "Remove unnecessary null check in updateFavorites()",
      "zh": "删除updateFavorites()中无用的null检查"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mongo/embedded/EmbeddedMongoAutoConfiguration.java b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mongo/embedded/EmbeddedMongoAutoConfiguration.java\nindex 94ec801..a96fce4 100644\n--- a/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mongo/embedded/EmbeddedMongoAutoConfiguration.java\n+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mongo/embedded/EmbeddedMongoAutoConfiguration.java\n@@ -63,6 +63,7 @@ import org.springframework.context.annotation.Configuration;\n import org.springframework.core.env.MapPropertySource;\n import org.springframework.core.env.MutablePropertySources;\n import org.springframework.core.env.PropertySource;\n+import org.springframework.data.mongodb.core.MongoClientFactoryBean;\n import org.springframework.util.Assert;\n \n /**\n@@ -199,7 +200,7 @@ public class EmbeddedMongoAutoConfiguration {\n \t * {@code embeddedMongoServer} bean.\n \t */\n \t@Configuration\n-\t@ConditionalOnClass(MongoClient.class)\n+\t@ConditionalOnClass({MongoClient.class, MongoClientFactoryBean.class})\n \tprotected static class EmbeddedMongoDependencyConfiguration\n \t\t\textends MongoClientDependsOnBeanFactoryPostProcessor {\n \n",
    "summaries": {
      "en": "Add dependency MongoClientFactoryBean class",
      "zh": "添加依赖MongoClientFactoryBean类"
    }
  },
  {
    "type": "refactor",
    "subtype": "R5",
    "change": "diff --git a/enterprise/backup/src/main/java/org/neo4j/backup/BackupTool.java b/enterprise/backup/src/main/java/org/neo4j/backup/BackupTool.java\nindex 8f4a250..1eca261 100644\n--- a/enterprise/backup/src/main/java/org/neo4j/backup/BackupTool.java\n+++ b/enterprise/backup/src/main/java/org/neo4j/backup/BackupTool.java\n@@ -102,7 +102,11 @@ public class BackupTool\n \n         if ( arguments.get( FROM, null ) == null )\n         {\n-            exitAbnormally( \"Please specify \" + dash( FROM ) );\n+            exitAbnormally( \"Please specify \" + dash( FROM ) + \", examples:\\n\" +\n+                    \"  \" + dash( FROM ) + \" single://192.168.1.34\\n\" +\n+                    \"  \" + dash( FROM ) + \" single://192.168.1.34:1234\\n\" +\n+                    \"  \" + dash( FROM ) + \" ha://192.168.1.15:2181\\n\" +\n+                    \"  \" + dash( FROM ) + \" ha://192.168.1.15:2181,192.168.1.16:2181\" );\n         }\n \n         if ( arguments.get( TO, null ) == null )\n",
    "summaries": {
      "en": "Added some examples of \"-from\"",
      "zh": "添加了一些-from的示例"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/src/main/java/org/jboss/netty/example/http/HttpClient.java b/src/main/java/org/jboss/netty/example/http/HttpClient.java\nindex 1e91769..b551e53 100644\n--- a/src/main/java/org/jboss/netty/example/http/HttpClient.java\n+++ b/src/main/java/org/jboss/netty/example/http/HttpClient.java\n@@ -87,7 +87,12 @@ public class HttpClient {\n         // Send the HTTP request.\n         HttpRequest request = new DefaultHttpRequest(HttpVersion.HTTP_1_0, HttpMethod.GET, uri);\n         request.addHeader(HttpHeaders.HOST, host);\n-        ChannelFuture lastWriteFuture = channel.write(request);\n-        lastWriteFuture.awaitUninterruptibly();\n+        channel.write(request);\n+\n+        // Wait for the server to close the connection.\n+        channel.getCloseFuture().awaitUninterruptibly();\n+\n+        // Shut down executor threads to exit.\n+        factory.getExternalResource().release();\n     }\n }\n\\ No newline at end of file\n",
    "summaries": {
      "en": "Added closing connection and closing execution thread",
      "zh": "添加关闭连接和关闭执行线程"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/core/java/com/android/internal/widget/LockPatternUtils.java b/core/java/com/android/internal/widget/LockPatternUtils.java\nindex 4d1276c..2694aa2 100644\n--- a/core/java/com/android/internal/widget/LockPatternUtils.java\n+++ b/core/java/com/android/internal/widget/LockPatternUtils.java\n@@ -346,12 +346,21 @@ public class LockPatternUtils {\n      */\n     public int getActivePasswordQuality() {\n         int activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED;\n-        switch (getKeyguardStoredPasswordQuality()) {\n+        // Note we don't want to use getKeyguardStoredPasswordQuality() because we want this to\n+        // return biometric_weak if that is being used instead of the backup\n+        int quality =\n+                (int) getLong(PASSWORD_TYPE_KEY, DevicePolicyManager.PASSWORD_QUALITY_SOMETHING);\n+        switch (quality) {\n             case DevicePolicyManager.PASSWORD_QUALITY_SOMETHING:\n                 if (isLockPatternEnabled()) {\n                     activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_SOMETHING;\n                 }\n                 break;\n+            case DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK:\n+                if (isBiometricWeakInstalled()) {\n+                    activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK;\n+                }\n+                break;\n             case DevicePolicyManager.PASSWORD_QUALITY_NUMERIC:\n                 if (isLockPasswordEnabled()) {\n                     activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_NUMERIC;\n@@ -373,6 +382,7 @@ public class LockPatternUtils {\n                 }\n                 break;\n         }\n+\n         return activePasswordQuality;\n     }\n \n",
    "summaries": {
      "en": "Modified getActivePasswordQuality() method to support biometric weak passwords",
      "zh": "修改 getActivePasswordQuality()方法以支持生物识别弱密码"
    }
  },
  {
    "type": "refactor",
    "subtype": "R9",
    "change": "diff --git a/graylog2-plugin-interfaces/src/main/java/org/graylog2/plugin/IOState.java b/graylog2-plugin-interfaces/src/main/java/org/graylog2/plugin/IOState.java\nindex 3470d26..5e48598 100644\n--- a/graylog2-plugin-interfaces/src/main/java/org/graylog2/plugin/IOState.java\n+++ b/graylog2-plugin-interfaces/src/main/java/org/graylog2/plugin/IOState.java\n@@ -30,6 +30,7 @@ import com.google.inject.assistedinject.AssistedInject;\n import org.graylog2.plugin.events.inputs.IOStateChangedEvent;\n import org.joda.time.DateTime;\n \n+import java.util.Objects;\n import java.util.UUID;\n \n @JsonAutoDetect\n@@ -122,15 +123,11 @@ public class IOState<T extends Stoppable> {\n \n         IOState that = (IOState) o;\n \n-        if (!stoppable.equals(that.stoppable)) return false;\n-\n-        return true;\n+        return Objects.equals(this.stoppable, that.stoppable);\n     }\n \n     @Override\n     public int hashCode() {\n-        int result = stoppable.hashCode();\n-        result = 31 * result + stoppable.hashCode();\n-        return result;\n+        return Objects.hash(this.stoppable);\n     }\n }\n",
    "summaries": {
      "en": "Use Objects.equals() and Objects.hash() instead of manual comparison and hash calculation",
      "zh": "使用 Objects.equals()和 Objects.hash()代替手动比较和哈希计算"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/platform/platform-api/src/com/intellij/openapi/fileChooser/FileChooserDescriptorFactory.java b/platform/platform-api/src/com/intellij/openapi/fileChooser/FileChooserDescriptorFactory.java\nindex 7c57825..1f18421 100644\n--- a/platform/platform-api/src/com/intellij/openapi/fileChooser/FileChooserDescriptorFactory.java\n+++ b/platform/platform-api/src/com/intellij/openapi/fileChooser/FileChooserDescriptorFactory.java\n@@ -95,4 +95,12 @@ public class FileChooserDescriptorFactory {\n       }\n     });\n   }\n+\n+  /**\n+   * @deprecated not very useful (to be removed in IDEA 15)\n+   */\n+  @SuppressWarnings(\"UnusedDeclaration\")\n+  public static FileChooserDescriptor getDirectoryChooserDescriptor(String objectName) {\n+    return createSingleFolderDescriptor().withTitle(\"Select \" + objectName);\n+  }\n }\n",
    "summaries": {
      "en": "Added getDirectoryChooserDescriptor() method",
      "zh": "添加getDirectoryChooserDescriptor()方法"
    }
  },
  {
    "type": "refactor",
    "subtype": "R6",
    "change": "diff --git a/SeriesGuide/src/main/java/com/battlelancer/seriesguide/billing/IabHelper.java b/SeriesGuide/src/main/java/com/battlelancer/seriesguide/billing/IabHelper.java\nindex ecd58071a..9c5ae9f56 100644\n--- a/SeriesGuide/src/main/java/com/battlelancer/seriesguide/billing/IabHelper.java\n+++ b/SeriesGuide/src/main/java/com/battlelancer/seriesguide/billing/IabHelper.java\n@@ -632,6 +632,7 @@ public class IabHelper {\n                     inv = queryInventory(mService, mContext.getPackageName(),\n                             mSubscriptionsSupported, querySkuDetails, moreSkus);\n                 } catch (IabException e) {\n+                    Timber.e(e, \"queryInventoryAsync: failed.\");\n                     result = e.getResult();\n                 }\n \n",
    "summaries": {
      "en": "Add inventory check error log recording",
      "zh": "添加库存检查错误日志记录"
    }
  },
  {
    "type": "fix",
    "subtype": "I3",
    "change": "diff --git a/services/core/java/com/android/server/am/ActivityStarter.java b/services/core/java/com/android/server/am/ActivityStarter.java\nindex 28be456..e3a62d5 100644\n--- a/services/core/java/com/android/server/am/ActivityStarter.java\n+++ b/services/core/java/com/android/server/am/ActivityStarter.java\n@@ -1362,7 +1362,7 @@ class ActivityStarter {\n                 }\n                 intentActivity.deliverNewIntentLocked(mCallingUid, mStartActivity.intent,\n                         mStartActivity.launchedFromPackage);\n-            } else if (!mStartActivity.intent.filterEquals(intentActivity.task.intent)) {\n+            } else if (!mStartActivity.intent.filterEquals(intentActivity.intent)) {\n                 // In this case we are launching the root activity of the task, but with a\n                 // different intent. We should start a new instance on top.\n                 mAddingToTask = true;\n",
    "summaries": {
      "en": "Modified the call of the filterEquals() method in the ActivityStarter class",
      "zh": "修改 ActivityStarter 类中的 filterEquals()方法调用"
    }
  },
  {
    "type": "build",
    "subtype": "B1",
    "change": "diff --git a/build.gradle b/build.gradle\nindex 227a903..37bc2yx 100644\n--- a/build.gradle\n+++ b/build.gradle\n@@ -1,7 +1,7 @@\n apply plugin: 'java'\n\n repositories {\n-    mavenCentral()\n+    jcenter()\n }\n\n dependencies {\n-    compile 'org.springframework.boot:spring-boot-starter-web:2.2.2'\n+    compile 'org.springframework.boot:spring-boot-starter-web:2.3.4'\n }",
    "summaries": {
      "en": "Update spring-boot-starter-web version to 2.3.4",
      "zh": "更新spring-boot-starter-web版本到2.3.4"
    }
  },
  {
    "type": "feat",
    "subtype": "E2",
    "change": "diff --git a/src/gwt/src/org/rstudio/core/client/StringUtil.java b/src/gwt/src/org/rstudio/core/client/StringUtil.java\nindex 612352b58..720f92142 100644\n--- a/src/gwt/src/org/rstudio/core/client/StringUtil.java\n+++ b/src/gwt/src/org/rstudio/core/client/StringUtil.java\n@@ -723,7 +723,7 @@ public class StringUtil\n                                  boolean backOverWhitespace)\n    {\n       if (backOverWhitespace)\n-         while (string.substring(pos - 1, pos).matches(\"\\\\s\"))\n+         while (pos > 0 && string.substring(pos - 1, pos).matches(\"\\\\s\"))\n             --pos;\n       \n       int startPos = Math.max(0, pos - 1);\n@@ -738,6 +738,9 @@ public class StringUtil\n                string.substring(endPos, endPos + 1).matches(tokenRegex))\n             ++endPos;\n       \n+      if (startPos >= endPos)\n+         return \"\";\n+      \n       return string.substring(startPos + 1, endPos);\n    }\n    \n",
    "summaries": {
      "en": "Added boundary check for string and returns an empty string",
      "zh": "新增对string边界进行检查并返回空字符串"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/demos/metagun/metagun-desktop/src/com/mojang/metagun/screen/Screen.java b/demos/metagun/metagun-desktop/src/com/mojang/metagun/screen/Screen.java\nindex 0cf3f64..71032e2 100644\n--- a/demos/metagun/metagun-desktop/src/com/mojang/metagun/screen/Screen.java\n+++ b/demos/metagun/metagun-desktop/src/com/mojang/metagun/screen/Screen.java\n@@ -3,13 +3,16 @@ package com.mojang.metagun.screen;\n import java.awt.Graphics;\r\n import java.util.Random;\r\n \r\n+import com.badlogic.gdx.graphics.g2d.SpriteBatch;\r\n import com.mojang.metagun.*;\r\n \r\n public abstract class Screen {\r\n     protected static Random random = new Random();\r\n     private Metagun metagun;\r\n+    protected SpriteBatch spriteBatch = new SpriteBatch(100);\r\n     \r\n-    public void removed() {\r\n+    public void removed() {    \t\r\n+    \tspriteBatch.dispose();\r\n     }\r\n \r\n     public final void init(Metagun metagun) {\r\n",
    "summaries": {
      "en": "Added a SpriteBatch instance and released resources in the removed() method",
      "zh": "添加 SpriteBatch 实例并在 removed()方法中释放资源"
    }
  },
  {
    "type": "feat",
    "subtype": "E2",
    "change": "diff --git a/src/de/danoeh/antennapod/syndication/util/SyndTypeUtils.java b/src/de/danoeh/antennapod/syndication/util/SyndTypeUtils.java\nindex 5e9494c9..16ef0243 100644\n--- a/src/de/danoeh/antennapod/syndication/util/SyndTypeUtils.java\n+++ b/src/de/danoeh/antennapod/syndication/util/SyndTypeUtils.java\n@@ -28,7 +28,7 @@ public class SyndTypeUtils {\n \t\tif (extension != null) {\n \t\t\tString type = MimeTypeMap.getSingleton().getMimeTypeFromExtension(\n \t\t\t\t\textension);\n-\t\t\tif (typeValid(type)) {\n+\t\t\tif (type != null && typeValid(type)) {\n \t\t\t\treturn type;\n \t\t\t}\n \t\t}\n",
    "summaries": {
      "en": "Fixed the null pointer exception in SyndTypeUtils",
      "zh": "修复 SyndTypeUtils 中的 nullpointer 异常"
    }
  },
  {
    "type": "cicd",
    "subtype": "C4",
    "change": "diff --git a/.gitlab-ci.yml b/.gitlab-ci.yml\nindex 7a8b9c0..1d2e3f4 100644\n--- a/.gitlab-ci.yml\n+++ b/.gitlab-ci.yml\n@@ -15,1 +15,4 @@ build:\n     - docker build --tag myimage .\n+    - docker build --cache-from myimage:latest --tag myimage .\n+  before_script:\n+    - docker pull myimage:latest || true",
    "summaries": {
      "en": "Implement Docker layer caching in CI to improve build speed",
      "zh": "在CI中实现Docker层缓存以提高构建速度"
    }
  },
  {
    "type": "fix",
    "subtype": "I2",
    "change": "diff --git a/examples/storm-starter/src/jvm/storm/starter/ResourceAwareExampleTopology.java b/examples/storm-starter/src/jvm/storm/starter/ResourceAwareExampleTopology.java\nindex c43a1bc..e8225d4 100644\n--- a/examples/storm-starter/src/jvm/storm/starter/ResourceAwareExampleTopology.java\n+++ b/examples/storm-starter/src/jvm/storm/starter/ResourceAwareExampleTopology.java\n@@ -82,7 +82,7 @@ public class ResourceAwareExampleTopology {\n      * Use to limit the maximum amount of memory (in MB) allocated to one worker process.\n      * Can be used to spread executors to to multiple workers\n      */\n-    conf.setTopologyWorkerMaxHeapSize(512.0);\n+    conf.setTopologyWorkerMaxHeapSize(1024.0);\n \n     if (args != null && args.length > 0) {\n       conf.setNumWorkers(3);\n",
    "summaries": {
      "en": "Set the maximum heap size of Worker to 1024MB",
      "zh": "将Worker的最大堆大小设置为1024MB"
    }
  },
  {
    "type": "fix",
    "subtype": "I13",
    "change": "diff --git a/library/src/se/emilsjolander/stickylistheaders/StickyListHeadersListView.java b/library/src/se/emilsjolander/stickylistheaders/StickyListHeadersListView.java\nindex 1030114..ecccdc5 100644\n--- a/library/src/se/emilsjolander/stickylistheaders/StickyListHeadersListView.java\n+++ b/library/src/se/emilsjolander/stickylistheaders/StickyListHeadersListView.java\n@@ -503,9 +503,7 @@ public class StickyListHeadersListView extends FrameLayout {\n \tprivate int getHeaderOverlap(int position) {\n \t\tboolean isStartOfSection = isStartOfSection(position);\n \t\tif (!isStartOfSection) {\n-\t\t\tView header = mAdapter.getHeaderView(position, null, mList);\n-\t\t\theader.setLayoutParams(new ViewGroup.LayoutParams(\n-\t\t\t\t\tLayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT));\n+\t\t\tView header = mAdapter.getView(position, null, mList);\n \n \t\t\tfinal int width = getWidth();\n \t\t\tfinal int parentWidthMeasureSpec = MeasureSpec.makeMeasureSpec(\n",
    "summaries": {
      "en": "Modified View instantiation method, removed layout parameter setting",
      "zh": "修改View实例化方式,取消设置布局参数"
    }
  },
  {
    "type": "build",
    "subtype": "B1",
    "change": "diff --git a/client/trino-cli/pom.xml b/client/trino-cli/pom.xml\nindex 11ded11..212dacf 100644\n--- a/client/trino-cli/pom.xml\n+++ b/client/trino-cli/pom.xml\n@@ -5,7 +5,7 @@\n     <parent>\n         <groupId>io.trino</groupId>\n         <artifactId>trino-root</artifactId>\n-        <version>416</version>\n+        <version>417-SNAPSHOT</version>\n         <relativePath>../../pom.xml</relativePath>\n     </parent>\n ",
    "summaries": {
      "en": "Update trino-root version to 417-SNAPSHOT",
      "zh": "更新trino-root版本号为417-SNAPSHOT"
    }
  },
  {
    "type": "refactor",
    "subtype": "R4",
    "change": "diff --git a/jmxtrans-core/src/main/java/com/googlecode/jmxtrans/model/output/support/ResultTransformerOutputWriter.java b/jmxtrans-core/src/main/java/com/googlecode/jmxtrans/model/output/support/ResultTransformerOutputWriter.java\nindex 194a0feb..7e0acf6b 100644\n--- a/jmxtrans-core/src/main/java/com/googlecode/jmxtrans/model/output/support/ResultTransformerOutputWriter.java\n+++ b/jmxtrans-core/src/main/java/com/googlecode/jmxtrans/model/output/support/ResultTransformerOutputWriter.java\n@@ -31,6 +31,8 @@ import com.googlecode.jmxtrans.model.results.BooleanAsNumberValueTransformer;\n import com.googlecode.jmxtrans.model.results.IdentityValueTransformer;\n import com.googlecode.jmxtrans.model.results.ResultValuesTransformer;\n \n+import com.googlecode.jmxtrans.exceptions.LifecycleException;\n+\n import javax.annotation.Nonnull;\n \n import org.slf4j.Logger;\n@@ -70,11 +72,11 @@ public class ResultTransformerOutputWriter<T extends OutputWriter> extends Outpu\n \t\treturn new ResultTransformerOutputWriter<>(new ResultValuesTransformer(new IdentityValueTransformer()), target);\n \t}\n \n-\tpublic void stop() {\n+\tpublic void stop() throws LifecycleException {\n \t\ttry {\n \t\t\ttarget.stop();\n \t\t} catch (LifecycleException ex) {\n-\t\t\tlogger.debug(\"error stopping writer\");\n+\t\t\tthrow(ex);\n \t\t}\n \t}\n \n",
    "summaries": {
      "en": "Throw captured LifecycleException when stopping",
      "zh": "将stop()中捕获的异常上抛"
    }
  },
  {
    "type": "fix",
    "subtype": "I2",
    "change": "diff --git a/OsmAnd/src/net/osmand/plus/activities/SettingsActivity.java b/OsmAnd/src/net/osmand/plus/activities/SettingsActivity.java\nindex de3524d0e9..441808c3d4 100644\n--- a/OsmAnd/src/net/osmand/plus/activities/SettingsActivity.java\n+++ b/OsmAnd/src/net/osmand/plus/activities/SettingsActivity.java\n@@ -159,7 +159,7 @@ public class SettingsActivity extends PreferenceActivity implements OnPreference\n \tpublic EditTextPreference createEditTextPreference(OsmandPreference<String> b, int title, int summary){\n \t\tEditTextPreference p = new EditTextPreference(this);\n \t\tp.setTitle(title);\n-\t\tp.setKey(b.get());\n+\t\tp.setKey(b.getId());\n \t\tp.setDialogTitle(title);\n \t\tp.setSummary(summary);\n \t\tp.setOnPreferenceChangeListener(this);\n",
    "summaries": {
      "en": "Change the parameter of setKey to getId()",
      "zh": "更改setKey的参数为getId()"
    }
  },
  {
    "type": "refactor",
    "subtype": "R7",
    "change": "diff --git a/src/gwt/src/org/rstudio/studio/client/RStudioGinModule.java b/src/gwt/src/org/rstudio/studio/client/RStudioGinModule.java\nindex db8d53f8d..7d2206058 100644\n--- a/src/gwt/src/org/rstudio/studio/client/RStudioGinModule.java\n+++ b/src/gwt/src/org/rstudio/studio/client/RStudioGinModule.java\n@@ -78,7 +78,6 @@ import org.rstudio.studio.client.workbench.views.source.SourcePane;\n import org.rstudio.studio.client.workbench.views.source.editors.EditingTargetSource;\n import org.rstudio.studio.client.workbench.views.source.editors.text.AceEditor;\n import org.rstudio.studio.client.workbench.views.source.editors.text.TextEditingTarget.DocDisplay;\n-import org.rstudio.studio.client.workbench.views.source.editors.text.themes.AceThemes;\n import org.rstudio.studio.client.workbench.views.source.model.SourceServerOperations;\n import org.rstudio.studio.client.workbench.views.workspace.Workspace;\n import org.rstudio.studio.client.workbench.views.workspace.WorkspacePane;\ndiff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/AceEditor.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/AceEditor.java\nindex 991d9d7c0..572fef0b8 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/AceEditor.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/AceEditor.java\n@@ -57,7 +57,6 @@ import org.rstudio.studio.client.workbench.views.source.editors.text.ace.*;\n import org.rstudio.studio.client.workbench.views.source.editors.text.ace.Position;\n import org.rstudio.studio.client.workbench.views.source.editors.text.ace.Renderer.ScreenCoordinates;\n import org.rstudio.studio.client.workbench.views.source.editors.text.events.CursorChangedHandler;\n-import org.rstudio.studio.client.workbench.views.source.editors.text.events.UndoRedoEvent;\n import org.rstudio.studio.client.workbench.views.source.editors.text.events.UndoRedoHandler;\n \n public class AceEditor implements DocDisplay, InputEditorDisplay\ndiff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/themes/AceThemes.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/themes/AceThemes.java\nindex fa6b4a7b7..346e809ad 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/themes/AceThemes.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/themes/AceThemes.java\n@@ -20,8 +20,6 @@ import com.google.inject.Singleton;\n import org.rstudio.core.client.CommandWithArg;\n import org.rstudio.core.client.resources.StaticDataResource;\n import org.rstudio.studio.client.application.events.EventBus;\n-import org.rstudio.studio.client.workbench.events.SessionInitEvent;\n-import org.rstudio.studio.client.workbench.events.SessionInitHandler;\n import org.rstudio.studio.client.workbench.prefs.model.UIPrefs;\n \n import java.util.ArrayList;\n",
    "summaries": {
      "en": "Eliminate unused import warnings in Eclipse",
      "zh": "消除未使用导入的eclipse警告"
    }
  },
  {
    "type": "test",
    "subtype": "T1",
    "change": "diff --git a/rados/src/test/java/com/yahoo/ycsb/db/RadosClientTest.java b/rados/src/test/java/com/yahoo/ycsb/db/RadosClientTest.java\nindex 52b86c5..af72643 100644\n--- a/rados/src/test/java/com/yahoo/ycsb/db/RadosClientTest.java\n+++ b/rados/src/test/java/com/yahoo/ycsb/db/RadosClientTest.java\n@@ -81,7 +81,7 @@ public class RadosClientTest {\n       radosclient.setProperties(p);\n       radosclient.init();\n     }\n-    catch (DBException e) {\n+    catch (DBException|UnsatisfiedLinkError e) {\n       assumeNoException(\"Ceph cluster is not running. Skipping tests.\", e);\n     }\n   }\n",
    "summaries": {
      "en": "If an UnsatisfiedLinkError occurs, skip the test",
      "zh": "如果发生UnsatisfiedLinkError则跳过测试"
    }
  },
  {
    "type": "docs",
    "subtype": "D2",
    "change": "diff --git a/rs/java/android/renderscript/ScriptIntrinsicBlur.java b/rs/java/android/renderscript/ScriptIntrinsicBlur.java\nindex 98499b5..7a702e8 100644\n--- a/rs/java/android/renderscript/ScriptIntrinsicBlur.java\n+++ b/rs/java/android/renderscript/ScriptIntrinsicBlur.java\n@@ -34,7 +34,8 @@ public final class ScriptIntrinsicBlur extends ScriptIntrinsic {\n      * Create an intrinsic for applying a blur to an allocation. The\n      * default radius is 5.0.\n      *\n-     * Supported elements types are {@link Element#U8_4 Element#U8}\n+     * Supported elements types are {@link Element#U8},\n+     * {@link Element#U8_4}.\n      *\n      * @param rs The RenderScript context\n      * @param e Element type for inputs and outputs\n",
    "summaries": {
      "en": "Clearly declare that {@link Element#U8} and {@link Element#U8_4} are supported element types",
      "zh": "清楚声明{@link Element#U8}, {@link Element#U8_4}是支持的元素类型"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/plugins/github/src/org/jetbrains/plugins/github/tasks/GithubRepository.java b/plugins/github/src/org/jetbrains/plugins/github/tasks/GithubRepository.java\nindex d92c4f4..c77b7cf 100644\n--- a/plugins/github/src/org/jetbrains/plugins/github/tasks/GithubRepository.java\n+++ b/plugins/github/src/org/jetbrains/plugins/github/tasks/GithubRepository.java\n@@ -22,10 +22,7 @@ import org.jetbrains.plugins.github.api.GithubApiUtil;\n import org.jetbrains.plugins.github.api.GithubConnection;\n import org.jetbrains.plugins.github.api.GithubIssue;\n import org.jetbrains.plugins.github.api.GithubIssueComment;\n-import org.jetbrains.plugins.github.exceptions.GithubAuthenticationException;\n-import org.jetbrains.plugins.github.exceptions.GithubJsonException;\n-import org.jetbrains.plugins.github.exceptions.GithubRateLimitExceededException;\n-import org.jetbrains.plugins.github.exceptions.GithubStatusCodeException;\n+import org.jetbrains.plugins.github.exceptions.*;\n import org.jetbrains.plugins.github.util.GithubAuthData;\n import org.jetbrains.plugins.github.util.GithubUtil;\n \n@@ -68,14 +65,20 @@ public class GithubRepository extends BaseRepositoryImpl {\n   @Override\n   public CancellableConnection createCancellableConnection() {\n     return new CancellableConnection() {\n+      private final GithubConnection myConnection = new GithubConnection(getAuthData(), false);\n+\n       @Override\n       protected void doTest() throws Exception {\n-        getIssues(\"\", 10, false);\n+        try {\n+          GithubApiUtil.getIssuesQueried(myConnection, getRepoAuthor(), getRepoName(), \"\", false);\n+        }\n+        catch (GithubOperationCanceledException ignore) {\n+        }\n       }\n \n       @Override\n       public void cancel() {\n-        // TODO\n+        myConnection.abort();\n       }\n     };\n   }\n",
    "summaries": {
      "en": "Implemented interruptible connection check",
      "zh": "实现了可中止的连接检查"
    }
  },
  {
    "type": "refactor",
    "subtype": "R6",
    "change": "diff --git a/graylog2-server/src/main/java/org/graylog2/bindings/providers/MongoConnectionProvider.java b/graylog2-server/src/main/java/org/graylog2/bindings/providers/MongoConnectionProvider.java\nindex 8ed2b9a..6140c02 100644\n--- a/graylog2-server/src/main/java/org/graylog2/bindings/providers/MongoConnectionProvider.java\n+++ b/graylog2-server/src/main/java/org/graylog2/bindings/providers/MongoConnectionProvider.java\n@@ -19,19 +19,27 @@ package org.graylog2.bindings.providers;\n import org.graylog2.configuration.MongoDbConfiguration;\n import org.graylog2.database.MongoConnection;\n import org.graylog2.database.MongoConnectionImpl;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n import javax.inject.Inject;\n import javax.inject.Provider;\n \n public class MongoConnectionProvider implements Provider<MongoConnection> {\n+    private static final Logger LOG = LoggerFactory.getLogger(MongoConnectionProvider.class);\n     private static MongoConnection mongoConnection = null;\n \n     @Inject\n     public MongoConnectionProvider(MongoDbConfiguration configuration) {\n         if (mongoConnection == null) {\n-            mongoConnection = new MongoConnectionImpl(configuration);\n+            try {\n+                mongoConnection = new MongoConnectionImpl(configuration);\n \n-            mongoConnection.connect();\n+                mongoConnection.connect();\n+            } catch (Exception e) {\n+                LOG.error(\"Error connecting to MongoDB: {}\", e.getMessage());\n+                throw e;\n+            }\n         }\n     }\n \n",
    "summaries": {
      "en": "Log error connecting to MongoDB",
      "zh": "记录连接到MongoDB的错误"
    }
  },
  {
    "type": "refactor",
    "subtype": "R9",
    "change": "diff --git a/WordPress/src/main/java/org/wordpress/android/ui/comments/CommentDetailFragment.java b/WordPress/src/main/java/org/wordpress/android/ui/comments/CommentDetailFragment.java\nindex ee74b6117..2a30c5fe3 100644\n--- a/WordPress/src/main/java/org/wordpress/android/ui/comments/CommentDetailFragment.java\n+++ b/WordPress/src/main/java/org/wordpress/android/ui/comments/CommentDetailFragment.java\n@@ -438,7 +438,8 @@ public class CommentDetailFragment extends Fragment implements NotificationFragm\n             setIdForCommentContainer();\n             showComment();\n         }\n-        setRemoteBlogId(note.getSiteId());\n+\n+        mRemoteBlogId = note.getSiteId();\n     }\n \n     private void setIdForFragmentContainer(int id){\n@@ -534,10 +535,6 @@ public class CommentDetailFragment extends Fragment implements NotificationFragm\n         return mRemoteBlogId;\n     }\n \n-    private void setRemoteBlogId(int remoteBlogId) {\n-        mRemoteBlogId = remoteBlogId;\n-    }\n-\n     /*\n      * reload the current comment from the local database\n      */\n",
    "summaries": {
      "en": "Change the function of setRemoteBlogId() to direct assignment",
      "zh": "将setRemoteBlogId()函数的作用改为直接赋值"
    }
  },
  {
    "type": "test",
    "subtype": "T1",
    "change": "diff --git a/subprojects/internal-performance-testing/src/main/groovy/org/gradle/performance/fixture/TestScenarioSelector.java b/subprojects/internal-performance-testing/src/main/groovy/org/gradle/performance/fixture/TestScenarioSelector.java\nindex 1fc2549..e67cf7f 100644\n--- a/subprojects/internal-performance-testing/src/main/groovy/org/gradle/performance/fixture/TestScenarioSelector.java\n+++ b/subprojects/internal-performance-testing/src/main/groovy/org/gradle/performance/fixture/TestScenarioSelector.java\n@@ -79,7 +79,7 @@ public class TestScenarioSelector {\n             BigDecimal sum = BigDecimal.ZERO;\n             for (MeasuredOperationList operation : lastRun.getScenarios()) {\n                 for (Amount<Duration> duration : operation.getTotalTime()) {\n-                    sum = sum.add(duration.getValue());\n+                    sum = sum.add(duration.toUnits(Duration.MILLI_SECONDS).getValue());\n                 }\n             }\n             return sum;\n",
    "summaries": {
      "en": "Converting time unit to milliseconds",
      "zh": "将时间单位转换为毫秒"
    }
  },
  {
    "type": "fix",
    "subtype": "I3",
    "change": "diff --git a/library/src/com/db/chart/view/HorizontalBarChartView.java b/library/src/com/db/chart/view/HorizontalBarChartView.java\nindex 0c59432..ff7ea96 100644\n--- a/library/src/com/db/chart/view/HorizontalBarChartView.java\n+++ b/library/src/com/db/chart/view/HorizontalBarChartView.java\n@@ -68,8 +68,8 @@ public class HorizontalBarChartView extends BaseBarChartView {\n \t\tfloat offset;\n \t\tBarSet barSet;\n \t\tBar bar;\n-\t\t\n-\t\tfor (int i = nEntries - 1; i >= 0; i--) {\n+\n+\t\tfor (int i = 0; i < nEntries; i++){\n \t\t\t\n \t\t\t// Set first offset to draw a group of bars\n             offset = data.get(0).getEntry(i).getY() - drawingOffset;\n@@ -168,8 +168,8 @@ public class HorizontalBarChartView extends BaseBarChartView {\n \t\tfloat offset;\n \t\tBarSet barSet;\n \t\tBar bar;\n-\t\t\n-\t\tfor (int i = nEntries - 1; i >= 0; i--) {\n+\n+\t\tfor (int i = 0; i < nEntries; i++){\n \t\t\t\n \t\t\t// Set first offset to draw a group of bars\n             offset = data.get(0).getEntry(i).getY() - drawingOffset;\n",
    "summaries": {
      "en": "Fix incorrect index retrieval in the loop",
      "zh": "修复循环中错误的索引检索"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSFiles.java b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSFiles.java\nindex 79846a2..e517b92 100644\n--- a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSFiles.java\n+++ b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSFiles.java\n@@ -23,6 +23,7 @@ public class IOSFiles implements Files {\n \t\n \t@Override\n \tpublic FileHandle getFileHandle (String fileName, FileType type) {\n+\t\tif (type == FileType.Internal) return internal(fileName);\n \t\treturn new IOSFileHandle(fileName, type);\n \t}\n \n",
    "summaries": {
      "en": "Add support for internal files",
      "zh": "添加对内部文件的支持"
    }
  },
  {
    "type": "fix",
    "subtype": "I2",
    "change": "diff --git a/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java b/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java\nindex 402d63fff..a05c4a877 100644\n--- a/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java\n+++ b/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java\n@@ -37,7 +37,7 @@ public class AppCompatTextView extends TextView {\n     }\n \n     public AppCompatTextView(Context context, AttributeSet attrs) {\n-        this(context, attrs, 0);\n+        this(context, attrs, android.R.attr.textViewStyle);\n     }\n \n     public AppCompatTextView(Context context, AttributeSet attrs, int defStyle) {\n",
    "summaries": {
      "en": "Corrected parameter usage in constructor method",
      "zh": "更正构造方法中的参数使用"
    }
  },
  {
    "type": "docs",
    "subtype": "D2",
    "change": "diff --git a/jetty-websocket/websocket-common/src/main/java/org/eclipse/jetty/websocket/common/io/WriteCallbackWrapper.java b/jetty-websocket/websocket-common/src/main/java/org/eclipse/jetty/websocket/common/io/WriteCallbackWrapper.java\nindex 34b2bf19e2..e2cb9aa75f 100644\n--- a/jetty-websocket/websocket-common/src/main/java/org/eclipse/jetty/websocket/common/io/WriteCallbackWrapper.java\n+++ b/jetty-websocket/websocket-common/src/main/java/org/eclipse/jetty/websocket/common/io/WriteCallbackWrapper.java\n@@ -22,7 +22,7 @@ import org.eclipse.jetty.util.Callback;\n import org.eclipse.jetty.websocket.api.WriteCallback;\n \n /**\n- * Wraps the exposed {@link WriteCallback} API with a Jetty {@link Callback}.\n+ * Wraps the exposed {@link WriteCallback} WebSocket API with a Jetty {@link Callback}.\n  * <p>\n  * We don't expose the jetty {@link Callback} object to the webapp, as that makes things complicated for the WebAppContext's Classloader.\n  */\n",
    "summaries": {
      "en": "Modify the text in the comments to make it clearer",
      "zh": "修改注释中的文本，以使其更明确"
    }
  },
  {
    "type": "refactor",
    "subtype": "R4",
    "change": "diff --git a/storm-core/src/jvm/backtype/storm/messaging/netty/Client.java b/storm-core/src/jvm/backtype/storm/messaging/netty/Client.java\nindex 18582b4..00ca449 100644\n--- a/storm-core/src/jvm/backtype/storm/messaging/netty/Client.java\n+++ b/storm-core/src/jvm/backtype/storm/messaging/netty/Client.java\n@@ -52,7 +52,7 @@ public class Client implements IConnection {\n     private final int buffer_size;\n     private boolean closing;\n \n-    private Integer messageBatchSize;\n+    private int messageBatchSize;\n     \n     private AtomicLong pendings;\n \n",
    "summaries": {
      "en": "Replace Integer with int primitive type",
      "zh": "使用原始类型int代替Integer"
    }
  },
  {
    "type": "fix",
    "subtype": "I3",
    "change": "diff --git a/v7/appcompat/src/android/support/v7/app/ActionBarActivityDelegateBase.java b/v7/appcompat/src/android/support/v7/app/ActionBarActivityDelegateBase.java\nindex c1eb6b1aa..3128b7749 100644\n--- a/v7/appcompat/src/android/support/v7/app/ActionBarActivityDelegateBase.java\n+++ b/v7/appcompat/src/android/support/v7/app/ActionBarActivityDelegateBase.java\n@@ -379,7 +379,7 @@ class ActionBarActivityDelegateBase extends ActionBarActivityDelegate\n     public View onCreatePanelView(int featureId) {\n         View createdPanelView = null;\n \n-        if (featureId == Window.FEATURE_OPTIONS_PANEL && preparePanel()) {\n+        if (featureId == Window.FEATURE_OPTIONS_PANEL && mActionMode == null && preparePanel()) {\n             createdPanelView = (View) getListMenuView(mActivity);\n         }\n \n",
    "summaries": {
      "en": "Check if mActionMode is not empty before preparePanel()",
      "zh": "在preparePanel()之前检查mActionMode是否为空"
    }
  },
  {
    "type": "style",
    "subtype": "S2",
    "change": "diff --git a/jphp-runtime/src/php/runtime/invoke/InvokeHelper.java b/jphp-runtime/src/php/runtime/invoke/InvokeHelper.java\nindex a4a4ef68..11fc8c3c 100644\n--- a/jphp-runtime/src/php/runtime/invoke/InvokeHelper.java\n+++ b/jphp-runtime/src/php/runtime/invoke/InvokeHelper.java\n@@ -70,7 +70,7 @@ final public class InvokeHelper {\n     public static Memory[] makeArguments(Environment env, Memory[] args,\n                                        ParameterEntity[] parameters,\n                                        String originClassName, String originMethodName,\n-                                       TraceInfo trace){\n+                                       TraceInfo trace) {\n         return InvokeArgumentHelper.makeArguments(env, args, parameters, originClassName, originMethodName, trace);\n     }\n \n",
    "summaries": {
      "en": "Fix code formatting",
      "zh": "修复代码格式"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/src/main/java/zmq/Poller.java b/src/main/java/zmq/Poller.java\nindex f7575ae..8f20548 100644\n--- a/src/main/java/zmq/Poller.java\n+++ b/src/main/java/zmq/Poller.java\n@@ -167,6 +167,7 @@ public class Poller extends PollerBase implements Runnable\n     public void start()\n     {\n         worker = new Thread(this, name);\n+        worker.setDaemon(true);\n         worker.start();\n     }\n \n",
    "summaries": {
      "en": "Set the working thread as a daemon thread",
      "zh": "将工作线程设置为守护线程"
    }
  },
  {
    "type": "refactor",
    "subtype": "R5",
    "change": "diff --git a/src/main/groovy/lang/ClosureException.java b/src/main/groovy/lang/ClosureException.java\nindex 8a0bb655d..3fe8caabb 100644\n--- a/src/main/groovy/lang/ClosureException.java\n+++ b/src/main/groovy/lang/ClosureException.java\n@@ -26,7 +26,7 @@ public class ClosureException extends RuntimeException {\n     private final Closure closure;\n     \n     public ClosureException(Closure closure, Throwable cause) {\n-        super(\"Exception thrown by call to closure: \" + closure + \" reaason: \" + cause, cause);\n+        super(\"Exception thrown by call to closure: \" + closure + \" reason: \" + cause, cause);\n         this.closure = closure;\n     }\n \n",
    "summaries": {
      "en": "Fix spelling error in ClosureException",
      "zh": "修复ClosureException中的拼写错误"
    }
  },
  {
    "type": "test",
    "subtype": "T1",
    "change": "diff --git a/byte-buddy-dep/src/test/java/net/bytebuddy/asm/AdviceTest.java b/byte-buddy-dep/src/test/java/net/bytebuddy/asm/AdviceTest.java\nindex 91d95547a6..c693ec984c 100644\n--- a/byte-buddy-dep/src/test/java/net/bytebuddy/asm/AdviceTest.java\n+++ b/byte-buddy-dep/src/test/java/net/bytebuddy/asm/AdviceTest.java\n@@ -9,6 +9,7 @@ import net.bytebuddy.description.type.TypeDescription;\n import net.bytebuddy.dynamic.ClassFileLocator;\n import net.bytebuddy.dynamic.loading.ClassLoadingStrategy;\n import net.bytebuddy.implementation.bytecode.StackSize;\n+import net.bytebuddy.test.utility.DebuggingWrapper;\n import net.bytebuddy.test.utility.ObjectPropertyAssertion;\n import org.junit.Test;\n import org.objectweb.asm.ClassReader;\n@@ -52,6 +53,7 @@ public class AdviceTest {\n     public void testEmptyAdviceEntryAndExit() throws Exception {\n         Class<?> type = new ByteBuddy()\n                 .redefine(EmptyMethod.class)\n+                .visit(DebuggingWrapper.makeDefault())\n                 .visit(Advice.to(EmptyAdvice.class).on(named(FOO)).readerFlags(ClassReader.SKIP_DEBUG))\n                 .make()\n                 .load(null, ClassLoadingStrategy.Default.WRAPPER)\n",
    "summaries": {
      "en": "Add DebuggingWrapper for debugging purposes",
      "zh": "添加 DebuggingWrapper 以便调试"
    }
  },
  {
    "type": "test",
    "subtype": "T1",
    "change": "diff --git a/test/net/java/sip/communicator/slick/protocol/icq/TestOperationSetPresence.java b/test/net/java/sip/communicator/slick/protocol/icq/TestOperationSetPresence.java\nindex 48da78a96..1989f9ced 100644\n--- a/test/net/java/sip/communicator/slick/protocol/icq/TestOperationSetPresence.java\n+++ b/test/net/java/sip/communicator/slick/protocol/icq/TestOperationSetPresence.java\n@@ -102,7 +102,7 @@ public class TestOperationSetPresence\n \n         // execute this test after postTestSubscribe\n         // to be sure that AuthorizationHandler is installed\n-        suite.addTest(new TestOperationSetPresence(\"postTestReceiveAuthorizatinonRequest\"));\n+//        suite.addTest(new TestOperationSetPresence(\"postTestReceiveAuthorizatinonRequest\"));\n \n         return suite;\n     }\n",
    "summaries": {
      "en": "Comment out failed tests",
      "zh": "注释掉失败的测试"
    }
  },
  {
    "type": "refactor",
    "subtype": "R10",
    "change": "diff --git a/src/main/java/water/api/AUC.java b/src/main/java/water/api/AUC.java\nindex d6c50341e..91bed919f 100644\n--- a/src/main/java/water/api/AUC.java\n+++ b/src/main/java/water/api/AUC.java\n@@ -70,7 +70,6 @@ public class AUC extends Func {\n    */\n   public AUC(hex.ConfusionMatrix[] cms, float[] thresh, String[] domain) {\n     aucdata = new AUCData().compute(cms, thresh, domain, threshold_criterion);\n-    computeGainsLift();\n   }\n \n   private void computeGainsLift() {\n",
    "summaries": {
      "en": "Delete the call to the computeGainsLift() method",
      "zh": "删除 computeGainsLift()方法调用"
    }
  },
  {
    "type": "build",
    "subtype": "B1",
    "change": "diff --git a/shenyu-client/pom.xml b/shenyu-client/pom.xml\nindex 971011e..91c0874 100644\n--- a/shenyu-client/pom.xml\n+++ b/shenyu-client/pom.xml\n@@ -37,6 +37,7 @@\n         <module>shenyu-client-websocket</module>\n         <module>shenyu-client-brpc</module>\n         <module>shenyu-client-api-docs-annotations</module>\n+        <module>shenyu-client-autoconfig</module>\n     </modules>\n \n     <dependencies>",
    "summaries": {
      "en": "Add shenyu-client-autoconfig module",
      "zh": "添加shenyu-client-autoconfig模块"
    }
  },
  {
    "type": "fix",
    "subtype": "I2",
    "change": "diff --git a/plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/runtime/sql/SQLQueryParameterBindDialog.java b/plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/runtime/sql/SQLQueryParameterBindDialog.java\nindex b70ed55c6..c52ccacb8 100644\n--- a/plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/runtime/sql/SQLQueryParameterBindDialog.java\n+++ b/plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/runtime/sql/SQLQueryParameterBindDialog.java\n@@ -149,7 +149,7 @@ public class SQLQueryParameterBindDialog extends StatusDialog {\n             tableEditor.showEditor(paramTable.getItem(0), 2);\r\n         }\r\n \r\n-        updateStatus(GeneralUtils.makeInfoStatus(\"Use Tab key to switch parameters\"));\r\n+        updateStatus(GeneralUtils.makeInfoStatus(\"Use Tab to switch. String values must be quoted. You can use expressions in values\"));\r\n         return composite;\r\n     }\r\n \r\n",
    "summaries": {
      "en": "Update status message with more detailed information",
      "zh": "更新状态消息，提供更多详细信息"
    }
  },
  {
    "type": "refactor",
    "subtype": "R3",
    "change": "diff --git a/byte-buddy-dep/src/main/java/net/bytebuddy/dynamic/ClassFileLocator.java b/byte-buddy-dep/src/main/java/net/bytebuddy/dynamic/ClassFileLocator.java\nindex 40161a7be6..2ef10b9081 100644\n--- a/byte-buddy-dep/src/main/java/net/bytebuddy/dynamic/ClassFileLocator.java\n+++ b/byte-buddy-dep/src/main/java/net/bytebuddy/dynamic/ClassFileLocator.java\n@@ -318,10 +318,15 @@ public interface ClassFileLocator extends Closeable {\n          */\n         public static Resolution read(Class<?> type) {\n             try {\n-                ClassLoader classLoader = type.getClassLoader();\n-                return locate(classLoader == null\n-                        ? ClassLoader.getSystemClassLoader()\n-                        : classLoader, TypeDescription.ForLoadedType.getName(type));\n+                JavaModule module = JavaModule.ofType(type);\n+                if (module == null || !module.isNamed()) {\n+                    return ForModule.locate(module, TypeDescription.ForLoadedType.getName(type));\n+                } else {\n+                    ClassLoader classLoader = type.getClassLoader();\n+                    return locate(classLoader == null\n+                            ? ClassLoader.getSystemClassLoader()\n+                            : classLoader, TypeDescription.ForLoadedType.getName(type));\n+                }\n             } catch (IOException exception) {\n                 throw new IllegalStateException(\"Cannot read class file for \" + type, exception);\n             }\n",
    "summaries": {
      "en": "Read class files based on the name of the Java module",
      "zh": "根据Java模块的名称读取类文件"
    }
  },
  {
    "type": "refactor",
    "subtype": "R10",
    "change": "diff --git a/src/persistence/org/codehaus/groovy/grails/orm/hibernate/metaclass/ValidatePersistentMethod.java b/src/persistence/org/codehaus/groovy/grails/orm/hibernate/metaclass/ValidatePersistentMethod.java\nindex 4bba2e8020..4db6f58918 100644\n--- a/src/persistence/org/codehaus/groovy/grails/orm/hibernate/metaclass/ValidatePersistentMethod.java\n+++ b/src/persistence/org/codehaus/groovy/grails/orm/hibernate/metaclass/ValidatePersistentMethod.java\n@@ -61,7 +61,6 @@ public class ValidatePersistentMethod extends AbstractDynamicPersistentMethod {\n \t\t\tif(errors.hasErrors()) {\n \t\t\t\tvalid = new Boolean(!errors.hasErrors());\t\n \t\t\t\tDelegatingMetaClass metaClass = (DelegatingMetaClass)InvokerHelper.getInstance().getMetaRegistry().getMetaClass(target.getClass());\n-\t\t\t\tmetaClass.setProperty(target,DomainClassMethods.HAS_ERRORS_PROPERTY,valid);\n \t\t\t\tmetaClass.setProperty(target,DomainClassMethods.ERRORS_PROPERTY,errors);\n \t\t\t}\n \t\t}\n",
    "summaries": {
      "en": "Delete unnecessary code",
      "zh": "删除无用的代码"
    }
  },
  {
    "type": "fix",
    "subtype": "I2",
    "change": "diff --git a/samples/java-jaxrs/src/main/java/com/wordnik/swagger/sample/util/ApiOriginFilter.java b/samples/java-jaxrs/src/main/java/com/wordnik/swagger/sample/util/ApiOriginFilter.java\nindex dcb70f6..b5ab537 100644\n--- a/samples/java-jaxrs/src/main/java/com/wordnik/swagger/sample/util/ApiOriginFilter.java\n+++ b/samples/java-jaxrs/src/main/java/com/wordnik/swagger/sample/util/ApiOriginFilter.java\n@@ -28,7 +28,7 @@ public class ApiOriginFilter implements javax.servlet.Filter {\n     HttpServletResponse res = (HttpServletResponse) response;\n     res.addHeader(\"Access-Control-Allow-Origin\", \"*\");\n     res.addHeader(\"Access-Control-Allow-Methods\", \"GET, POST, DELETE, PUT\");\n-    res.addHeader(\"Access-Control-Allow-Headers\", \"Content-Type, api_key\");\n+    res.addHeader(\"Access-Control-Allow-Headers\", \"Content-Type, api_key, Authorization\");\n     chain.doFilter(request, response);\n   }\n \n",
    "summaries": {
      "en": "Add access control to allow authorized headers",
      "zh": "添加访问控制允许授权头部"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/jetty-io/src/main/java/org/eclipse/jetty/io/nio/SelectChannelEndPoint.java b/jetty-io/src/main/java/org/eclipse/jetty/io/nio/SelectChannelEndPoint.java\nindex ab5d9ff75c..d440a1ba4a 100644\n--- a/jetty-io/src/main/java/org/eclipse/jetty/io/nio/SelectChannelEndPoint.java\n+++ b/jetty-io/src/main/java/org/eclipse/jetty/io/nio/SelectChannelEndPoint.java\n@@ -176,9 +176,12 @@ public class SelectChannelEndPoint extends ChannelEndPoint implements AsyncEndPo\n                 _writable = true; // Once writable is in ops, only removed with dispatch.\n             }\n \n-            // Dispatch if we are not already\n-            if (!_dispatched)\n+            // If dispatched, then deregister interest\n+            if (_dispatched)\n+                _key.interestOps(0);\n+            else\n             {\n+                // other wise do the dispatch\n                 dispatch();\n                 if (_dispatched && !_selectSet.getManager().isDeferringInterestedOps0())\n                 {\n",
    "summaries": {
      "en": "Added execution logic for sent messages",
      "zh": "添加已发送时的执行逻辑"
    }
  },
  {
    "type": "fix",
    "subtype": "I3",
    "change": "diff --git a/src/org/wordpress/android/ui/notifications/NotificationsListFragment.java b/src/org/wordpress/android/ui/notifications/NotificationsListFragment.java\nindex 2194f63de..a0cc93205 100644\n--- a/src/org/wordpress/android/ui/notifications/NotificationsListFragment.java\n+++ b/src/org/wordpress/android/ui/notifications/NotificationsListFragment.java\n@@ -91,6 +91,10 @@ public class NotificationsListFragment extends ListFragment {\n         }\n     }\n \n+    private boolean hasActivity() {\n+        return (getActivity() != null && !isRemoving());\n+    }\n+\n     public NotesAdapter getNotesAdapter() {\n         return mNotesAdapter;\n     }\n@@ -104,7 +108,7 @@ public class NotificationsListFragment extends ListFragment {\n     }\n \n     private void requestMoreNotifications() {\n-        if (mNoteProvider != null && mNoteProvider.canRequestMore()) {\n+        if (mNoteProvider != null && mNoteProvider.canRequestMore() && hasActivity()) {\n             showProgressFooter();\n             mNoteProvider.onRequestMoreNotifications(getListView(), getListAdapter());\n         }\n",
    "summaries": {
      "en": "Added hasActivity() check before requesting more notifications to ensure safety",
      "zh": "在请求更多通知之前添加 hasActivity() 检查，以确保安全"
    }
  },
  {
    "type": "test",
    "subtype": "T1",
    "change": "diff --git a/src/test/java/hex/GLMTest.java b/src/test/java/hex/GLMTest.java\nindex 98d56c70a..e4946bdce 100644\n--- a/src/test/java/hex/GLMTest.java\n+++ b/src/test/java/hex/GLMTest.java\n@@ -390,8 +390,7 @@ public class GLMTest extends TestUtil {\n       JsonObject glm = computeGLMlog(lsms,va,true); // Solve it!\n       JsonObject jcoefs = glm.get(\"coefficients\").getAsJsonObject();\n       double icept = jcoefs.get(\"Intercept\").getAsDouble();\n-\n-      assertCat(jcoefs,icept,\"Low\" ,0.0      );\n+//      assertCat(jcoefs,icept,\"Low\" ,0.0      );\n       assertCat(jcoefs,icept,\"Med\" ,0.3333333);\n       assertCat(jcoefs,icept,\"High\",1.0      );\n       UKV.remove(Key.make(glm.get(Constants.MODEL_KEY).getAsString()));\n",
    "summaries": {
      "en": "Comment out the line \"assertCat(jcoefs,icept,\"Low\" ,0.0);\"",
      "zh": "注释掉assertCat(jcoefs,icept,\"Low\" ,0.0      );"
    }
  },
  {
    "type": "test",
    "subtype": "T1",
    "change": "diff --git a/platform/testFramework/src/com/intellij/testFramework/LightPlatformTestCase.java b/platform/testFramework/src/com/intellij/testFramework/LightPlatformTestCase.java\nindex 3617e5c..4f3279d 100644\n--- a/platform/testFramework/src/com/intellij/testFramework/LightPlatformTestCase.java\n+++ b/platform/testFramework/src/com/intellij/testFramework/LightPlatformTestCase.java\n@@ -45,7 +45,6 @@ import com.intellij.openapi.command.undo.UndoManager;\n import com.intellij.openapi.editor.Document;\n import com.intellij.openapi.editor.Editor;\n import com.intellij.openapi.editor.EditorFactory;\n-import com.intellij.openapi.editor.ex.EditorSettingsExternalizable;\n import com.intellij.openapi.editor.impl.ComplementaryFontsRegistry;\n import com.intellij.openapi.editor.impl.EditorFactoryImpl;\n import com.intellij.openapi.editor.impl.EditorImpl;\n@@ -307,8 +306,6 @@ public abstract class LightPlatformTestCase extends UsefulTestCase implements Da\n         // various tests can use different mocking techniques for font-related code\n         // so we must reset our font cache, to avoid potential impact of tests on other tests \n         ComplementaryFontsRegistry.resetCaches();\n-\n-        System.out.println(\"soft wraps enabled: \" + EditorSettingsExternalizable.getInstance().isUseSoftWraps()); // temporary code to find out cause of test blinking\n       }\n     });\n   }\n",
    "summaries": {
      "en": "Delete temporary test code",
      "zh": "删除临时测试代码"
    }
  },
  {
    "type": "docs",
    "subtype": "D2",
    "change": "diff --git a/twitter4j-core/src/main/java/twitter4j/api/UsersResources.java b/twitter4j-core/src/main/java/twitter4j/api/UsersResources.java\nindex 3ba376e4..4dbadd9a 100644\n--- a/twitter4j-core/src/main/java/twitter4j/api/UsersResources.java\n+++ b/twitter4j-core/src/main/java/twitter4j/api/UsersResources.java\n@@ -331,7 +331,7 @@ public interface UsersResources {\n      * Return up to 100 users worth of extended information, specified by either ID, screen name, or combination of the two. The author's most recent status (if the authenticating user has permission) will be returned inline.\n      * <br>This method calls https://api.twitter.com/1.1/users/lookup.json\n      *\n-     * @param ids Specifies the screen names of the users to return.\n+     * @param ids Specifies the IDs of the users to return.\n      * @return users\n      * @throws TwitterException when Twitter service or network is unavailable\n      * @see <a href=\"https://dev.twitter.com/docs/api/1.1/get/users/lookup\">GET users/lookup | Twitter Developers</a>\n",
    "summaries": {
      "en": "Fix incorrect Javadoc",
      "zh": "修复错误的Javadoc"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/src/edu/stanford/nlp/util/CoreMap.java b/src/edu/stanford/nlp/util/CoreMap.java\nindex d60bffb..a25fe59 100644\n--- a/src/edu/stanford/nlp/util/CoreMap.java\n+++ b/src/edu/stanford/nlp/util/CoreMap.java\n@@ -2,6 +2,8 @@ package edu.stanford.nlp.util;\n \n import edu.stanford.nlp.util.logging.PrettyLoggable;\n \n+import java.io.Serializable;\n+\n /**\n  * <p>\n  * Base type for all annotatable core objects. Should usually be instantiated as\n@@ -26,4 +28,4 @@ import edu.stanford.nlp.util.logging.PrettyLoggable;\n  * @author dramage\n  * @author rafferty\n  */\n-public interface CoreMap extends TypesafeMap, PrettyLoggable { }\n+public interface CoreMap extends TypesafeMap, PrettyLoggable, Serializable { }\n",
    "summaries": {
      "en": "Add Serializable interface",
      "zh": "添加 Serializable 接口"
    }
  },
  {
    "type": "fix",
    "subtype": "I1",
    "change": "diff --git a/translator/src/main/java/com/google/devtools/j2objc/gen/ObjectiveCImplementationGenerator.java b/translator/src/main/java/com/google/devtools/j2objc/gen/ObjectiveCImplementationGenerator.java\nindex 806d2b0..b4871c6 100644\n--- a/translator/src/main/java/com/google/devtools/j2objc/gen/ObjectiveCImplementationGenerator.java\n+++ b/translator/src/main/java/com/google/devtools/j2objc/gen/ObjectiveCImplementationGenerator.java\n@@ -1065,7 +1065,7 @@ public class ObjectiveCImplementationGenerator extends ObjectiveCSourceFileGener\n     } else if (value instanceof String) {\n       StringLiteral node = ast.newStringLiteral();\n       node.setLiteralValue((String) value);\n-      printf(StatementGenerator.generateStringLiteral(node));\n+      print(StatementGenerator.generateStringLiteral(node));\n     } else if (value instanceof Number || value instanceof Character || value instanceof Boolean) {\n       print(value.toString());\n     } else if (value.getClass().isArray()) {\n",
    "summaries": {
      "en": "Change printf to print",
      "zh": "将 printf 改为 print"
    }
  },
  {
    "type": "fix",
    "subtype": "I13",
    "change": "diff --git a/core/java/android/inputmethodservice/ExtractEditLayout.java b/core/java/android/inputmethodservice/ExtractEditLayout.java\nindex 5696839..e902443 100644\n--- a/core/java/android/inputmethodservice/ExtractEditLayout.java\n+++ b/core/java/android/inputmethodservice/ExtractEditLayout.java\n@@ -163,6 +163,8 @@ public class ExtractEditLayout extends LinearLayout {\n             mCallback.onDestroyActionMode(this);\n             mCallback = null;\n \n+            mMenu.close();\n+\n             mExtractActionButton.setVisibility(VISIBLE);\n             mEditButton.setVisibility(INVISIBLE);\n \n",
    "summaries": {
      "en": "Close the menu before destroying ActionMode",
      "zh": "在销毁ActionMode之前关闭菜单"
    }
  },
  {
    "type": "test",
    "subtype": "T1",
    "change": "diff --git a/vertx-testsuite/src/test/java/org/vertx/java/tests/core/net/JavaNetTest.java b/vertx-testsuite/src/test/java/org/vertx/java/tests/core/net/JavaNetTest.java\nindex 5eeea03..90940ce 100644\n--- a/vertx-testsuite/src/test/java/org/vertx/java/tests/core/net/JavaNetTest.java\n+++ b/vertx-testsuite/src/test/java/org/vertx/java/tests/core/net/JavaNetTest.java\n@@ -439,7 +439,7 @@ public class JavaNetTest extends TestBase {\n \n   @Test\n   public void testListenOnWildcardPort() throws Exception {\n-    startTest(getMethodName(), false);\n+    startTest(getMethodName());\n   }\n \n   @Test\n",
    "summaries": {
      "en": "Remove unnecessary parameters",
      "zh": "删除无用的参数"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/liquibase-core/src/main/java/liquibase/servicelocator/ServiceLocator.java b/liquibase-core/src/main/java/liquibase/servicelocator/ServiceLocator.java\nindex bc7fdf2b5..3f93f2b92 100755\n--- a/liquibase-core/src/main/java/liquibase/servicelocator/ServiceLocator.java\n+++ b/liquibase-core/src/main/java/liquibase/servicelocator/ServiceLocator.java\n@@ -123,6 +123,7 @@ public class ServiceLocator {\n                 addPackageToScan(\"liquibase.structure\");\n                 addPackageToScan(\"liquibase.structurecompare\");\n                 addPackageToScan(\"liquibase.lockservice\");\n+                addPackageToScan(\"liquibase.sdk\");\n                 addPackageToScan(\"liquibase.ext\");\n             }\n         }\n",
    "summaries": {
      "en": "Include liquibase.sdk in the packages to be scanned by default",
      "zh": "默认情况下包含 liquibase.sdk 在要扫描的包中"
    }
  },
  {
    "type": "refactor",
    "subtype": "R3",
    "change": "diff --git a/java/org/apache/catalina/startup/ContextConfig.java b/java/org/apache/catalina/startup/ContextConfig.java\nindex 06987b467..734e96adf 100644\n--- a/java/org/apache/catalina/startup/ContextConfig.java\n+++ b/java/org/apache/catalina/startup/ContextConfig.java\n@@ -28,6 +28,7 @@ import java.net.JarURLConnection;\n import java.net.MalformedURLException;\n import java.net.URISyntaxException;\n import java.net.URL;\n+import java.net.URLConnection;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.HashMap;\n@@ -560,7 +561,9 @@ public class ContextConfig implements LifecycleListener {\n \n         try {\n             source = new InputSource(contextXml.toString());\n-            stream = contextXml.openStream();\n+            URLConnection xmlConn = contextXml.openConnection();\n+            xmlConn.setUseCaches(false);\n+            stream = xmlConn.getInputStream();\n         } catch (Exception e) {\n             log.error(sm.getString(\"contextConfig.contextMissing\",\n                       contextXml) , e);\n",
    "summaries": {
      "en": "Fetch data from server without using cache",
      "zh": "不使用缓存从服务器获取数据"
    }
  },
  {
    "type": "fix",
    "subtype": "Ix",
    "change": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/files/ui/FilesList.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/files/ui/FilesList.java\nindex 5ec60213c..f329e2588 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/files/ui/FilesList.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/files/ui/FilesList.java\n@@ -169,8 +169,11 @@ public class FilesList extends Composite\n             @Override\n             public ImageResource getValue(FileSystemItem object)\n             {\n+               String status = object.getVCSStatus() == null\n+                               ? null\n+                               : object.getVCSStatus().getStatus();\n                return VCSStrategy.getCurrentStrategy().getSimpleIconForStatus(\n-                     new VCSStatus(object.getVCSStatus().getStatus()));\n+                     new VCSStatus(status));\n             }\n          };\n       iconColumn.setSortable(true);\n",
    "summaries": {
      "en": "Fix potential null pointer issues",
      "zh": "修复可能存在的空指针问题"
    }
  },
  {
    "type": "test",
    "subtype": "T1",
    "change": "diff --git a/graphics/java/android/graphics/drawable/Drawable.java b/graphics/java/android/graphics/drawable/Drawable.java\nindex cfb1983..2ec4284 100644\n--- a/graphics/java/android/graphics/drawable/Drawable.java\n+++ b/graphics/java/android/graphics/drawable/Drawable.java\n@@ -156,7 +156,7 @@ public abstract class Drawable {\n      * @param canvas The canvas to draw into\n      */\n     public void draw(Canvas canvas) {\n-        if (canvas != null && canvas.isHardwareAccelerated()) {\n+        if (canvas != null && canvas.isHardwareAccelerated() && false) { // temporarily disabled\n             final HardwareCanvas hardwareCanvas = (HardwareCanvas) canvas;\n             final DisplayList displayList = getDisplayList(hardwareCanvas);\n             if (displayList != null) {\n",
    "summaries": {
      "en": "Disable hardware acceleration after this, it is necessary to manually disable it at some point during development, possibly for debugging purposes",
      "zh": "禁用硬件加速后面, 必要的是在开发的某一时间(manually)禁用的，可能是为了调试"
    }
  },
  {
    "type": "refactor",
    "subtype": "R10",
    "change": "diff --git a/subprojects/launcher/src/main/java/org/gradle/launcher/daemon/server/stats/DaemonRunningStats.java b/subprojects/launcher/src/main/java/org/gradle/launcher/daemon/server/stats/DaemonRunningStats.java\nindex 963f0c4..229cc9f 100644\n--- a/subprojects/launcher/src/main/java/org/gradle/launcher/daemon/server/stats/DaemonRunningStats.java\n+++ b/subprojects/launcher/src/main/java/org/gradle/launcher/daemon/server/stats/DaemonRunningStats.java\n@@ -29,7 +29,6 @@ public class DaemonRunningStats {\n     private long allBuildsTime;\n \n     public DaemonRunningStats(TimeProvider timeProvider, long startAt) {\n-        System.out.println(\"create\");\n         this.runningClock = new Clock(startAt);\n         this.timeProvider = timeProvider;\n     }\n",
    "summaries": {
      "en": "Remove unnecessary print statements in the constructor",
      "zh": "删除构造函数中的无用打印语句"
    }
  },
  {
    "type": "test",
    "subtype": "T1",
    "change": "diff --git a/server/sonar-server/src/test/java/org/sonar/server/activity/db/ActivityDaoTest.java b/server/sonar-server/src/test/java/org/sonar/server/activity/db/ActivityDaoTest.java\nindex 2ad5c4a151..2aea0522ce 100644\n--- a/server/sonar-server/src/test/java/org/sonar/server/activity/db/ActivityDaoTest.java\n+++ b/server/sonar-server/src/test/java/org/sonar/server/activity/db/ActivityDaoTest.java\n@@ -28,7 +28,6 @@ import org.sonar.core.activity.db.ActivityDto;\n import org.sonar.core.persistence.DbTester;\n import org.sonar.test.DbTests;\n \n-import java.sql.Timestamp;\n import java.util.Map;\n \n import static org.assertj.core.api.Assertions.assertThat;\n@@ -59,7 +58,9 @@ public class ActivityDaoTest {\n \n     Map<String, Object> map = dbTester.selectFirst(\"select created_at as \\\"createdAt\\\", log_action as \\\"action\\\", data_field as \\\"data\\\" from activities where log_key='UUID_1'\");\n     assertThat(map.get(\"action\")).isEqualTo(\"THE_ACTION\");\n-    assertThat(((Timestamp)map.get(\"createdAt\")).getTime()).isEqualTo(1_500_000_000_000L);\n+    // not possible to check exact date yet. dbTester#selectFirst() uses ResultSet#getObject(), which returns\n+    // non-JDBC interface in Oracle driver.\n+    assertThat(map.get(\"createdAt\")).isNotNull();\n     assertThat(map.get(\"data\")).isEqualTo(\"THE_DATA\");\n   }\n }\n",
    "summaries": {
      "en": "Fixed compatibility testing with Oracle",
      "zh": "修复了与 Oracle 兼容性的测试"
    }
  },
  {
    "type": "style",
    "subtype": "S3",
    "change": "diff --git a/src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java b/src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java\nindex f87b9731d..d44934cbc 100644\n--- a/src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java\n+++ b/src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java\n@@ -18,7 +18,6 @@\n ////////////////////////////////////////////////////////////////////////////////\n package com.puppycrawl.tools.checkstyle;\n \n-\n import antlr.RecognitionException;\n import antlr.TokenStreamException;\n import java.io.File;\n",
    "summaries": {
      "en": "Remove extra blank lines",
      "zh": "删除多余空行"
    }
  },
  {
    "type": "refactor",
    "subtype": "R10",
    "change": "diff --git a/src/com/google/javascript/jscomp/CompilerOptions.java b/src/com/google/javascript/jscomp/CompilerOptions.java\nindex bba534e..349d1e5 100644\n--- a/src/com/google/javascript/jscomp/CompilerOptions.java\n+++ b/src/com/google/javascript/jscomp/CompilerOptions.java\n@@ -90,11 +90,6 @@ public class CompilerOptions {\n   }\n \n   /**\n-   * Whether the compiler accepts type syntax ({@code var foo: string;}).\n-   */\n-  boolean acceptTypeSyntax;\n-\n-  /**\n    * Whether to infer consts. This should not be configurable by\n    * external clients. This is a transitional flag for a new type\n    * of const analysis.\n@@ -978,9 +973,6 @@ public class CompilerOptions {\n     // Which environment to use\n     environment = Environment.BROWSER;\n \n-    // Language variation\n-    acceptTypeSyntax = false;\n-\n     // Checks\n     skipNonTranspilationPasses = false;\n     devMode = DevMode.OFF;\n",
    "summaries": {
      "en": "Delete acceptTypeSyntax property",
      "zh": "删除 acceptTypeSyntax 属性"
    }
  },
  {
    "type": "fix",
    "subtype": "I2",
    "change": "diff --git a/src/main/java/com/zaxxer/hikari/HikariJNDIFactory.java b/src/main/java/com/zaxxer/hikari/HikariJNDIFactory.java\nindex 4eea127..5031d24 100644\n--- a/src/main/java/com/zaxxer/hikari/HikariJNDIFactory.java\n+++ b/src/main/java/com/zaxxer/hikari/HikariJNDIFactory.java\n@@ -28,7 +28,6 @@ import javax.naming.Reference;\n import javax.naming.spi.ObjectFactory;\n import javax.sql.DataSource;\n \n-import com.zaxxer.hikari.pool.HikariPool;\n import com.zaxxer.hikari.util.PropertyBeanSetter;\n \n /**\n@@ -54,7 +53,7 @@ public class HikariJNDIFactory implements ObjectFactory\n         }\n \n         Properties properties = new Properties();\n-        for (String propertyName : PropertyBeanSetter.getPropertyNames(HikariPool.class))\n+        for (String propertyName : PropertyBeanSetter.getPropertyNames(HikariConfig.class))\n         {\n             RefAddr ra = ref.get(propertyName);\n             if (ra != null)\n",
    "summaries": {
      "en": "Correct the property names to be used in HikariConfig class",
      "zh": "更正应使用HikariConfig类中的属性名称"
    }
  },
  {
    "type": "fix",
    "subtype": "I11",
    "change": "diff --git a/core/src/test/java/org/elasticsearch/action/bulk/BulkProcessorIT.java b/core/src/test/java/org/elasticsearch/action/bulk/BulkProcessorIT.java\nindex ded2abb..237f3a2 100644\n--- a/core/src/test/java/org/elasticsearch/action/bulk/BulkProcessorIT.java\n+++ b/core/src/test/java/org/elasticsearch/action/bulk/BulkProcessorIT.java\n@@ -105,7 +105,7 @@ public class BulkProcessorIT extends ESIntegTestCase {\n     public void testBulkProcessorConcurrentRequests() throws Exception {\n         int bulkActions = randomIntBetween(10, 100);\n         int numDocs = randomIntBetween(bulkActions, bulkActions + 100);\n-        int concurrentRequests = randomIntBetween(0, 10);\n+        int concurrentRequests = randomIntBetween(0, 7);\n \n         int expectedBulkActions = numDocs / bulkActions;\n \n@@ -141,7 +141,7 @@ public class BulkProcessorIT extends ESIntegTestCase {\n \n         Set<String> ids = new HashSet<>();\n         for (BulkItemResponse bulkItemResponse : listener.bulkItems) {\n-            assertThat(bulkItemResponse.isFailed(), equalTo(false));\n+            assertThat(bulkItemResponse.getFailureMessage(), bulkItemResponse.isFailed(), equalTo(false));\n             assertThat(bulkItemResponse.getIndex(), equalTo(\"test\"));\n             assertThat(bulkItemResponse.getType(), equalTo(\"test\"));\n             //with concurrent requests > 1 we can't rely on the order of the bulk requests\n",
    "summaries": {
      "en": "Reduce the maximum number of concurrent requests in BulkProcessorIT",
      "zh": "减少BulkProcessorIT中并发请求的最大数量"
    }
  },
  {
    "type": "fix",
    "subtype": "I1",
    "change": "diff --git a/AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/internal/core/handler/AfterExtrasHandler.java b/AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/internal/core/handler/AfterExtrasHandler.java\nindex cba52de..10b3e68 100644\n--- a/AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/internal/core/handler/AfterExtrasHandler.java\n+++ b/AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/internal/core/handler/AfterExtrasHandler.java\n@@ -48,7 +48,7 @@ public class AfterExtrasHandler extends BaseAnnotationHandler<EActivityHolder> {\n \t@Override\n \tpublic void process(Element element, EActivityHolder holder) {\n \t\tString methodName = element.getSimpleName().toString();\n-\t\tholder.getInjectExtrasBlock().invoke(methodName);\n+\t\tholder.getInjectExtrasMethod().body().invoke(methodName);\n \n \t\t// ensure that onNewIntent is overridden\n \t\tholder.getOnNewIntent();\n",
    "summaries": {
      "en": "Modified dynamic injection to fixed injection",
      "zh": "修改动态注入为固定注入"
    }
  },
  {
    "type": "docs",
    "subtype": "D2",
    "change": "diff --git a/underfs/oss/src/main/java/alluxio/underfs/oss/OSSUnderFileSystem.java b/underfs/oss/src/main/java/alluxio/underfs/oss/OSSUnderFileSystem.java\nindex 1b42943..b53d378 100644\n--- a/underfs/oss/src/main/java/alluxio/underfs/oss/OSSUnderFileSystem.java\n+++ b/underfs/oss/src/main/java/alluxio/underfs/oss/OSSUnderFileSystem.java\n@@ -314,27 +314,27 @@ public final class OSSUnderFileSystem extends UnderFileSystem {\n   public void setConf(Object conf) {\n   }\n \n-  // Not supported\n+  // No ACL integration currently, no-op\n   @Override\n   public void setOwner(String path, String user, String group) {}\n \n-  // Not supported\n+  // No ACL integration currently, no-op\n   @Override\n   public void setMode(String path, short mode) throws IOException {}\n \n-  // Not supported\n+  // No ACL integration currently, returns default empty value\n   @Override\n   public String getOwner(String path) throws IOException {\n     return \"\";\n   }\n \n-  // Not supported\n+  // No ACL integration currently, returns default empty value\n   @Override\n   public String getGroup(String path) throws IOException {\n     return \"\";\n   }\n \n-  // Not supported\n+  // No ACL integration currently, returns default value\n   @Override\n   public short getMode(String path) throws IOException {\n     return Constants.DEFAULT_FILE_SYSTEM_MODE;\n",
    "summaries": {
      "en": "Update OSS ACL comments",
      "zh": "更新oss acl注释"
    }
  },
  {
    "type": "refactor",
    "subtype": "R6",
    "change": "diff --git a/packaging/server/src/main/java/org/neo4j/server/logging/Logger.java b/packaging/server/src/main/java/org/neo4j/server/logging/Logger.java\nindex 1510aeb..4a2b3a1 100644\n--- a/packaging/server/src/main/java/org/neo4j/server/logging/Logger.java\n+++ b/packaging/server/src/main/java/org/neo4j/server/logging/Logger.java\n@@ -23,7 +23,7 @@ import java.util.HashSet;\n \n import org.apache.log4j.Level;\n import org.apache.log4j.Priority;\n-import org.mortbay.log.Log;\n+\n \n public class Logger {\n \n@@ -76,7 +76,7 @@ public class Logger {\n             if (obj != null) {\n                 String s = obj.toString();\n                 if (illegalParameters.contains(s.toLowerCase())) {\n-                    Log.warn(\"Failed to log, parameters like \" + s + \" are not supported.\");\n+                    log.warn(\"Failed to log, parameters like \" + s + \" are not supported.\");\n                     return;\n                 }\n             }\n",
    "summaries": {
      "en": "Replace \"Log\" with \"log\"",
      "zh": "将 Log 替换为 log"
    }
  },
  {
    "type": "refactor",
    "subtype": "R10",
    "change": "diff --git a/sdk/jme3-model-importer/src/com/jme3/gde/modelimporter/ModelImporterVisualPanel1.java b/sdk/jme3-model-importer/src/com/jme3/gde/modelimporter/ModelImporterVisualPanel1.java\nindex b630bc1a4..057d32f3c 100644\n--- a/sdk/jme3-model-importer/src/com/jme3/gde/modelimporter/ModelImporterVisualPanel1.java\n+++ b/sdk/jme3-model-importer/src/com/jme3/gde/modelimporter/ModelImporterVisualPanel1.java\n@@ -119,7 +119,6 @@ public final class ModelImporterVisualPanel1 extends JPanel {\n             DialogDisplayer.getDefault().notifyLater(msg);\n             Exceptions.printStackTrace(e);\n         }\n-        manager.setAssetEventListener(null);\n         manager.clearCache();\n     }\n \n",
    "summaries": {
      "en": "Delete the statement \"manager.setAssetEventListener(null);\"",
      "zh": "删除manager.setAssetEventListener(null);语句"
    }
  },
  {
    "type": "refactor",
    "subtype": "R8",
    "change": "diff --git a/core/server/src/main/java/alluxio/worker/netty/NettyDataServer.java b/core/server/src/main/java/alluxio/worker/netty/NettyDataServer.java\nindex e1b67fc..d49e9b5 100644\n--- a/core/server/src/main/java/alluxio/worker/netty/NettyDataServer.java\n+++ b/core/server/src/main/java/alluxio/worker/netty/NettyDataServer.java\n@@ -68,8 +68,6 @@ public final class NettyDataServer implements DataServer {\n \n   @Override\n   public void close() throws IOException {\n-    boolean completed;\n-\n     int quietPeriodSecs =\n         Configuration.getInt(PropertyKey.WORKER_NETWORK_NETTY_SHUTDOWN_QUIET_PERIOD);\n     int timeoutSecs = Configuration.getInt(PropertyKey.WORKER_NETWORK_NETTY_SHUTDOWN_TIMEOUT);\n@@ -84,6 +82,7 @@ public final class NettyDataServer implements DataServer {\n     // channel. If 2) or 3) times out, the respective EventLoopGroup failed to shut down\n     // gracefully and its shutdown is forced.\n \n+    boolean completed;\n     completed =\n         mChannelFuture.channel().close().awaitUninterruptibly(timeoutSecs, TimeUnit.SECONDS);\n     if (!completed) {\n",
    "summaries": {
      "en": "Change variable declaration position",
      "zh": "更改变量声明位置"
    }
  },
  {
    "type": "fix",
    "subtype": "I2",
    "change": "diff --git a/extensions/gdata/src/com/google/refine/extension/gdata/GDataExtension.java b/extensions/gdata/src/com/google/refine/extension/gdata/GDataExtension.java\nindex c7efe59..8daaf64 100644\n--- a/extensions/gdata/src/com/google/refine/extension/gdata/GDataExtension.java\n+++ b/extensions/gdata/src/com/google/refine/extension/gdata/GDataExtension.java\n@@ -65,7 +65,7 @@ abstract public class GDataExtension {\n         \n         return AuthSubUtil.getRequestUrl(\n             authorizedUrl.toExternalForm(), // execution continues at authorized on redirect\n-            \"https://docs.google.com/feeds https://spreadsheets.google.com/feeds\",\n+            \"https://docs.google.com/feeds https://spreadsheets.google.com/feeds https://www.google.com/fusiontables/api/query\",\n             false,\n             true);\n     }\n",
    "summaries": {
      "en": "Modified the authorization request URL in GDataExtension",
      "zh": "修改GDataExtension中的授权请求URL"
    }
  },
  {
    "type": "refactor",
    "subtype": "R10",
    "change": "diff --git a/hazelcast/src/main/java/com/hazelcast/client/ClientEngineImpl.java b/hazelcast/src/main/java/com/hazelcast/client/ClientEngineImpl.java\nindex 6211bd0891..30a238116d 100644\n--- a/hazelcast/src/main/java/com/hazelcast/client/ClientEngineImpl.java\n+++ b/hazelcast/src/main/java/com/hazelcast/client/ClientEngineImpl.java\n@@ -373,10 +373,6 @@ public class ClientEngineImpl implements ClientEngine, CoreService,\n         return new ClientServiceProxy(this);\n     }\n \n-    public Collection<Client> getEndpoints() {\n-        return new HashSet<Client>(endpoints.values());\n-    }\n-\n     public Collection<Client> getClients() {\n         final HashSet<Client> clients = new HashSet<Client>();\n         for (ClientEndpoint endpoint : endpoints.values()) {\n",
    "summaries": {
      "en": "Deleted unused getEndpoints() method",
      "zh": "删除了未使用的getEndpoints()方法"
    }
  },
  {
    "type": "feat",
    "subtype": "E1",
    "change": "diff --git a/src/java/org/apache/cassandra/thrift/CassandraServer.java b/src/java/org/apache/cassandra/thrift/CassandraServer.java\nindex 4baf848..e597936 100644\n--- a/src/java/org/apache/cassandra/thrift/CassandraServer.java\n+++ b/src/java/org/apache/cassandra/thrift/CassandraServer.java\n@@ -960,6 +960,7 @@ public class CassandraServer implements Cassandra.Iface\n         CFMetaData oldCfm = DatabaseDescriptor.getCFMetaData(CFMetaData.getId(cf_def.keyspace, cf_def.name));\n         if (oldCfm == null)\n             throw new InvalidRequestException(\"Could not find column family definition to modify.\");\n+        ThriftValidation.validateCfDef(cf_def, oldCfm);\n         validateSchemaAgreement();\n \n         try\n",
    "summaries": {
      "en": "Add code to validate CFMetadata",
      "zh": "添加验证CFMetaData 的代码"
    }
  },
  {
    "type": "docs",
    "subtype": "D2",
    "change": "diff --git a/subprojects/ide/src/main/groovy/org/gradle/plugins/ide/idea/model/IdeaProject.java b/subprojects/ide/src/main/groovy/org/gradle/plugins/ide/idea/model/IdeaProject.java\nindex 4195f12..42d3cc7 100644\n--- a/subprojects/ide/src/main/groovy/org/gradle/plugins/ide/idea/model/IdeaProject.java\n+++ b/subprojects/ide/src/main/groovy/org/gradle/plugins/ide/idea/model/IdeaProject.java\n@@ -301,7 +301,6 @@ public class IdeaProject {\n         ipr.getWhenMerged().execute(xmlProject);\n     }\n \n-    // TODO:DAZ Make this a `whenMerged` hook registered by composite build?\n     private void includeModulesFromComposite(Project xmlProject) {\n         // TODO:DAZ Introduce a properly typed ComponentIdentifier for project components in a composite\n         ProjectComponentIdentifier thisProjectId = DefaultProjectComponentIdentifier.newId(project.getRootProject().getName() + \":\" + project.getPath());\ndiff --git a/subprojects/tooling-api/src/main/java/org/gradle/tooling/internal/connection/GradleConnectionFactory.java b/subprojects/tooling-api/src/main/java/org/gradle/tooling/internal/connection/GradleConnectionFactory.java\nindex 1bc6e23..c4ef98f 100644\n--- a/subprojects/tooling-api/src/main/java/org/gradle/tooling/internal/connection/GradleConnectionFactory.java\n+++ b/subprojects/tooling-api/src/main/java/org/gradle/tooling/internal/connection/GradleConnectionFactory.java\n@@ -39,7 +39,6 @@ public class GradleConnectionFactory {\n         this.loggingProvider = loggingProvider;\n     }\n \n-    // TODO:DAZ Clean this up: we should not be providing an ignored 'distribution' when using the inline coordinator\n     public DefaultGradleConnection create(Distribution distribution, CompositeConnectionParameters parameters, boolean useDaemonCoordinator) {\n         ConsumerActionExecutor lazyConnection;\n         if (useDaemonCoordinator) {\n",
    "summaries": {
      "en": "Remove TODO comments",
      "zh": "删除 TODO 注释"
    }
  },
  {
    "type": "test",
    "subtype": "T1",
    "change": "diff --git a/hazelcast-hibernate/hazelcast-hibernate4/src/test/java/com/hazelcast/hibernate/HibernateStatisticsTestSupport.java b/hazelcast-hibernate/hazelcast-hibernate4/src/test/java/com/hazelcast/hibernate/HibernateStatisticsTestSupport.java\nindex e155f65af8..646429b14b 100644\n--- a/hazelcast-hibernate/hazelcast-hibernate4/src/test/java/com/hazelcast/hibernate/HibernateStatisticsTestSupport.java\n+++ b/hazelcast-hibernate/hazelcast-hibernate4/src/test/java/com/hazelcast/hibernate/HibernateStatisticsTestSupport.java\n@@ -21,7 +21,6 @@ import com.hazelcast.core.HazelcastInstance;\n import com.hazelcast.hibernate.entity.DummyEntity;\n import com.hazelcast.hibernate.entity.DummyProperty;\n import com.hazelcast.hibernate.instance.HazelcastAccessor;\n-import com.hazelcast.test.annotation.ProblematicTest;\n import org.hibernate.Query;\n import org.hibernate.Session;\n import org.hibernate.SessionFactory;\n@@ -30,9 +29,12 @@ import org.hibernate.stat.Statistics;\n import org.junit.After;\n import org.junit.Before;\n import org.junit.Test;\n-import org.junit.experimental.categories.Category;\n \n-import java.util.*;\n+import java.util.ArrayList;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Properties;\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertNotNull;\n@@ -149,7 +151,6 @@ public abstract class HibernateStatisticsTestSupport extends HibernateTestSuppor\n     }\n \n     @Test\n-    @Category(ProblematicTest.class)\n     public void testQuery() {\n         final int entityCount = 10;\n         final int queryCount = 3;\n",
    "summaries": {
      "en": "Delete @Category annotation",
      "zh": "删除@Category注解"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/ion/src/com/koushikdutta/ion/bitmap/IonBitmapCache.java b/ion/src/com/koushikdutta/ion/bitmap/IonBitmapCache.java\nindex a66a390..2d04658 100644\n--- a/ion/src/com/koushikdutta/ion/bitmap/IonBitmapCache.java\n+++ b/ion/src/com/koushikdutta/ion/bitmap/IonBitmapCache.java\n@@ -72,6 +72,8 @@ public class IonBitmapCache {\n             ret.bitmaps = ret.bitmapsRef.get();\n             // see if we successfully repopulated from the weak ref\n             if (ret.bitmaps != null) {\n+                cache.remove(key);\n+                cache.put(key, ret);\n                 System.out.println(\"===== SUCCESSFULLY GRABBED FROM WEAK REF CACHE! ====\");\n                 return ret;\n             }\n",
    "summaries": {
      "en": "Delete old cache records and add new cache records",
      "zh": "删除旧的缓存记录并添加新的缓存记录"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/camel-core/src/main/java/org/apache/camel/component/log/LogEndpoint.java b/camel-core/src/main/java/org/apache/camel/component/log/LogEndpoint.java\nindex 4e05acc66d..bde01fa7dc 100644\n--- a/camel-core/src/main/java/org/apache/camel/component/log/LogEndpoint.java\n+++ b/camel-core/src/main/java/org/apache/camel/component/log/LogEndpoint.java\n@@ -48,4 +48,9 @@ public class LogEndpoint extends ProcessorEndpoint {\n         // the logger is the processor\n         setProcessor(this.logger);\n     }\n+\n+    @Override\n+    protected String createEndpointUri() {\n+        return \"log:\" + logger.toString();\n+    }\n }\n",
    "summaries": {
      "en": "Rewritten createEndpointUri() method to return a URI string",
      "zh": "重写createEndpointUri()方法，返回URI字符串"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/src/info/guardianproject/otr/app/im/service/ImConnectionAdapter.java b/src/info/guardianproject/otr/app/im/service/ImConnectionAdapter.java\nindex a04dc57f..666617d5 100644\n--- a/src/info/guardianproject/otr/app/im/service/ImConnectionAdapter.java\n+++ b/src/info/guardianproject/otr/app/im/service/ImConnectionAdapter.java\n@@ -382,6 +382,10 @@ public class ImConnectionAdapter extends info.guardianproject.otr.app.im.IImConn\n                 for (ChatSessionAdapter session : mChatSessionManager.mActiveChatSessionAdapters.values()) {\n                     session.sendPostponedMessages();\n                 }\n+                \n+                mService.getStatusBarNotifier().notifyLoggedIn(mProviderId, mAccountId);\n+\n+                \n             } else if (state == ImConnection.LOGGING_OUT) {\n                 // The engine has started to logout the connection, remove it\n                 // from the active connection list.\n@@ -399,11 +403,15 @@ public class ImConnectionAdapter extends info.guardianproject.otr.app.im.IImConn\n                     mChatSessionManager.closeAllChatSessions();\n                 }\n \n+                mService.getStatusBarNotifier().notifyDisconnected(mProviderId, mAccountId);\n+\n                 mConnectionState = state;\n             } else if(state == ImConnection.SUSPENDED && error != null) {\n                 // re-establish failed, schedule to retry\n                 // TODO increase delay after retry failed.\n-                mService.scheduleReconnect(15000);\n+                mService.scheduleReconnect(5000);\n+                \n+\n             }\n \n             updateAccountStatusInDb();\n",
    "summaries": {
      "en": "Added status bar notification calls for login and logout",
      "zh": "添加登录和断开连接的状态栏通知器调用"
    }
  },
  {
    "type": "fix",
    "subtype": "I3",
    "change": "diff --git a/common/buildcraft/transport/pipes/PipeLogicIron.java b/common/buildcraft/transport/pipes/PipeLogicIron.java\nindex f7b677506..c076c62a5 100644\n--- a/common/buildcraft/transport/pipes/PipeLogicIron.java\n+++ b/common/buildcraft/transport/pipes/PipeLogicIron.java\n@@ -47,6 +47,9 @@ public abstract class PipeLogicIron {\n \n \n \tprivate boolean isValidFacing(ForgeDirection side) {\n+\t\tif (!pipe.container.isPipeConnected(side))\n+\t\t\treturn false;\n+\n \t\tTileBuffer[] tileBuffer = pipe.container.getTileCache();\n \t\tif (tileBuffer == null)\n \t\t\treturn true;\n@@ -55,8 +58,6 @@ public abstract class PipeLogicIron {\n \t\t\treturn true;\n \n \t\tTileEntity tile = tileBuffer[side.ordinal()].getTile();\n-\t\tif ((pipe.container.hasPlug(side)) || (tile != null && tile instanceof TileGenericPipe && ((TileGenericPipe)tile).pipe.container.hasPlug(side.getOpposite())))\n-\t\t\treturn false;\n \t\treturn isValidConnectingTile(tile);\n \t}\n \n",
    "summaries": {
      "en": "Simplified the code for checking the orientation of pipes",
      "zh": "简化了铁管面向检查的代码"
    }
  },
  {
    "type": "fix",
    "subtype": "I2",
    "change": "diff --git a/spring-security-oauth/src/main/java/org/springframework/security/oauth2/config/OAuth2ProviderBeanDefinitionParser.java b/spring-security-oauth/src/main/java/org/springframework/security/oauth2/config/OAuth2ProviderBeanDefinitionParser.java\nindex 80300020..92718985 100644\n--- a/spring-security-oauth/src/main/java/org/springframework/security/oauth2/config/OAuth2ProviderBeanDefinitionParser.java\n+++ b/spring-security-oauth/src/main/java/org/springframework/security/oauth2/config/OAuth2ProviderBeanDefinitionParser.java\n@@ -115,7 +115,7 @@ public class OAuth2ProviderBeanDefinitionParser implements BeanDefinitionParser\n       String authenticationCacheRef = verificationCodeElement == null ? null : verificationCodeElement.getAttribute(\"authentication-cache-ref\");\n       String approvalFilterRef = verificationCodeElement == null ? null : verificationCodeElement.getAttribute(\"user-approval-filter-ref\");\n       String approvalHandlerRef = verificationCodeElement == null ? null : verificationCodeElement.getAttribute(\"approval-handler-ref\");\n-      String verificationCodeRedirectStrategyRef = verificationCodeElement == null ? null : verificationCodeElement.getAttribute(\"approval-handler-ref\");\n+      String verificationCodeRedirectStrategyRef = verificationCodeElement == null ? null : verificationCodeElement.getAttribute(\"redirect-strategy-ref\");\n       if (!StringUtils.hasText(verificationCodeRedirectStrategyRef)) {\n         verificationCodeRedirectStrategyRef = redirectStrategyRef;\n       }\n",
    "summaries": {
      "en": "Change to retrieve the value of the redirect-strategy-ref attribute",
      "zh": "更改为获取redirect-strategy-ref属性值"
    }
  },
  {
    "type": "docs",
    "subtype": "D2",
    "change": "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/view/document/AbstractJExcelView.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/document/AbstractJExcelView.java\nindex 2ce37ae..399aa1b 100644\n--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/view/document/AbstractJExcelView.java\n+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/document/AbstractJExcelView.java\n@@ -1,5 +1,5 @@\n /*\n- * Copyright 2002-2012 the original author or authors.\n+ * Copyright 2002-2013 the original author or authors.\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n@@ -19,7 +19,6 @@ package org.springframework.web.servlet.view.document;\n import java.io.OutputStream;\n import java.util.Locale;\n import java.util.Map;\n-\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n \n@@ -34,9 +33,9 @@ import org.springframework.web.servlet.view.AbstractView;\n /**\n  * Convenient superclass for Excel document views.\n  *\n- * <p>This class uses the <i>JExcelAPI</i> instead of <i>POI</i>. More\n- * information on <i>JExcelAPI</i> can be found on their <a\n- * href=\"http://www.andykhan.com/jexcelapi/\" target=\"_blank\">website</a>.\n+ * <p>This class uses the <i>JExcelAPI</i> instead of <i>POI</i>.\n+ * More information on <i>JExcelAPI</i> can be found on their\n+ * <a href=\"http://www.andykhan.com/jexcelapi/\" target=\"_blank\">website</a>.\n  *\n  * <p>Properties:\n  * <ul>\n@@ -58,11 +57,11 @@ import org.springframework.web.servlet.view.AbstractView;\n  *\n  * <pre class=\"code\">\n  * protected void buildExcelDocument(\n- *      Map&lt;String, Object&gt; model, WritableWorkbook workbook,\n- * \t\tHttpServletRequest request, HttpServletResponse response) {\n+ *     Map&lt;String, Object&gt; model, WritableWorkbook workbook,\n+ *     HttpServletRequest request, HttpServletResponse response) {\n  *\n  * \t if (workbook.getNumberOfSheets() == 0) {\n- * \t     workbook.createSheet(&quot;Spring&quot;, 0);\n+ * \t   workbook.createSheet(&quot;Spring&quot;, 0);\n  *   }\n  *\n  * \t WritableSheet sheet = workbook.getSheet(&quot;Spring&quot;);\n@@ -70,7 +69,7 @@ import org.springframework.web.servlet.view.AbstractView;\n  * \t sheet.addCell(label);\n  * }</pre>\n  *\n- * The use of this view is close to the AbstractExcelView class,\n+ * The use of this view is close to the {@link AbstractExcelView} class,\n  * just using the JExcel API instead of the Apache POI API.\n  *\n  * @author Bram Smeets\n@@ -79,7 +78,10 @@ import org.springframework.web.servlet.view.AbstractView;\n  * @since 1.2.5\n  * @see AbstractExcelView\n  * @see AbstractPdfView\n+ * @deprecated as of Spring 4.0, since JExcelAPI is an abandoned project\n+ * (no release since 2009, with serious bugs remaining)\n  */\n+@Deprecated\n public abstract class AbstractJExcelView extends AbstractView {\n \n \t/** The content type for an Excel response */\n",
    "summaries": {
      "en": "Abandoned AbstractJExcelView because JExcelAPI is an abandoned project",
      "zh": "废弃了 AbstractJExcelView，因为 JExcelAPI 是一个被放弃的项目"
    }
  },
  {
    "type": "cicd",
    "subtype": "Cx",
    "change": "diff --git a/Makefile b/Makefile\nindex 826e814..766f8f0 100644\n--- a/Makefile\n+++ b/Makefile\n@@ -48,9 +48,12 @@ test:\n unit-test:\n    @echo \"Running unit tests\"\n  \n-build:\n+build: test\n    @echo \"Building the project\"\n \n-build-all: clean build\n+test-all: unit-test integration-test\n+\n+build-all: clean test-all build\n    @echo \"Built all components\"\n \n+.PHONY: clean test build test-all build-all",
    "summaries": {
      "en": "Adding testing to the CICD pipeline build process",
      "zh": "将测试加入CICD流水线的构建过程"
    }
  },
  {
    "type": "fix",
    "subtype": "I1",
    "change": "diff --git a/src/net/java/sip/communicator/impl/configuration/ConfigurationServiceImpl.java b/src/net/java/sip/communicator/impl/configuration/ConfigurationServiceImpl.java\nindex f333484de..c5cf8ff2c 100644\n--- a/src/net/java/sip/communicator/impl/configuration/ConfigurationServiceImpl.java\n+++ b/src/net/java/sip/communicator/impl/configuration/ConfigurationServiceImpl.java\n@@ -524,7 +524,8 @@ public class ConfigurationServiceImpl\n \n \n             //write the file.\n-            XMLConfUtils.writeXML(propertiesDocument, getConfigurationFile());\n+            XMLUtils.indentedWriteXML(\n+                propertiesDocument, new FileWriter( getConfigurationFile()));\n         }\n         finally\n         {\n@@ -628,8 +629,6 @@ public class ConfigurationServiceImpl\n                 {\n                     //update the corresponding node\n                     Object value = properties.get(newPropBuff.toString());\n-                    if (newPropBuff.toString().indexOf(\"SYSTEM_PROPERTY\")!= -1)\n-                        System.out.println(\"aaaa\");\n \n                     if(value == null)\n                     {\n",
    "summaries": {
      "en": "Modified XMLConfUtils.writeXML() to XMLUtils.indentedWriteXML()",
      "zh": "修改 XMLConfUtils.writeXML()为 XMLUtils.indentedWriteXML()"
    }
  },
  {
    "type": "docs",
    "subtype": "D4",
    "change": "diff --git a/extensions/multibindings/src/com/google/inject/multibindings/ProvidesIntoMap.java b/extensions/multibindings/src/com/google/inject/multibindings/ProvidesIntoMap.java\nindex 886a0fd..f5ae7e4 100644\n--- a/extensions/multibindings/src/com/google/inject/multibindings/ProvidesIntoMap.java\n+++ b/extensions/multibindings/src/com/google/inject/multibindings/ProvidesIntoMap.java\n@@ -34,7 +34,7 @@ import java.lang.annotation.Target;\n  * {@literal @}ProvidesIntoMap\n  * {@literal @}StringMapKey(\"Foo\")\n  * {@literal @}Named(\"plugins\")\n- * Plugin provideFooUrl(FooManager fm) { returm fm.getPlugin(); }\n+ * Plugin provideFooUrl(FooManager fm) { return fm.getPlugin(); }\n  *\n  * {@literal @}ProvidesIntoMap\n  * {@literal @}StringMapKey(\"Bar\")\n",
    "summaries": {
      "en": "Fix spelling error of return keyword",
      "zh": "修正拼写错误的return关键字"
    }
  },
  {
    "type": "fix",
    "subtype": "I5",
    "change": "diff --git a/flowlayout-lib/src/main/java/com/zhy/view/flowlayout/FlowLayout.java b/flowlayout-lib/src/main/java/com/zhy/view/flowlayout/FlowLayout.java\nindex f05f587..14b5c81 100755\n--- a/flowlayout-lib/src/main/java/com/zhy/view/flowlayout/FlowLayout.java\n+++ b/flowlayout-lib/src/main/java/com/zhy/view/flowlayout/FlowLayout.java\n@@ -15,6 +15,7 @@ public class FlowLayout extends ViewGroup\n     protected List<List<View>> mAllViews = new ArrayList<List<View>>();\r\n     protected List<Integer> mLineHeight = new ArrayList<Integer>();\r\n     private String mGravity;\r\n+    private List<View> lineViews = new ArrayList<>();\r\n \r\n     public FlowLayout(Context context, AttributeSet attrs, int defStyle)\r\n     {\r\n@@ -105,14 +106,13 @@ public class FlowLayout extends ViewGroup\n     {\r\n         mAllViews.clear();\r\n         mLineHeight.clear();\r\n+        lineViews.clear();\r\n \r\n         int width = getWidth();\r\n \r\n         int lineWidth = 0;\r\n         int lineHeight = 0;\r\n \r\n-        List<View> lineViews = new ArrayList<View>();\r\n-\r\n         int cCount = getChildCount();\r\n \r\n         for (int i = 0; i < cCount; i++)\r\n",
    "summaries": {
      "en": "Avoid object allocation during drawing/layout operations (pre-allocate and reuse)",
      "zh": "在绘制/布局操作期间避免对象分配（预先分配并重复使用）"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/src/main/java/org/bukkit/ChatColor.java b/src/main/java/org/bukkit/ChatColor.java\nindex 2ce5e82f..bcd0da6d 100644\n--- a/src/main/java/org/bukkit/ChatColor.java\n+++ b/src/main/java/org/bukkit/ChatColor.java\n@@ -103,6 +103,16 @@ public enum ChatColor {\n         return colors.get(code);\n     }\n \n+    /**\n+     * Strips the given message of all color codes\n+     *\n+     * @param input String to strip of color\n+     * @return A copy of the input string, without any coloring\n+     */\n+    public static String stripColor(final String input) {\n+        return input.replaceAll(\"(?i)\\u00A7[0-F]\", \"\");\n+    }\n+\n     static {\n         for (ChatColor color : ChatColor.values()) {\n             colors.put(color.getCode(), color);\n",
    "summaries": {
      "en": "Added a method `stripColor()` that removes color codes from text",
      "zh": "添加了一个方法stripColor()，它可以将文本中的颜色代码去除"
    }
  },
  {
    "type": "test",
    "subtype": "T1",
    "change": "diff --git a/components/camel-zookeeper/src/test/java/org/apache/camel/component/zookeeper/policy/ZookeeperElectionTest.java b/components/camel-zookeeper/src/test/java/org/apache/camel/component/zookeeper/policy/ZookeeperElectionTest.java\nindex 8012820bc1..fb639b0818 100644\n--- a/components/camel-zookeeper/src/test/java/org/apache/camel/component/zookeeper/policy/ZookeeperElectionTest.java\n+++ b/components/camel-zookeeper/src/test/java/org/apache/camel/component/zookeeper/policy/ZookeeperElectionTest.java\n@@ -75,7 +75,6 @@ public class ZookeeperElectionTest extends ZooKeeperTestSupport {\n         LOG.debug(\"About to shutdown the first candidate.\");\n \n         candidateOneContext.stop(); // the first candidate was killed.\n-\n         assertIsMaster(electionCandidate2);\n     }\n \n@@ -86,10 +85,9 @@ public class ZookeeperElectionTest extends ZooKeeperTestSupport {\n \n         ZooKeeperElection electionCandidate1 = createElectionCandidate(candidateOneContext, 2);\n         assertTrue(\"The first candidate was not elected.\", electionCandidate1.isMaster());\n+        \n         ZooKeeperElection electionCandidate2 = createElectionCandidate(candidateTwoContext, 2);\n-        // Need to wait for a while to Candidate2 to be elected.\n-        Thread.sleep(3000);\n-        assertTrue(\"The second candidate should also be a master.\", electionCandidate2.isMaster());\n+        assertIsMaster(electionCandidate2);\n     }\n \n     @Test\n",
    "summaries": {
      "en": "Deleted a waiting time statement",
      "zh": "删除了一个等待时间的语句"
    }
  },
  {
    "type": "refactor",
    "subtype": "R10",
    "change": "diff --git a/platform/platform-impl/src/com/intellij/openapi/editor/impl/EditorImpl.java b/platform/platform-impl/src/com/intellij/openapi/editor/impl/EditorImpl.java\nindex 232f959..a4e0e7a 100644\n--- a/platform/platform-impl/src/com/intellij/openapi/editor/impl/EditorImpl.java\n+++ b/platform/platform-impl/src/com/intellij/openapi/editor/impl/EditorImpl.java\n@@ -4856,11 +4856,6 @@ public final class EditorImpl extends UserDataHolderBase implements EditorEx, Hi\n       setOpaque(false);\n     }\n \n-    @Override\n-    public void paint(@NotNull Graphics g) {\n-      super.paint(g);\n-    }\n-\n     /**\n      * This is helper method. It returns height of the top (decrease) scroll bar\n      * button. Please note, that it's possible to return real height only if scroll bar\n",
    "summaries": {
      "en": "Delete the rewritten paint() method",
      "zh": "删除重写的paint()方法"
    }
  },
  {
    "type": "test",
    "subtype": "T1",
    "change": "diff --git a/camel-core/src/test/java/org/apache/camel/component/dataset/DataSetTest.java b/camel-core/src/test/java/org/apache/camel/component/dataset/DataSetTest.java\nindex dfae24cad6..756cad06c8 100644\n--- a/camel-core/src/test/java/org/apache/camel/component/dataset/DataSetTest.java\n+++ b/camel-core/src/test/java/org/apache/camel/component/dataset/DataSetTest.java\n@@ -20,7 +20,6 @@ import javax.naming.Context;\n \n import org.apache.camel.ContextTestSupport;\n import org.apache.camel.builder.RouteBuilder;\n-import org.apache.camel.component.mock.MockEndpoint;\n \n /**\n  * @version $Revision$\n@@ -28,10 +27,9 @@ import org.apache.camel.component.mock.MockEndpoint;\n public class DataSetTest extends ContextTestSupport {\n     protected SimpleDataSet dataSet = new SimpleDataSet(20);\n \n-    public void test() throws Exception {\n-        MockEndpoint endpoint = getMockEndpoint(\"mock:results\");\n-        endpoint.expectedMessageCount((int) dataSet.getSize());\n-\n+    public void testDataSet() throws Exception {\n+        // data set will itself set its assertions so we should just\n+        // assert that all mocks is ok\n         assertMockEndpointsSatisfied();\n     }\n \n@@ -46,9 +44,7 @@ public class DataSetTest extends ContextTestSupport {\n     protected RouteBuilder createRouteBuilder() throws Exception {\n         return new RouteBuilder() {\n             public void configure() throws Exception {\n-                from(\"dataset:foo\").multicast().\n-                        to(\"mock:results\").\n-                        to(\"direct:foo\");\n+                from(\"dataset:foo\").to(\"direct:foo\");\n \n                 from(\"direct:foo\").to(\"dataset:foo\");\n             }\n",
    "summaries": {
      "en": "Modified the MockEndpoint call in the test case",
      "zh": "修改测试用例中的 MockEndpoint 调用"
    }
  },
  {
    "type": "fix",
    "subtype": "I2",
    "change": "diff --git a/graphdb/src/main/java/com/orientechnologies/orient/graph/sql/functions/OSQLFunctionGremlin.java b/graphdb/src/main/java/com/orientechnologies/orient/graph/sql/functions/OSQLFunctionGremlin.java\nindex fc31bf4..90fdc89 100644\n--- a/graphdb/src/main/java/com/orientechnologies/orient/graph/sql/functions/OSQLFunctionGremlin.java\n+++ b/graphdb/src/main/java/com/orientechnologies/orient/graph/sql/functions/OSQLFunctionGremlin.java\n@@ -30,9 +30,9 @@ import com.orientechnologies.orient.core.db.record.OIdentifiable;\n import com.orientechnologies.orient.core.record.impl.ODocument;\r\n import com.orientechnologies.orient.core.sql.functions.OSQLFunctionAbstract;\r\n import com.orientechnologies.orient.graph.gremlin.OGremlinHelper;\r\n+import com.tinkerpop.blueprints.impls.orient.OrientBaseGraph;\r\n import com.tinkerpop.blueprints.impls.orient.OrientEdge;\r\n import com.tinkerpop.blueprints.impls.orient.OrientElementIterable;\r\n-import com.tinkerpop.blueprints.impls.orient.OrientGraph;\r\n import com.tinkerpop.blueprints.impls.orient.OrientVertex;\r\n \r\n /**\r\n@@ -65,7 +65,7 @@ public class OSQLFunctionGremlin extends OSQLFunctionAbstract {\n         new OGremlinHelper.OGremlinCallback() {\r\n \r\n           @Override\r\n-          public boolean call(ScriptEngine iEngine, OrientGraph iGraph) {\r\n+          public boolean call(ScriptEngine iEngine, OrientBaseGraph iGraph) {\r\n             final ODocument document = (ODocument) iCurrentRecord;\r\n             if (db.isVertex(document)) {\r\n               // VERTEX TYPE, CREATE THE BLUEPRINTS'S WRAPPER\r\n",
    "summaries": {
      "en": "Modified the second parameter object of the call method to OrientBaseGraph",
      "zh": "修改call方法第二个参数对象为OrientBaseGraph"
    }
  },
  {
    "type": "fix",
    "subtype": "I5",
    "change": "diff --git a/subprojects/groovy-json/src/main/java/groovy/json/internal/ReaderCharacterSource.java b/subprojects/groovy-json/src/main/java/groovy/json/internal/ReaderCharacterSource.java\nindex bee97b848..abff7d007 100644\n--- a/subprojects/groovy-json/src/main/java/groovy/json/internal/ReaderCharacterSource.java\n+++ b/subprojects/groovy-json/src/main/java/groovy/json/internal/ReaderCharacterSource.java\n@@ -160,13 +160,13 @@ public class ReaderCharacterSource implements CharacterSource {\n         try {\n             ensureBuffer();\n \n+            foundEscape = false;\n             if (readBuf[index] == '\"') {\n                 index++;\n                 return EMPTY_CHARS;\n             }\n \n             int start = index;\n-            foundEscape = false;\n \n             char[] results = null;\n             boolean foundEnd = false;\n",
    "summaries": {
      "en": "Reset foundEscape after determining the buffer",
      "zh": "在确定缓冲区后重置foundEscape"
    }
  },
  {
    "type": "refactor",
    "subtype": "R3",
    "change": "diff --git a/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/BackgroundPreinitializer.java b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/BackgroundPreinitializer.java\nindex bbd2c4b..938aaf8 100644\n--- a/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/BackgroundPreinitializer.java\n+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/BackgroundPreinitializer.java\n@@ -39,11 +39,18 @@ public class BackgroundPreinitializer\n \n \t@Override\n \tpublic void onApplicationEvent(ApplicationStartedEvent event) {\n-\t\tExecutorService executor = Executors.newSingleThreadExecutor();\n-\t\tsubmit(executor, new MessageConverterInitializer());\n-\t\tsubmit(executor, new MBeanFactoryInitializer());\n-\t\tsubmit(executor, new ValidationInitializer());\n-\t\texecutor.shutdown();\n+\t\ttry {\n+\t\t\tExecutorService executor = Executors.newSingleThreadExecutor();\n+\t\t\tsubmit(executor, new MessageConverterInitializer());\n+\t\t\tsubmit(executor, new MBeanFactoryInitializer());\n+\t\t\tsubmit(executor, new ValidationInitializer());\n+\t\t\texecutor.shutdown();\n+\t\t}\n+\t\tcatch (Exception ex) {\n+\t\t\t// This will fail on GAE where creating threads is prohibited. We can safely\n+\t\t\t// continue but startup will be slightly slower as the initialization will now\n+\t\t\t// happen on the main thread.\n+\t\t}\n \t}\n \n \tprivate void submit(ExecutorService executor, Runnable runnable) {\n",
    "summaries": {
      "en": "Capture exceptions when ExecutorService creates threads",
      "zh": "捕获ExecutorService创建线程时的异常"
    }
  },
  {
    "type": "refactor",
    "subtype": "R10",
    "change": "diff --git a/src/com/google/javascript/jscomp/regex/CharRanges.java b/src/com/google/javascript/jscomp/regex/CharRanges.java\nindex e759295..8f170ea 100644\n--- a/src/com/google/javascript/jscomp/regex/CharRanges.java\n+++ b/src/com/google/javascript/jscomp/regex/CharRanges.java\n@@ -50,7 +50,7 @@ final class CharRanges {\n    * Returns an instance containing all and only the given members.\n    */\n   public static CharRanges withMembers(int... members) {\n-    return new CharRanges(intArrayToRanges(Arrays.copyOf(members, members.length)));\n+    return new CharRanges(intArrayToRanges(members));\n   }\n \n   /**\n@@ -59,7 +59,6 @@ final class CharRanges {\n    *     non-contiguous, [inclusive start, exclusive end) ranges.\n    */\n   public static CharRanges withRanges(int... ranges) {\n-    ranges = Arrays.copyOf(ranges, ranges.length);\n     if ((ranges.length & 1) != 0) { throw new IllegalArgumentException(); }\n     for (int i = 1; i < ranges.length; ++i) {\n       if (ranges[i] <= ranges[i - 1]) {\n",
    "summaries": {
      "en": "Remove unnecessary array copy",
      "zh": "删除不必要的数组复制"
    }
  },
  {
    "type": "refactor",
    "subtype": "Rx",
    "change": "diff --git a/byte-buddy-dep/src/main/java/net/bytebuddy/description/type/TypeDescription.java b/byte-buddy-dep/src/main/java/net/bytebuddy/description/type/TypeDescription.java\nindex 4e18f3d052..53df99b90e 100644\n--- a/byte-buddy-dep/src/main/java/net/bytebuddy/description/type/TypeDescription.java\n+++ b/byte-buddy-dep/src/main/java/net/bytebuddy/description/type/TypeDescription.java\n@@ -5850,7 +5850,7 @@ public interface TypeDescription extends TypeDefinition, TypeVariableSource {\n                 }\n                 if (!rawType.isGenericDeclaration()) {\n                     throw new IllegalArgumentException(rawType + \" is not a parameterized type\");\n-                } if (ownerType == null && declaringType != null && !rawType.isStatic()) {\n+                } else if (ownerType == null && declaringType != null && !rawType.isStatic()) {\n                     throw new IllegalArgumentException(rawType + \" requires an owner type\");\n                 } else if (ownerType != null && !ownerType.asErasure().equals(declaringType)) {\n                     throw new IllegalArgumentException(ownerType + \" does not represent required owner for \" + rawType);\n",
    "summaries": {
      "en": "Merge if statement judgment",
      "zh": "合并if语句判断"
    }
  },
  {
    "type": "refactor",
    "subtype": "R3",
    "change": "diff --git a/mod_cluster/undertow/src/main/java/org/wildfly/mod_cluster/undertow/UndertowConnector.java b/mod_cluster/undertow/src/main/java/org/wildfly/mod_cluster/undertow/UndertowConnector.java\nindex e689d7896e..72da3a13fa 100644\n--- a/mod_cluster/undertow/src/main/java/org/wildfly/mod_cluster/undertow/UndertowConnector.java\n+++ b/mod_cluster/undertow/src/main/java/org/wildfly/mod_cluster/undertow/UndertowConnector.java\n@@ -50,7 +50,7 @@ public class UndertowConnector implements Connector {\n \n     @Override\n     public boolean isReverse() {\n-        return true;\n+        return false;\n     }\n \n     @Override\n",
    "summaries": {
      "en": "Modified the return value of the isReverse() method to false",
      "zh": "修改isReverse()方法的返回值为false"
    }
  },
  {
    "type": "build",
    "subtype": "B1",
    "change": "diff --git a/build.gradle b/build.gradle\nindex 6g74558..897aebc 100644\n--- a/build.gradle\n+++ b/build.gradle\n@@ -1,13 +1,13 @@\n apply plugin: 'java'\n apply plugin: 'eclipse'\n \n-group = 'com.example'\n-version = '1.0.0-SNAPSHOT'\n+group = 'com.mycompany'\n+version = '1.0.1'\n \n sourceCompatibility = 1.8\n \n repositories {\n-    mavenCentral()\n+    maven { url \"https://maven.springframework.org/release\" }\n }\n \n dependencies {\n-    testCompile group: 'junit', name: 'junit', version: '4.13.1'\n+    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.4.5'\n }",
    "summaries": {
      "en": "Replace JUnit with spring-boot-starter-test in version 1.0.1",
      "zh": "在1.0.1版本中使用spring-boot-starter-test替代junit"
    }
  },
  {
    "type": "refactor",
    "subtype": "R6",
    "change": "diff --git a/src/java/org/jivesoftware/messenger/net/ServerSocketReader.java b/src/java/org/jivesoftware/messenger/net/ServerSocketReader.java\nindex 2d83b325e..3a18939a7 100644\n--- a/src/java/org/jivesoftware/messenger/net/ServerSocketReader.java\n+++ b/src/java/org/jivesoftware/messenger/net/ServerSocketReader.java\n@@ -82,7 +82,7 @@ public class ServerSocketReader extends SocketReader {\n             });\n         }\n         catch (PacketRejectedException e) {\n-            // Do nothing\n+            Log.debug(\"IQ rejected: \" + packet.toXML(), e);\n         }\n     }\n \n@@ -107,7 +107,7 @@ public class ServerSocketReader extends SocketReader {\n             });\n         }\n         catch (PacketRejectedException e) {\n-            // Do nothing\n+            Log.debug(\"Presence rejected: \" + packet.toXML(), e);\n         }\n     }\n \n@@ -132,7 +132,7 @@ public class ServerSocketReader extends SocketReader {\n             });\n         }\n         catch (PacketRejectedException e) {\n-            // Do nothing\n+            Log.debug(\"Message rejected: \" + packet.toXML(), e);\n         }\n     }\n \n",
    "summaries": {
      "en": "Replace \"Do nothing\" with log printing",
      "zh": "把// Do nothing替换为日志打印"
    }
  },
  {
    "type": "docs",
    "subtype": "D2",
    "change": "diff --git a/source/org/jivesoftware/smackx/packet/Time.java b/source/org/jivesoftware/smackx/packet/Time.java\nindex 196e8f21..0e830567 100644\n--- a/source/org/jivesoftware/smackx/packet/Time.java\n+++ b/source/org/jivesoftware/smackx/packet/Time.java\n@@ -14,24 +14,23 @@ import java.text.DateFormat;\n  * following code snippet:\n  *\n  * <pre>\n- * <font color=\"darkgreen\">// Request the time from a remote user.</font>\n- * Time timeRequest = <font color=\"navy\"><b>new</b></font> Time();\n+ * // Request the time from a remote user.\n+ * Time timeRequest = new Time();\n  * timeRequest.setType(IQ.Type.GET);\n- * timeRequest.setTo(<font color=\"red\">\"someUser@example.com\"</font>);\n-\n- * &nbsp;\n- * <font color=\"darkgreen\">// Create a packet collector to listen for a response.</font>\n+ * timeRequest.setTo(someUser@example.com);\n+ *\n+ * // Create a packet collector to listen for a response.\n  * PacketCollector collector = con.createPacketCollector(\n- *                <font color=\"navy\"><b>new</b></font> PacketIDFilter(timeRequest.getPacketID()));\n- * &nbsp;\n+ *                new PacketIDFilter(timeRequest.getPacketID()));\n+ *\n  * con.sendPacket(timeRequest);\n- * &nbsp;\n- * <font color=\"darkgreen\">// Wait up to 5 seconds for a result.</font>\n+ *\n+ * // Wait up to 5 seconds for a result.\n  * IQ result = (IQ)collector.nextResult(5000);\n- * <font color=\"navy\"><b>if</b></font> (result != <font color=\"navy\"><b>null</b></font> &#38;&#38; result.getType() == IQ.Type.RESULT) <font color=\"navy\">{</font>\n+ * if (result != null && result.getType() == IQ.Type.RESULT) {\n  *     Time timeResult = (Time)result;\n- *     <font color=\"darkgreen\">// Do something with result...</font>\n- * <font color=\"navy\">}</font></pre><p>\n+ *     // Do something with result...\n+ * }</pre><p>\n  *\n  * Warning: this is an non-standard protocol documented by\n  * <a href=\"http://www.jabber.org/jeps/jep-0090.html\">JEP-90</a>. Because this is a\n",
    "summaries": {
      "en": "Remove HTML tags in Javadoc",
      "zh": "在 Javadoc 中删除 HTML 标记"
    }
  },
  {
    "type": "test",
    "subtype": "T1",
    "change": "diff --git a/src/test/java/com/ning/http/client/async/BasicHttpsTest.java b/src/test/java/com/ning/http/client/async/BasicHttpsTest.java\nindex c3f2555..ae9dc3f 100644\n--- a/src/test/java/com/ning/http/client/async/BasicHttpsTest.java\n+++ b/src/test/java/com/ning/http/client/async/BasicHttpsTest.java\n@@ -209,29 +209,6 @@ public class BasicHttpsTest {\n         log.info(\"Local HTTP server started successfully\");\n     }\n \n-    @Test(groups = \"online\")\n-    public void multipleJavaDotDeadSSLTest() throws Throwable {\n-        AsyncHttpClient c = new AsyncHttpClient();\n-\n-        String body = \"hello there\";\n-\n-        // once\n-        Response response = c.preparePost(\"https://atmosphere.dev.java.net:443/\")\n-                .setBody(body)\n-                .execute().get(TIMEOUT, TimeUnit.SECONDS);\n-\n-        assertNotNull(response);\n-        assertEquals(response.getStatusCode(), 200);\n-\n-        // twice\n-        response = c.preparePost(\"https://grizzly.dev.java.net:443/\")\n-                .setBody(body)\n-                .execute().get(TIMEOUT, TimeUnit.SECONDS);\n-\n-        assertEquals(response.getStatusCode(), 200);\n-\n-    }\n-\n     @Test(groups = \"standalone\")\n     public void zeroCopyPostTest() throws Throwable {\n \n",
    "summaries": {
      "en": "Delete unused test cases",
      "zh": "删除未使用的测试用例"
    }
  },
  {
    "type": "refactor",
    "subtype": "R3",
    "change": "diff --git a/zeppelin-zengine/src/main/java/com/nflabs/zeppelin/zengine/Q.java b/zeppelin-zengine/src/main/java/com/nflabs/zeppelin/zengine/Q.java\nindex 5a588856..b0c57e92 100644\n--- a/zeppelin-zengine/src/main/java/com/nflabs/zeppelin/zengine/Q.java\n+++ b/zeppelin-zengine/src/main/java/com/nflabs/zeppelin/zengine/Q.java\n@@ -34,9 +34,8 @@ public class Q extends Z{\n \tprivate List<URI> resources = new LinkedList<URI>();\n \tprivate boolean cache;\n \ttransient static final String ARG_VAR_NAME=\"arg\";\n-\ttransient static final String PREV_VAR_NAME=\"prev\";\n+\ttransient static final String PREV_VAR_NAME=\"table\";\n \ttransient static final String NAME_PREFIX=\"zp_\";\n-\ttransient static final Pattern templatePattern = Pattern.compile(\".*[$][{]\"+ARG_VAR_NAME+\"[}].*\");\n \t\n \tpublic Q(String query){\n \t\tthis.query = query;\n",
    "summaries": {
      "en": "Change the value of PREV_VAR_NAME to \"table\"",
      "zh": "更改PREV_VAR_NAME的值为table"
    }
  },
  {
    "type": "fix",
    "subtype": "I3",
    "change": "diff --git a/astrid/src/com/todoroo/astrid/adapter/TaskAdapter.java b/astrid/src/com/todoroo/astrid/adapter/TaskAdapter.java\nindex 61443285f..a36f16fab 100644\n--- a/astrid/src/com/todoroo/astrid/adapter/TaskAdapter.java\n+++ b/astrid/src/com/todoroo/astrid/adapter/TaskAdapter.java\n@@ -787,7 +787,7 @@ public class TaskAdapter extends CursorAdapter implements Filterable {\n          * @return list if there was already one\n          */\n         protected synchronized Collection<TYPE> initialize(long taskId) {\n-            if(cache.containsKey(taskId))\n+            if(cache.containsKey(taskId) && cache.get(taskId) != null)\n                 return get(taskId);\n             cache.put(taskId, new HashMap<String, TYPE>());\n             return null;\n",
    "summaries": {
      "en": "Added check for non-empty list in cache",
      "zh": "添加对缓存中是否存在非空列表的检查"
    }
  },
  {
    "type": "fix",
    "subtype": "I3",
    "change": "diff --git a/src/main/java/com/sk89q/worldedit/LocalSession.java b/src/main/java/com/sk89q/worldedit/LocalSession.java\nindex baf6fc8e..03647eb1 100644\n--- a/src/main/java/com/sk89q/worldedit/LocalSession.java\n+++ b/src/main/java/com/sk89q/worldedit/LocalSession.java\n@@ -61,6 +61,9 @@ import java.util.TimeZone;\n  * @author sk89q\n  */\n public class LocalSession {\n+\n+    private static final boolean SHOW_HELP_MESSAGE = false;\n+\n     public static int MAX_HISTORY_SIZE = 15;\n     public static int EXPIRATION_GRACE = 600000;\n \n@@ -584,8 +587,9 @@ public class LocalSession {\n      *\n      * @param player\n      */\n+    @SuppressWarnings({\"PointlessBooleanExpression\", \"ConstantConditions\"})\n     public void tellVersion(Actor player) {\n-        if (config.showHelpInfo) {\n+        if (config.showHelpInfo && SHOW_HELP_MESSAGE) {\n             if (!beenToldVersion) {\n                 StyledFragment fragment = new StyledFragment(Style.GRAY_DARK);\n                 fragment.append(\"Need help with WorldEdit? Ask us on IRC (irc.esper.net #sk89q) or on our forums @ http://forum.enginehub.org\");\n",
    "summaries": {
      "en": "Disable the first help message temporarily",
      "zh": "暂时禁用第一次帮助消息"
    }
  },
  {
    "type": "docs",
    "subtype": "D2",
    "change": "diff --git a/app/src/main/java/com/SecUpwN/AIMSICD/adapters/DbeImportCardInflater.java b/app/src/main/java/com/SecUpwN/AIMSICD/adapters/DbeImportCardInflater.java\nindex 545367b..c411dc0 100644\n--- a/app/src/main/java/com/SecUpwN/AIMSICD/adapters/DbeImportCardInflater.java\n+++ b/app/src/main/java/com/SecUpwN/AIMSICD/adapters/DbeImportCardInflater.java\n@@ -17,7 +17,7 @@ import com.SecUpwN.AIMSICD.R;\n  *\n  *  Dependencies:\n  *                  dbe_import_items.xml\n- *                  \n+ *\n  *\n  *  Issues:\n  *          [ ]     LAC and CID seem swapped...hard to debug\n",
    "summaries": {
      "en": "Corrected comment content format",
      "zh": "更正注释内容格式"
    }
  },
  {
    "type": "refactor",
    "subtype": "R3",
    "change": "diff --git a/h2o-core/src/main/java/water/Job.java b/h2o-core/src/main/java/water/Job.java\nindex 14cd8ad0a..a54be25be 100644\n--- a/h2o-core/src/main/java/water/Job.java\n+++ b/h2o-core/src/main/java/water/Job.java\n@@ -263,7 +263,7 @@ public final class Job<T extends Keyed> extends Keyed<Job> {\n   }\n \n   static public boolean isCancelledException(Throwable ex) {\n-    return false; // return ex instanceof JobCancelledException || ex.getCause() != null && ex.getCause() instanceof JobCancelledException;\n+    return ex instanceof JobCancelledException || ex.getCause() != null && ex.getCause() instanceof JobCancelledException;\n   }\n \n   private static class Barrier1OnCom extends JAtomic {\n",
    "summaries": {
      "en": "Change to use commented code",
      "zh": "更改使用注释代码"
    }
  },
  {
    "type": "fix",
    "subtype": "I2",
    "change": "diff --git a/OsmAnd/src/net/osmand/plus/activities/MapActivityActions.java b/OsmAnd/src/net/osmand/plus/activities/MapActivityActions.java\nindex b9f311eb2c..405ea5e422 100644\n--- a/OsmAnd/src/net/osmand/plus/activities/MapActivityActions.java\n+++ b/OsmAnd/src/net/osmand/plus/activities/MapActivityActions.java\n@@ -1067,7 +1067,7 @@ public class MapActivityActions implements DialogProvider {\n \t\tfinal TargetPointsHelper targetPointsHelper = app.getTargetPointsHelper();\n \t\t\n \t\t\n-\t\tItem dir = qa.item(R.string.get_directions).icons(\n+\t\tItem dir = qa.item(R.string.context_menu_item_directions_to).icons(\n \t\t\t\tR.drawable.ic_action_gdirections_dark, R.drawable.ic_action_gdirections_light);\n \t\tdir.listen(\n \t\t\t\tnew OnContextMenuClick() {\n",
    "summaries": {
      "en": "Fix a context menu",
      "zh": "修复一个上下文菜单"
    }
  },
  {
    "type": "test",
    "subtype": "T1",
    "change": "diff --git a/sql/src/test/java/io/crate/integrationtests/SnapshotRestoreIntegrationTest.java b/sql/src/test/java/io/crate/integrationtests/SnapshotRestoreIntegrationTest.java\nindex 54df529a3..215e84e0e 100644\n--- a/sql/src/test/java/io/crate/integrationtests/SnapshotRestoreIntegrationTest.java\n+++ b/sql/src/test/java/io/crate/integrationtests/SnapshotRestoreIntegrationTest.java\n@@ -325,7 +325,7 @@ public class SnapshotRestoreIntegrationTest extends SQLTransportIntegrationTest\n         execute(\"RESTORE SNAPSHOT \" + snapshotName() + \" TABLE my_table_1 with (\" +\n                 \"wait_for_completion=true)\");\n \n-        execute(\"select schema_name || '.' || table_name from information_schema.tables where schema_name='doc'\");\n+        execute(\"select schema_name || '.' || table_name from information_schema.tables where schema_name='doc' order by 1\");\n         assertThat(TestingHelpers.printedTable(response.rows()), is(\"doc.my_table_1\\ndoc.my_table_2\\n\"));\n     }\n \n",
    "summaries": {
      "en": "Change the sorting method of query results",
      "zh": "更改查询结果的排序方式"
    }
  },
  {
    "type": "feat",
    "subtype": "E2",
    "change": "diff --git a/hikaricp-java6/src/main/java/com/zaxxer/hikari/HikariConfig.java b/hikaricp-java6/src/main/java/com/zaxxer/hikari/HikariConfig.java\nindex 9ade527..2a34367 100644\n--- a/hikaricp-java6/src/main/java/com/zaxxer/hikari/HikariConfig.java\n+++ b/hikaricp-java6/src/main/java/com/zaxxer/hikari/HikariConfig.java\n@@ -679,8 +679,9 @@ public class HikariConfig implements HikariConfigMBean\n          }\n       }\n \n-      poolName = \"HikariPool-\" + poolNumber++;\n-\n+      if (poolName == null) {\n+          poolName = \"HikariPool-\" + poolNumber++;\n+      }\n       logConfiguration();\n    }\n \n",
    "summaries": {
      "en": "Added condition to check if poolName is empty",
      "zh": "添加poolName为空判断条件"
    }
  },
  {
    "type": "test",
    "subtype": "T1",
    "change": "diff --git a/jetty-start/src/test/java/org/eclipse/jetty/start/ModulesTest.java b/jetty-start/src/test/java/org/eclipse/jetty/start/ModulesTest.java\nindex f89c3dd8e7..3efc1c10cc 100644\n--- a/jetty-start/src/test/java/org/eclipse/jetty/start/ModulesTest.java\n+++ b/jetty-start/src/test/java/org/eclipse/jetty/start/ModulesTest.java\n@@ -38,9 +38,7 @@ import org.hamcrest.Matchers;\n import org.junit.Rule;\n import org.junit.Test;\n \n-import static org.hamcrest.Matchers.anyOf;\n-import static org.hamcrest.Matchers.contains;\n-import static org.hamcrest.Matchers.equalTo;\n+import static org.hamcrest.Matchers.*;\n import static org.junit.Assert.assertThat;\n \n public class ModulesTest\n",
    "summaries": {
      "en": "Simplify Matchers import",
      "zh": "简化Matchers导入"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/src/main/java/com/jayway/maven/plugins/android/phase09package/ApkMojo.java b/src/main/java/com/jayway/maven/plugins/android/phase09package/ApkMojo.java\nindex fb351280..3ddf026f 100644\n--- a/src/main/java/com/jayway/maven/plugins/android/phase09package/ApkMojo.java\n+++ b/src/main/java/com/jayway/maven/plugins/android/phase09package/ApkMojo.java\n@@ -105,6 +105,15 @@ public class ApkMojo extends AbstractAndroidMojo {\n      * @parameter expression=\"${android.renameManifestPackage}\"\n      */\n     private String renameManifestPackage;\n+    \n+    /**\n+     * <p>Rewrite the manifest so that all of its instrumentation components target the given package.\n+     * This value will be passed on to the aapt parameter --rename-instrumentation-target-package. \n+     * Look to aapt for more help on this. </p>\n+     *\n+     * @parameter expression=\"${android.renameInstrumentationTargetPackage}\"\n+     */\n+    private String renameInstrumentationTargetPackage;\n \n     /**\n      * <p>Root folder containing native libraries to include in the application package.</p>\n@@ -766,8 +775,13 @@ public class ApkMojo extends AbstractAndroidMojo {\n         }\n         \n         if (StringUtils.isNotBlank(renameManifestPackage)) {\n-        \tcommands.add(\"--rename-manifest-package\");\n-        \tcommands.add(renameManifestPackage);\n+          commands.add(\"--rename-manifest-package\");\n+          commands.add(renameManifestPackage);\n+        }\n+        \n+        if (StringUtils.isNotBlank(renameInstrumentationTargetPackage)) {\n+          commands.add(\"--rename-instrumentation-target-package\");\n+          commands.add(renameInstrumentationTargetPackage);\n         }\n \n         commands.add(\"-I\");\n",
    "summaries": {
      "en": "Add support for renaming target packages in dashboard",
      "zh": "添加对重命名仪表板目标包的支持"
    }
  },
  {
    "type": "fix",
    "subtype": "I3",
    "change": "diff --git a/EditTextChips/src/main/java/com/novoda/demo/edittextchips/SplitwiseTagsView.java b/EditTextChips/src/main/java/com/novoda/demo/edittextchips/SplitwiseTagsView.java\nindex 292e8c8..ec3756f 100644\n--- a/EditTextChips/src/main/java/com/novoda/demo/edittextchips/SplitwiseTagsView.java\n+++ b/EditTextChips/src/main/java/com/novoda/demo/edittextchips/SplitwiseTagsView.java\n@@ -51,7 +51,7 @@ public class SplitwiseTagsView extends TokenCompleteTextView<SplitwiseActivity.T\n     }\n \n     private boolean isSelectingHint(int selStart) {\n-        return selStart > getText().length() - suffixHint.length();\n+        return selStart >= getText().length() - suffixHint.length();\n     }\n \n     @Override\n",
    "summaries": {
      "en": "The user is not allowed to choose the prompt, not even the first character",
      "zh": "不允许用户选择提示，甚至不允许选择第一个字符"
    }
  },
  {
    "type": "style",
    "subtype": "S5",
    "change": "diff --git a/style.py b/style.py\nindex a622d98..894c64d 100644\n--- a/style.py\n+++ b/style.py\n@@ -1,7 +1,6 @@\n-def add(x: int,y: int)->int:\n+def add(x: int, y: int) -> int:\n     #Add two numbers\n     result=x+y\n-    \n+\n     return result\n \n-print(add(5,3))\n\\ No newline at end of file\n+print(add(5, 3))",
    "summaries": {
      "en": "Add necessary spaces to improve code readability",
      "zh": "增加必要的空格以提高代码可读性"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/core/src/main/java/io/grpc/ForwardingClientCall.java b/core/src/main/java/io/grpc/ForwardingClientCall.java\nindex 88b02989..c1c993ba 100644\n--- a/core/src/main/java/io/grpc/ForwardingClientCall.java\n+++ b/core/src/main/java/io/grpc/ForwardingClientCall.java\n@@ -77,6 +77,11 @@ public abstract class ForwardingClientCall<ReqT, RespT> extends ClientCall<ReqT,\n     return delegate().isReady();\n   }\n \n+  @Override\n+  public Attributes getAttributes() {\n+    return delegate().getAttributes();\n+  }\n+\n   /**\n    * A simplified version of {@link ForwardingClientCall} where subclasses can pass in a {@link\n    * ClientCall} as the delegate.\n",
    "summaries": {
      "en": "Add getAttributes() method",
      "zh": "添加 getAttributes()方法"
    }
  },
  {
    "type": "refactor",
    "subtype": "R4",
    "change": "diff --git a/smack-im/src/main/java/org/jivesoftware/smack/roster/Roster.java b/smack-im/src/main/java/org/jivesoftware/smack/roster/Roster.java\nindex 4412b27c..fa9b81bd 100644\n--- a/smack-im/src/main/java/org/jivesoftware/smack/roster/Roster.java\n+++ b/smack-im/src/main/java/org/jivesoftware/smack/roster/Roster.java\n@@ -1067,6 +1067,7 @@ public class Roster extends Manager {\n             return userPresences;\n         }\n \n+        @Override\n         public void processPacket(Packet packet) throws NotConnectedException {\n             final XMPPConnection connection = connection();\n             Presence presence = (Presence) packet;\n",
    "summaries": {
      "en": "Add \"@Override\" annotation in the data package listener of Roster",
      "zh": "在Roster的数据包监听器中添加“@Override”注释"
    }
  },
  {
    "type": "refactor",
    "subtype": "R6",
    "change": "diff --git a/src/main/java/org/elasticsearch/action/index/TransportIndexAction.java b/src/main/java/org/elasticsearch/action/index/TransportIndexAction.java\nindex a1910b8..45a0a0c 100644\n--- a/src/main/java/org/elasticsearch/action/index/TransportIndexAction.java\n+++ b/src/main/java/org/elasticsearch/action/index/TransportIndexAction.java\n@@ -268,7 +268,7 @@ public class TransportIndexAction extends TransportShardReplicationOperationActi\n                 return;\n             }\n             documentMapper.refreshSource();\n-\n+            logger.debug(\"Sending mapping updated to master: index [{}] type [{}]\", request.index(), request.type());\n             mappingUpdatedAction.execute(new MappingUpdatedAction.MappingUpdatedRequest(request.index(), request.type(), documentMapper.mappingSource()), new ActionListener<MappingUpdatedAction.MappingUpdatedResponse>() {\n                 @Override\n                 public void onResponse(MappingUpdatedAction.MappingUpdatedResponse mappingUpdatedResponse) {\n",
    "summaries": {
      "en": "Added debug logs when sending map update requests to the main server",
      "zh": "在向主服务器发送映射更新请求时添加调试日志"
    }
  },
  {
    "type": "refactor",
    "subtype": "R10",
    "change": "diff --git a/h2o-algos/src/main/java/hex/kmeans/KMeans.java b/h2o-algos/src/main/java/hex/kmeans/KMeans.java\nindex a7f05c063..50e0945ee 100644\n--- a/h2o-algos/src/main/java/hex/kmeans/KMeans.java\n+++ b/h2o-algos/src/main/java/hex/kmeans/KMeans.java\n@@ -72,7 +72,7 @@ public class KMeans extends ModelBuilder<KMeansModel,KMeansModel.KMeansParameter\n     while( ncats != len ) {\n       while( ncats < len && vecs[ncats].isEnum() ) ncats++;\n       while( len > 0 && !vecs[len-1].isEnum() ) len--;\n-      if( ncats < len-1 ) { _train.swap(ncats,len-1); _valid.swap(ncats,len-1); }\n+      if( ncats < len-1 ) _train.swap(ncats,len-1);\n     }\n     _ncats = ncats;\n   }\n",
    "summaries": {
      "en": "Delete _valid.swap(ncats, len-1);",
      "zh": "删除_valid.swap(ncats,len-1);"
    }
  },
  {
    "type": "fix",
    "subtype": "I2",
    "change": "diff --git a/subprojects/model-core/src/main/java/org/gradle/model/internal/inspect/ManagedModelCreationRuleExtractor.java b/subprojects/model-core/src/main/java/org/gradle/model/internal/inspect/ManagedModelCreationRuleExtractor.java\nindex 6d41a53..67a2a02 100644\n--- a/subprojects/model-core/src/main/java/org/gradle/model/internal/inspect/ManagedModelCreationRuleExtractor.java\n+++ b/subprojects/model-core/src/main/java/org/gradle/model/internal/inspect/ManagedModelCreationRuleExtractor.java\n@@ -89,7 +89,7 @@ public class ManagedModelCreationRuleExtractor extends AbstractModelCreationRule\n                     }\n                 }\n             })\n-            .action(ModelActionRole.Create, ModelReference.of(NodeInitializerRegistry.class), new BiAction<MutableModelNode, List<ModelView<?>>>() {\n+            .action(ModelActionRole.Create, DefaultNodeInitializerRegistry.DEFAULT_REFERENCE, new BiAction<MutableModelNode, List<ModelView<?>>>() {\n                 @Override\n                 public void execute(MutableModelNode node, List<ModelView<?>> modelViews) {\n                     NodeInitializerRegistry nodeInitializerRegistry = (NodeInitializerRegistry) modelViews.get(0).getInstance();\n",
    "summaries": {
      "en": "Modified the parameters of ModelActionRole.Create",
      "zh": "修改了 ModelActionRole.Create 的参数"
    }
  },
  {
    "type": "fix",
    "subtype": "I3",
    "change": "diff --git a/jps/jps-builders/src/org/jetbrains/jps/builders/impl/BuildOutputConsumerImpl.java b/jps/jps-builders/src/org/jetbrains/jps/builders/impl/BuildOutputConsumerImpl.java\nindex 4c89b33..d82921a 100644\n--- a/jps/jps-builders/src/org/jetbrains/jps/builders/impl/BuildOutputConsumerImpl.java\n+++ b/jps/jps-builders/src/org/jetbrains/jps/builders/impl/BuildOutputConsumerImpl.java\n@@ -51,7 +51,8 @@ public class BuildOutputConsumerImpl implements BuildOutputConsumer {\n     for (File outputRoot : myOutputs) {\n       String outputRootPath = FileUtil.toSystemIndependentName(outputRoot.getPath());\n       final String relativePath = FileUtil.getRelativePath(outputRootPath, outputFilePath, '/');\n-      if (relativePath != null) {\n+      if (relativePath != null && !relativePath.startsWith(\"..\")) {\n+        // the relative path must be under the root or equal to it\n         myFileGeneratedEvent.add(outputRootPath, relativePath);\n       }\n     }\n",
    "summaries": {
      "en": "Correctly select the output root directory for generated classes",
      "zh": "正确选择生成类的输出根目录"
    }
  },
  {
    "type": "refactor",
    "subtype": "R3",
    "change": "diff --git a/src/main/java/com/xtremelabs/robolectric/Robolectric.java b/src/main/java/com/xtremelabs/robolectric/Robolectric.java\nindex 0df80c0..4f4e727 100644\n--- a/src/main/java/com/xtremelabs/robolectric/Robolectric.java\n+++ b/src/main/java/com/xtremelabs/robolectric/Robolectric.java\n@@ -474,9 +474,9 @@ public class Robolectric {\n         return (ShadowNotification) Robolectric.shadowOf_(other);\n     }\n \n-    public static <E> SparseArray<E> shadowOf(SparseArray<E> other) {\n+    public static <E> ShadowSparseArray<E> shadowOf(SparseArray<E> other) {\n         //noinspection unchecked\n-        return (SparseArray<E>) Robolectric.shadowOf_(other);\n+        return (ShadowSparseArray<E>) Robolectric.shadowOf_(other);\n     }\n \n     @SuppressWarnings({\"unchecked\"})\n",
    "summaries": {
      "en": "Change the return type of shadowOf(SparseArray<E> other) to ShadowSparseArray<E>",
      "zh": "更改返回类型 shadowOf(SparseArray<E> other) 为 ShadowSparseArray<E>"
    }
  },
  {
    "type": "docs",
    "subtype": "D2",
    "change": "diff --git a/src/main/java/com/alibaba/fastjson/JSON.java b/src/main/java/com/alibaba/fastjson/JSON.java\nindex a9552f4..a5b89ea 100755\n--- a/src/main/java/com/alibaba/fastjson/JSON.java\n+++ b/src/main/java/com/alibaba/fastjson/JSON.java\n@@ -611,7 +611,6 @@ public abstract class JSON implements JSONStreamAware, JSONAware {\n      * @param object\n      * @param writer output writer\n      * @param features serializer features\n-     * @throws IOException\n      */\n     public static void writeJSONString(Object object, Writer writer, SerializerFeature... features) {\n         writeJSONString(object, writer, JSON.DEFAULT_GENERATE_FEATURE, features);\n",
    "summaries": {
      "en": "Remove @throws annotation",
      "zh": "删除@throws注解"
    }
  },
  {
    "type": "fix",
    "subtype": "I1",
    "change": "diff --git a/src/org/geometerplus/zlibrary/ui/android/view/ZLAndroidWidget.java b/src/org/geometerplus/zlibrary/ui/android/view/ZLAndroidWidget.java\nindex 6869dfbeb..18ff4a3c8 100644\n--- a/src/org/geometerplus/zlibrary/ui/android/view/ZLAndroidWidget.java\n+++ b/src/org/geometerplus/zlibrary/ui/android/view/ZLAndroidWidget.java\n@@ -208,7 +208,7 @@ public class ZLAndroidWidget extends View implements View.OnLongClickListener {\n \t\t}\n \t\tfinal AnimationProvider animator = getAnimationProvider();\n \t\tfinal int w = getWidth();\n-\t\tfinal int h = getHeight();\n+\t\tfinal int h = getMainAreaHeight();\n \t\tswitch (pageIndex) {\n \t\t\tcase current:\n \t\t\t\tswitch (myPageToScrollTo) {\n",
    "summaries": {
      "en": "Fixed vertical scrolling animation issue",
      "zh": "修复垂直滚动动画问题"
    }
  },
  {
    "type": "refactor",
    "subtype": "R3",
    "change": "diff --git a/src/main/java/org/elasticsearch/script/javascript/JavaScriptScriptEngineService.java b/src/main/java/org/elasticsearch/script/javascript/JavaScriptScriptEngineService.java\nindex 5fdf851..83fb23d 100644\n--- a/src/main/java/org/elasticsearch/script/javascript/JavaScriptScriptEngineService.java\n+++ b/src/main/java/org/elasticsearch/script/javascript/JavaScriptScriptEngineService.java\n@@ -53,7 +53,7 @@ public class JavaScriptScriptEngineService extends AbstractComponent implements\n     public JavaScriptScriptEngineService(Settings settings) {\n         super(settings);\n \n-        this.optimizationLevel = componentSettings.getAsInt(\"optimization_level\", 1);\n+        this.optimizationLevel = settings.getAsInt(\"script.javascript.optimization_level\", 1);\n \n         Context ctx = Context.enter();\n         try {\n",
    "summaries": {
      "en": "Modified the way of getting the optimizationLevel property in the JavaScriptScriptEngineService class",
      "zh": "修改了 JavaScriptScriptEngineService 类中的 optimizationLevel 属性的获取方式"
    }
  },
  {
    "type": "fix",
    "subtype": "I2",
    "change": "diff --git a/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/freemarker/FreeMarkerAutoConfiguration.java b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/freemarker/FreeMarkerAutoConfiguration.java\nindex b0f877a..06fc05f 100644\n--- a/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/freemarker/FreeMarkerAutoConfiguration.java\n+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/freemarker/FreeMarkerAutoConfiguration.java\n@@ -93,7 +93,6 @@ public class FreeMarkerAutoConfiguration {\n \t}\n \n \t@Configuration\n-\t@ConditionalOnClass(Servlet.class)\n \t@ConditionalOnNotWebApplication\n \tpublic static class FreeMarkerConfiguration implements EnvironmentAware {\n \n@@ -137,7 +136,7 @@ public class FreeMarkerAutoConfiguration {\n \t\t}\n \n \t\t@Bean\n-\t\t@ConditionalOnBean(FreeMarkerConfig.class)\n+\t\t@ConditionalOnBean(FreeMarkerConfigurer.class)\n \t\t@ConditionalOnMissingBean\n \t\tpublic freemarker.template.Configuration freemarkerConfiguration(\n \t\t\t\tFreeMarkerConfig configurer) {\n",
    "summaries": {
      "en": "Change the conditional annotation in the FreeMarkerAutoConfiguration class",
      "zh": "更改 FreeMarkerAutoConfiguration 类中的条件注解"
    }
  },
  {
    "type": "refactor",
    "subtype": "R3",
    "change": "diff --git a/WordPress/src/main/java/org/wordpress/android/ui/reader/ReaderPostListActivity.java b/WordPress/src/main/java/org/wordpress/android/ui/reader/ReaderPostListActivity.java\nindex 36b44f9ed..8a226e536 100644\n--- a/WordPress/src/main/java/org/wordpress/android/ui/reader/ReaderPostListActivity.java\n+++ b/WordPress/src/main/java/org/wordpress/android/ui/reader/ReaderPostListActivity.java\n@@ -8,7 +8,6 @@ import android.support.design.widget.CoordinatorLayout;\n import android.support.v7.app.ActionBar;\n import android.support.v7.app.AppCompatActivity;\n import android.support.v7.widget.Toolbar;\n-import android.text.TextUtils;\n import android.view.MenuItem;\n \n import org.wordpress.android.R;\n@@ -61,8 +60,8 @@ public class ReaderPostListActivity extends AppCompatActivity {\n             }\n         } else if (getPostListType() == ReaderPostListType.SEARCH_RESULTS) {\n             String query = getIntent().getStringExtra(ReaderConstants.ARG_SEARCH_QUERY);\n-            if (!TextUtils.isEmpty(query) && savedInstanceState == null) {\n-                setTitle(String.format(getString(R.string.reader_title_search_results), query));\n+            setTitle(String.format(getString(R.string.reader_title_search_results), query));\n+            if (savedInstanceState == null) {\n                 showListFragmentForSearch(query);\n             }\n         }\n",
    "summaries": {
      "en": "Preserve search activity title during rotation",
      "zh": "在旋转时保留搜索活动标题"
    }
  },
  {
    "type": "fix",
    "subtype": "I5",
    "change": "diff --git a/plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/dialogs/connection/ConnectionPageNetwork.java b/plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/dialogs/connection/ConnectionPageNetwork.java\nindex 2fce6883a..cea62b039 100644\n--- a/plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/dialogs/connection/ConnectionPageNetwork.java\n+++ b/plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/dialogs/connection/ConnectionPageNetwork.java\n@@ -141,7 +141,7 @@ public class ConnectionPageNetwork extends ActiveWizardPage<ConnectionWizard> {\n                 configuration = new DBWHandlerConfiguration(descriptor, driver);\r\n             }\r\n             HandlerBlock handlerBlock = configurations.get(descriptor);\r\n-            handlerBlock.useHandlerCheck.setSelection(configuration.isEnabled());\r\n+            //handlerBlock.useHandlerCheck.setSelection(configuration.isEnabled());\r\n             if (selectItem == null && configuration.isEnabled()) {\r\n                 selectItem = handlerBlock.tabItem;\r\n             }\r\n@@ -162,6 +162,7 @@ public class ConnectionPageNetwork extends ActiveWizardPage<ConnectionWizard> {\n     {\r\n         HandlerBlock handlerBlock = configurations.get(descriptor);\r\n         DBWHandlerConfiguration handlerConfiguration = handlerBlock.loadedConfigs.get(wizard.getPageSettings().getActiveDataSource().getId());\r\n+        handlerBlock.useHandlerCheck.setSelection(handlerConfiguration.isEnabled());\r\n         if (handlerConfiguration.isEnabled()) {\r\n             if (handlerBlock.blockEnableState != null) {\r\n                 handlerBlock.blockEnableState.restore();\r\n",
    "summaries": {
      "en": "Fix network processor configuration UI",
      "zh": "修复网络处理程序配置UI"
    }
  },
  {
    "type": "test",
    "subtype": "T1",
    "change": "diff --git a/src/test/java/javaslang/collection/StreamTest.java b/src/test/java/javaslang/collection/StreamTest.java\nindex daf49879..c98464a1 100644\n--- a/src/test/java/javaslang/collection/StreamTest.java\n+++ b/src/test/java/javaslang/collection/StreamTest.java\n@@ -282,6 +282,14 @@ public class StreamTest extends AbstractSeqTest {\n         assertThat(stream.toString()).isEqualTo(\"Stream(1, 2, ?)\");\n     }\n \n+    @Test\n+    public void shouldGroupByAndMapProperly() {\n+        assertThat(Stream.of(1)\n+                .groupBy(n -> n)\n+                .map(longStreamEntry -> longStreamEntry.key)\n+                .toList()).isEqualTo(List.of(1));\n+    }\n+\n     // -- Serializable\n \n     @Test(expected = InvalidObjectException.class)\n",
    "summaries": {
      "en": "Add Stream stream test cases",
      "zh": "添加Stream流测试用例"
    }
  },
  {
    "type": "refactor",
    "subtype": "R3",
    "change": "diff --git a/src/org/opensolaris/opengrok/analysis/vb/VBAnalyzer.java b/src/org/opensolaris/opengrok/analysis/vb/VBAnalyzer.java\nindex fc7b5be1..50b692d5 100644\n--- a/src/org/opensolaris/opengrok/analysis/vb/VBAnalyzer.java\n+++ b/src/org/opensolaris/opengrok/analysis/vb/VBAnalyzer.java\n@@ -18,7 +18,7 @@\n  */\r\n \r\n /*\r\n- * Copyright (c) 2006, 2010, Oracle and/or its affiliates. All rights reserved.\r\n+ * Copyright (c) 2006, 2011, Oracle and/or its affiliates. All rights reserved.\r\n  */\r\n package org.opensolaris.opengrok.analysis.vb;\r\n \r\n@@ -42,9 +42,9 @@ import org.opensolaris.opengrok.history.Annotation;\n  */\r\n public class VBAnalyzer extends PlainAnalyzer {\r\n \r\n-    private VBSymbolTokenizer cref;\r\n-    private VBXref xref;\r\n-    private Reader dummy = new StringReader(\"\");\r\n+    private final VBSymbolTokenizer cref;\r\n+    private final VBXref xref;\r\n+    private final Reader dummy = new StringReader(\"\");\r\n \r\n     /** Creates a new instance of VBAnalyzer */\r\n     protected VBAnalyzer(FileAnalyzerFactory factory) {\r\n",
    "summaries": {
      "en": "Set the field to final to eliminate PMD warning",
      "zh": "将字段设置为 final 以消除 PMD 警告"
    }
  },
  {
    "type": "feat",
    "subtype": "E3",
    "change": "diff --git a/src/java/org/jivesoftware/wildfire/muc/MUCRoomHistory.java b/src/java/org/jivesoftware/wildfire/muc/MUCRoomHistory.java\nindex 9db1f1227..ef69e304f 100644\n--- a/src/java/org/jivesoftware/wildfire/muc/MUCRoomHistory.java\n+++ b/src/java/org/jivesoftware/wildfire/muc/MUCRoomHistory.java\n@@ -12,9 +12,9 @@\n package org.jivesoftware.wildfire.muc;\r\n \r\n import org.dom4j.Element;\r\n-import org.jivesoftware.wildfire.user.UserNotFoundException;\r\n import org.jivesoftware.util.FastDateFormat;\r\n import org.jivesoftware.util.JiveConstants;\r\n+import org.jivesoftware.wildfire.user.UserNotFoundException;\r\n import org.xmpp.packet.JID;\r\n import org.xmpp.packet.Message;\r\n \r\n@@ -61,6 +61,12 @@ public final class MUCRoomHistory {\n             }\r\n         }\r\n \r\n+        // Ignore messages with no subject AND no body\r\n+        if ((packet.getSubject() == null || \"\".equals(packet.getSubject().trim())) &&\r\n+                (packet.getBody() == null || \"\".equals(packet.getBody().trim()))) {\r\n+            return;\r\n+        }\r\n+\r\n         Message packetToAdd = packet.createCopy();\r\n \r\n         // Check if the room has changed its configuration\r\n",
    "summaries": {
      "en": "Ignore messages without body and subject",
      "zh": "忽略没有正文和主题的消息"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/java/org/apache/tomcat/websocket/WsFrameBase.java b/java/org/apache/tomcat/websocket/WsFrameBase.java\nindex 00b312e48..8ca2691bc 100644\n--- a/java/org/apache/tomcat/websocket/WsFrameBase.java\n+++ b/java/org/apache/tomcat/websocket/WsFrameBase.java\n@@ -402,6 +402,13 @@ public abstract class WsFrameBase {\n                 // End of frame and possible message as well.\n \n                 if (continuationExpected) {\n+                    // If partial messages are supported, send what we have\n+                    // managed to decode\n+                    if (usePartial()) {\n+                        messageBufferText.flip();\n+                        sendMessageText(false);\n+                        messageBufferText.clear();\n+                    }\n                     messageBufferBinary.compact();\n                     newFrame();\n                     // Process next frame\n",
    "summaries": {
      "en": "Add support for partial messages",
      "zh": "增加对 partial messages 的支持"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/core/src/main/java/com/google/bitcoin/core/PeerGroup.java b/core/src/main/java/com/google/bitcoin/core/PeerGroup.java\nindex ab92ffe3..3be9dded 100644\n--- a/core/src/main/java/com/google/bitcoin/core/PeerGroup.java\n+++ b/core/src/main/java/com/google/bitcoin/core/PeerGroup.java\n@@ -99,6 +99,8 @@ public class PeerGroup extends AbstractIdleService implements TransactionBroadca\n     // How many connections we want to have open at the current time. If we lose connections, we'll try opening more\n     // until we reach this count.\n     @GuardedBy(\"lock\") private int maxConnections;\n+    // Minimum protocol version we will allow ourselves to connect to: require Bloom filtering.\n+    private volatile int vMinRequiredProtocolVersion = FilteredBlock.MIN_PROTOCOL_VERSION;\n \n     // Runs a background thread that we use for scheduling pings to our peers, so we can measure their performance\n     // and network latency. We ping peers every pingIntervalMsec milliseconds.\n@@ -263,6 +265,7 @@ public class PeerGroup extends AbstractIdleService implements TransactionBroadca\n \n                 Peer peer = new Peer(params, chain, ver, memoryPool);\n                 peer.addLifecycleListener(startupListener);\n+                peer.setMinProtocolVersion(vMinRequiredProtocolVersion);\n                 pendingPeers.add(peer);\n                 TCPNetworkConnection codec = new TCPNetworkConnection(params, peer.getVersionMessage());\n                 p.addLast(\"codec\", codec.getHandler());\n@@ -1286,6 +1289,19 @@ public class PeerGroup extends AbstractIdleService implements TransactionBroadca\n     }\n \n     /**\n+     * If a peer is connected to that claims to speak a protocol version lower than the given version, it will\n+     * be disconnected and another one will be tried instead.\n+     */\n+    public void setMinRequiredProtocolVersion(int minRequiredProtocolVersion) {\n+        this.vMinRequiredProtocolVersion = minRequiredProtocolVersion;\n+    }\n+\n+    /** The minimum protocol version required: defaults to the version required for Bloom filtering. */\n+    public int getMinRequiredProtocolVersion() {\n+        return vMinRequiredProtocolVersion;\n+    }\n+\n+    /**\n      * Returns our peers most commonly reported chain height. If multiple heights are tied, the highest is returned.\n      * If no peers are connected, returns zero.\n      */\n",
    "summaries": {
      "en": "By default, nodes that support Bloom filters are required",
      "zh": "默认情况下需要支持 Bloom 过滤的节点"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/platform/util/src/com/intellij/openapi/util/text/StringUtil.java b/platform/util/src/com/intellij/openapi/util/text/StringUtil.java\nindex 827cf7d..82bd5a4 100644\n--- a/platform/util/src/com/intellij/openapi/util/text/StringUtil.java\n+++ b/platform/util/src/com/intellij/openapi/util/text/StringUtil.java\n@@ -2482,6 +2482,14 @@ public class StringUtil extends StringUtilRt {\n   }\n \n   /**\n+   * Say smallPart = \"op\" and bigPart=\"open\". Method returns true for \"Ope\" and false for \"ops\"\n+   */\n+  public static boolean isBetween(@NotNull String string, @NotNull String smallPart, @NotNull String bigPart) {\n+    final String s = string.toLowerCase();\n+    return s.startsWith(smallPart.toLowerCase()) && bigPart.toLowerCase().startsWith(s);\n+  }\n+\n+  /**\n    * Expirable CharSequence. Very useful to control external library execution time,\n    * i.e. when java.util.regex.Pattern match goes out of control.\n    */\n",
    "summaries": {
      "en": "Added isBetween method in StringUtil class to check if a string is between two parts",
      "zh": "在StringUtil类中添加isBetween方法，用于判断字符串是否介于两个部分之间"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/packages/SettingsLib/src/com/android/settingslib/deviceinfo/StorageMeasurement.java b/packages/SettingsLib/src/com/android/settingslib/deviceinfo/StorageMeasurement.java\nindex e0af29d..1cf7248 100644\n--- a/packages/SettingsLib/src/com/android/settingslib/deviceinfo/StorageMeasurement.java\n+++ b/packages/SettingsLib/src/com/android/settingslib/deviceinfo/StorageMeasurement.java\n@@ -32,6 +32,7 @@ import android.os.HandlerThread;\n import android.os.IBinder;\n import android.os.Looper;\n import android.os.Message;\n+import android.os.RemoteException;\n import android.os.UserHandle;\n import android.os.UserManager;\n import android.os.storage.StorageVolume;\n@@ -76,6 +77,9 @@ public class StorageMeasurement {\n             Environment.DIRECTORY_DOWNLOADS, Environment.DIRECTORY_ANDROID);\n \n     public static class MeasurementDetails {\n+        public long totalSize;\n+        public long availSize;\n+\n         /**\n          * Total apps disk usage.\n          * <p>\n@@ -121,7 +125,7 @@ public class StorageMeasurement {\n     }\n \n     public interface MeasurementReceiver {\n-        public void onDetailsChanged(MeasurementDetails details);\n+        void onDetailsChanged(MeasurementDetails details);\n     }\n \n     private WeakReference<MeasurementReceiver> mReceiver;\n@@ -370,6 +374,10 @@ public class StorageMeasurement {\n             }\n         }\n \n+        final File file = mVolume.getPath();\n+        details.totalSize = file.getTotalSpace();\n+        details.availSize = file.getFreeSpace();\n+\n         // Measure all apps hosted on this volume for all users\n         if (mVolume.getType() == VolumeInfo.TYPE_PRIVATE) {\n             final List<ApplicationInfo> apps = packageManager.getInstalledApplications(\n",
    "summaries": {
      "en": "Add totalSize and availSize queries in StorageMeasurement",
      "zh": "在 StorageMeasurement 中添加 totalSize 和 availSize 查询"
    }
  },
  {
    "type": "fix",
    "subtype": "Ix",
    "change": "diff --git a/media/java/android/media/MediaCodecInfo.java b/media/java/android/media/MediaCodecInfo.java\nindex 349d67e..72fb1e9 100644\n--- a/media/java/android/media/MediaCodecInfo.java\n+++ b/media/java/android/media/MediaCodecInfo.java\n@@ -591,7 +591,12 @@ public final class MediaCodecInfo {\n                     }\n                 }\n                 levelCaps = createFromProfileLevel(mMime, profile, maxLevel);\n-                if (levelCaps != null && !levelCaps.isFormatSupported(format)) {\n+                // remove profile from this format otherwise levelCaps.isFormatSupported will\n+                // get into this same conditon and loop forever.\n+                Map<String, Object> mapWithoutProfile = new HashMap<>(map);\n+                mapWithoutProfile.remove(MediaFormat.KEY_PROFILE);\n+                MediaFormat formatWithoutProfile = new MediaFormat(mapWithoutProfile);\n+                if (levelCaps != null && !levelCaps.isFormatSupported(formatWithoutProfile)) {\n                     return false;\n                 }\n             }\n",
    "summaries": {
      "en": "Check format before deleting KEY_PROFIL to fix the loop forever issue",
      "zh": "检查format前删除KEY_PROFIL以修复loop forever问题"
    }
  },
  {
    "type": "feat",
    "subtype": "E1",
    "change": "diff --git a/subprojects/dependency-management/src/main/java/org/gradle/internal/resource/transfer/DefaultCacheAwareExternalResourceAccessor.java b/subprojects/dependency-management/src/main/java/org/gradle/internal/resource/transfer/DefaultCacheAwareExternalResourceAccessor.java\nindex 8dcd580..4d24b12 100644\n--- a/subprojects/dependency-management/src/main/java/org/gradle/internal/resource/transfer/DefaultCacheAwareExternalResourceAccessor.java\n+++ b/subprojects/dependency-management/src/main/java/org/gradle/internal/resource/transfer/DefaultCacheAwareExternalResourceAccessor.java\n@@ -198,6 +198,10 @@ public class DefaultCacheAwareExternalResourceAccessor implements CacheAwareExte\n                 throw new IOException(\"Destination '\" + destFile + \"' exists but is a directory\");\n             }\n \n+            if (srcFile.length() == 0) {\n+                throw new IOException(\"Source '\" + srcFile + \"' has a 0 length\");\n+            }\n+\n             FileInputStream input = new FileInputStream(srcFile);\n             try {\n                 FileOutputStream output = new FileOutputStream(destFile);\n",
    "summaries": {
      "en": "Added exception handling for source files with length of 0",
      "zh": "添加源文件长度为 0 的异常处理"
    }
  },
  {
    "type": "refactor",
    "subtype": "R7",
    "change": "diff --git a/handler/src/main/java/io/netty/handler/ssl/SslBufferPool.java b/handler/src/main/java/io/netty/handler/ssl/SslBufferPool.java\nindex 6cd3e18..e0e0fb5 100644\n--- a/handler/src/main/java/io/netty/handler/ssl/SslBufferPool.java\n+++ b/handler/src/main/java/io/netty/handler/ssl/SslBufferPool.java\n@@ -17,6 +17,8 @@ package io.netty.handler.ssl;\n \n import java.nio.ByteBuffer;\n \n+import javax.net.ssl.SSLEngine;\n+\n /**\n  * A {@link ByteBuffer} pool dedicated for {@link SslHandler} performance\n  * improvement.\n",
    "summaries": {
      "en": "Import SSLEngine",
      "zh": "导入SSLEngine"
    }
  },
  {
    "type": "style",
    "subtype": "S1",
    "change": "diff --git a/style/code.py b/style/code.py\nindex 7bbc3a3..7a81265 100644\n--- a/style/code.py\n+++ b/style/code.py\n@@ -1,9 +1,13 @@\n-public class HelloWorld {\n-    public static void main(String[] args) { // Prints Hello, World! to the terminal window.\n-        System.out.println(\"Hello, World!\");\n+public class HelloWorld\n+{    \n+    public static void main(String[] args)     // Prints Hello, World! to the terminal window.\n+    {           \n+        System.out.println(\"Hello, World!\");\n     }\n-}\n \n-public class GoodBye {\n-    public static void sayGoodBye() {\n-        System.out.println(\"Goodbye, World!\");\n+    \n+public class GoodBye\n+{    \n+    public static void sayGoodBye()\n+    {         \n+        System.out.println(\"Goodbye, World!\");\n     }\n } ",
    "summaries": {
      "en": "Modify code style: Braces on new line",
      "zh": "修改代码风格：大括号换行"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/plugins/ant/src/com/intellij/lang/ant/dom/PropertyProviderFinder.java b/plugins/ant/src/com/intellij/lang/ant/dom/PropertyProviderFinder.java\nindex 335a815..8a9115f8 100644\n--- a/plugins/ant/src/com/intellij/lang/ant/dom/PropertyProviderFinder.java\n+++ b/plugins/ant/src/com/intellij/lang/ant/dom/PropertyProviderFinder.java\n@@ -46,6 +46,7 @@ public abstract class PropertyProviderFinder extends AntDomRecursiveVisitor {\n   private Map<String, List<String>> myDependenciesMap = new HashMap<String, List<String>>();   // target effective name -> dependencies effective names\n \n   private Set<String> myProcessedTargets = new HashSet<String>();\n+  private Set<AntDomProject> myVisitedProjects = new HashSet<AntDomProject>();\n \n   protected PropertyProviderFinder(DomElement contextElement) {\n     myContextElement = contextElement != null? contextElement.getParentOfType(AntDomElement.class, false) : null;\n@@ -201,6 +202,13 @@ public abstract class PropertyProviderFinder extends AntDomRecursiveVisitor {\n     processFileInclusion(importTag, InclusionKind.IMPORT);\n   }\n \n+  public void visitProject(AntDomProject project) {\n+    if (!myVisitedProjects.contains(project)) {\n+      myVisitedProjects.add(project);\n+      super.visitProject(project);\n+    }\n+  }\n+\n   private void processFileInclusion(AntDomIncludingDirective directive, final InclusionKind kind) {\n     if (directive.equals(myContextElement)) {\n       stop();\n",
    "summaries": {
      "en": "Added visitProject() method",
      "zh": "增加 visitProject()方法"
    }
  },
  {
    "type": "fix",
    "subtype": "Ix",
    "change": "diff --git a/app/src/main/java/xyz/monkeytong/hongbao/services/HongbaoService.java b/app/src/main/java/xyz/monkeytong/hongbao/services/HongbaoService.java\nindex 7425cca..8f50f00 100644\n--- a/app/src/main/java/xyz/monkeytong/hongbao/services/HongbaoService.java\n+++ b/app/src/main/java/xyz/monkeytong/hongbao/services/HongbaoService.java\n@@ -90,7 +90,13 @@ public class HongbaoService extends AccessibilityService implements SharedPrefer\n             new android.os.Handler().postDelayed(\n                     new Runnable() {\n                         public void run() {\n-                            mUnpackNode.performAction(AccessibilityNodeInfo.ACTION_CLICK);\n+                            try {\n+                                mUnpackNode.performAction(AccessibilityNodeInfo.ACTION_CLICK);\n+                            } catch (Exception e) {\n+                                mMutex = false;\n+                                mLuckyMoneyPicked = false;\n+                                mUnpackCount = 0;\n+                            }\n                         }\n                     },\n                     delayFlag);\n",
    "summaries": {
      "en": "Fix crash related to opening delay",
      "zh": "修复与打开延迟相关的崩溃"
    }
  },
  {
    "type": "refactor",
    "subtype": "R5",
    "change": "diff --git a/plugins/git4idea/rt/src/org/jetbrains/git4idea/ssh/SSHMain.java b/plugins/git4idea/rt/src/org/jetbrains/git4idea/ssh/SSHMain.java\nindex 67a74b9..368b142 100644\n--- a/plugins/git4idea/rt/src/org/jetbrains/git4idea/ssh/SSHMain.java\n+++ b/plugins/git4idea/rt/src/org/jetbrains/git4idea/ssh/SSHMain.java\n@@ -609,7 +609,7 @@ public class SSHMain implements GitExternalApp {\n   @Override\n   public String toString() {\n     return String\n-      .format(\"SSHMain{myHost=%s, myHandlerNo=%d, myCommand='%s', myExitCode=%d, myLastError='%s'}\", myHost, myHandlerNo, myCommand,\n+      .format(\"SSHMain{myHost=%s, myHandlerNo=%s, myCommand='%s', myExitCode=%d, myLastError='%s'}\", myHost, myHandlerNo, myCommand,\n               myExitCode, myLastError);\n   }\n \n",
    "summaries": {
      "en": "Modified string formatting in toString method",
      "zh": "修改 toString 方法中的字符串格式化"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/presto-parser/src/main/java/com/facebook/presto/sql/tree/DefaultExpressionTraversalVisitor.java b/presto-parser/src/main/java/com/facebook/presto/sql/tree/DefaultExpressionTraversalVisitor.java\nindex e7269a1..5c0e539 100644\n--- a/presto-parser/src/main/java/com/facebook/presto/sql/tree/DefaultExpressionTraversalVisitor.java\n+++ b/presto-parser/src/main/java/com/facebook/presto/sql/tree/DefaultExpressionTraversalVisitor.java\n@@ -25,4 +25,11 @@ public abstract class DefaultExpressionTraversalVisitor<R, C>\n         // Don't traverse into Subqueries within an Expression\n         return null;\n     }\n+\n+    @Override\n+    protected R visitExists(ExistsPredicate node, C context)\n+    {\n+        // Don't traverse into Subqueries within an Expression\n+        return null;\n+    }\n }\n",
    "summaries": {
      "en": "Add visitExists() method",
      "zh": "添加 visitExists()方法"
    }
  },
  {
    "type": "fix",
    "subtype": "I3",
    "change": "diff --git a/python/ipnb/src/org/jetbrains/plugins/ipnb/editor/IpnbFileEditor.java b/python/ipnb/src/org/jetbrains/plugins/ipnb/editor/IpnbFileEditor.java\nindex 89a5cd0..92ed37a 100644\n--- a/python/ipnb/src/org/jetbrains/plugins/ipnb/editor/IpnbFileEditor.java\n+++ b/python/ipnb/src/org/jetbrains/plugins/ipnb/editor/IpnbFileEditor.java\n@@ -332,8 +332,9 @@ public class IpnbFileEditor extends UserDataHolderBase implements FileEditor {\n                              new CellSelectionListener() {\n                                @Override\n                                public void selectionChanged(@NotNull IpnbPanel ipnbPanel, boolean byMouse) {\n-                                 if (myCellTypeCombo == null || byMouse) return;\n+                                 if (myCellTypeCombo == null) return;\n                                  updateCellTypeCombo(ipnbPanel);\n+                                 if (byMouse) return;\n                                  updateScrollPosition(ipnbPanel);\n                                }\n                              });\n",
    "summaries": {
      "en": "Only after closing the editor can the style be changed",
      "zh": "只有在关闭编辑器后才能更改样式"
    }
  },
  {
    "type": "refactor",
    "subtype": "R10",
    "change": "diff --git a/WordPressAnalytics/src/main/java/org/wordpress/android/analytics/AnalyticsTracker.java b/WordPressAnalytics/src/main/java/org/wordpress/android/analytics/AnalyticsTracker.java\nindex 41b54998e..9f243295e 100644\n--- a/WordPressAnalytics/src/main/java/org/wordpress/android/analytics/AnalyticsTracker.java\n+++ b/WordPressAnalytics/src/main/java/org/wordpress/android/analytics/AnalyticsTracker.java\n@@ -128,19 +128,15 @@ public final class AnalyticsTracker {\n     }\n \n     public static void init(Context context) {\n-        loadPrefHasUserOptedOut(context, false);\n+        loadPrefHasUserOptedOut(context);\n     }\n \n-    public static void loadPrefHasUserOptedOut(Context context, boolean manageSession) {\n+    public static void loadPrefHasUserOptedOut(Context context) {\n         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);\n \n         boolean hasUserOptedOut = !prefs.getBoolean(\"wp_pref_send_usage_stats\", true);\n-        if (hasUserOptedOut != mHasUserOptedOut && manageSession) {\n+        if (hasUserOptedOut != mHasUserOptedOut) {\n             mHasUserOptedOut = hasUserOptedOut;\n-            if (mHasUserOptedOut) {\n-                endSession(true);\n-                clearAllData();\n-            }\n         }\n     }\n \n",
    "summaries": {
      "en": "Delete unnecessary code",
      "zh": "删除无用代码"
    }
  },
  {
    "type": "fix",
    "subtype": "Ix",
    "change": "diff --git a/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java b/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java\nindex b8f0d07..05c37d1 100644\n--- a/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java\n+++ b/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java\n@@ -5045,15 +5045,14 @@ public class DevicePolicyManagerService extends IDevicePolicyManager.Stub {\n                 if (activitiesToEnable != null) {\n                     for (ResolveInfo info : activitiesToEnable) {\n                         if (info.activityInfo != null) {\n-\n-                            if (!isSystemApp(pm, info.activityInfo.packageName, primaryUser.id)) {\n-                                throw new IllegalArgumentException(\n-                                        \"Only system apps can be enabled this way.\");\n+                            String packageName = info.activityInfo.packageName;\n+                            if (isSystemApp(pm, packageName, primaryUser.id)) {\n+                                numberOfAppsInstalled++;\n+                                pm.installExistingPackageAsUser(packageName, userId);\n+                            } else {\n+                                Slog.d(LOG_TAG, \"Not enabling \" + packageName + \" since is not a\"\n+                                        + \" system app\");\n                             }\n-\n-\n-                            numberOfAppsInstalled++;\n-                            pm.installExistingPackageAsUser(info.activityInfo.packageName, userId);\n                         }\n                     }\n                 }\n",
    "summaries": {
      "en": "Do not throw exceptions for non-system applications when enabling system applications",
      "zh": "在启用系统应用程序时，不要为非系统应用程序抛出异常"
    }
  },
  {
    "type": "refactor",
    "subtype": "R10",
    "change": "diff --git a/fml/src/main/java/cpw/mods/fml/client/config/GuiEditArray.java b/fml/src/main/java/cpw/mods/fml/client/config/GuiEditArray.java\nindex d33c8b591..6b5ef3f9d 100644\n--- a/fml/src/main/java/cpw/mods/fml/client/config/GuiEditArray.java\n+++ b/fml/src/main/java/cpw/mods/fml/client/config/GuiEditArray.java\n@@ -129,7 +129,7 @@ public class GuiEditArray extends GuiScreen\n         }\n         else if (button.id == 2001)\n         {\n-            this.currentValues = (String[]) configElement.getDefaults();\n+            this.currentValues = configElement.getDefaults();\n             this.entryList = new GuiEditArrayEntries(this, this.mc, this.configElement, this.beforeValues, this.currentValues);\n         }\n         else if (button.id == 2002)\n",
    "summaries": {
      "en": "Fixed the issue of crashes caused by unnecessary conversions in the new configuration GUI system",
      "zh": "修复新配置 GUI 系统中不必要的转换导致崩溃的问题"
    }
  },
  {
    "type": "fix",
    "subtype": "I3",
    "change": "diff --git a/platform/lang-impl/src/com/intellij/codeInsight/daemon/impl/IdentifierHighlighterPassFactory.java b/platform/lang-impl/src/com/intellij/codeInsight/daemon/impl/IdentifierHighlighterPassFactory.java\nindex bdb0a4f..1e18f2e 100644\n--- a/platform/lang-impl/src/com/intellij/codeInsight/daemon/impl/IdentifierHighlighterPassFactory.java\n+++ b/platform/lang-impl/src/com/intellij/codeInsight/daemon/impl/IdentifierHighlighterPassFactory.java\n@@ -21,6 +21,7 @@ import com.intellij.codeHighlighting.TextEditorHighlightingPass;\n import com.intellij.codeHighlighting.TextEditorHighlightingPassFactory;\n import com.intellij.codeHighlighting.TextEditorHighlightingPassRegistrar;\n import com.intellij.codeInsight.CodeInsightSettings;\n+import com.intellij.openapi.application.ApplicationManager;\n import com.intellij.openapi.components.AbstractProjectComponent;\n import com.intellij.openapi.editor.Editor;\n import com.intellij.openapi.project.Project;\n@@ -40,7 +41,8 @@ public class IdentifierHighlighterPassFactory extends AbstractProjectComponent i\n   public TextEditorHighlightingPass createHighlightingPass(@NotNull final PsiFile file, @NotNull final Editor editor) {\n     if (editor.isOneLineMode()) return null;\n \n-    if (!CodeInsightSettings.getInstance().HIGHLIGHT_IDENTIFIER_UNDER_CARET) {\n+    if (!CodeInsightSettings.getInstance().HIGHLIGHT_IDENTIFIER_UNDER_CARET ||\n+        ApplicationManager.getApplication().isHeadlessEnvironment()) {\n       return null;\n     }\n \n",
    "summaries": {
      "en": "Added check for Headless environment",
      "zh": "添加对 Headless 环境的判断"
    }
  },
  {
    "type": "test",
    "subtype": "T1",
    "change": "diff --git a/src/test/java/org/HdrHistogram/HistogramTest.java b/src/test/java/org/HdrHistogram/HistogramTest.java\nindex 76548c5..cf2f82f 100644\n--- a/src/test/java/org/HdrHistogram/HistogramTest.java\n+++ b/src/test/java/org/HdrHistogram/HistogramTest.java\n@@ -481,6 +481,9 @@ public class HistogramTest {\n         Histogram concurrentHistogram = new ConcurrentHistogram(highestTrackableValue, 3);\n         testAbstractSerialization(concurrentHistogram);\n \n+        Histogram synchronizedHistogram = new SynchronizedHistogram(highestTrackableValue, 3);\n+        testAbstractSerialization(synchronizedHistogram);\n+\n         IntCountsHistogram intCountsHistogram = new IntCountsHistogram(highestTrackableValue, 3);\n         testAbstractSerialization(intCountsHistogram);\n \n@@ -496,6 +499,9 @@ public class HistogramTest {\n         concurrentHistogram = new ConcurrentHistogram(highestTrackableValue, 2);\n         testAbstractSerialization(concurrentHistogram);\n \n+        synchronizedHistogram = new SynchronizedHistogram(highestTrackableValue, 2);\n+        testAbstractSerialization(synchronizedHistogram);\n+\n         intCountsHistogram = new IntCountsHistogram(highestTrackableValue, 2);\n         testAbstractSerialization(intCountsHistogram);\n \n",
    "summaries": {
      "en": "Add coverage for SynchronizedHistogram",
      "zh": "为SynchronizedHistogram添加覆盖率"
    }
  },
  {
    "type": "test",
    "subtype": "T1",
    "change": "diff --git a/platform/xdebugger-impl/testSrc/com/intellij/xdebugger/XBreakpointsTestCase.java b/platform/xdebugger-impl/testSrc/com/intellij/xdebugger/XBreakpointsTestCase.java\nindex e1b4d52..c08e1c0 100644\n--- a/platform/xdebugger-impl/testSrc/com/intellij/xdebugger/XBreakpointsTestCase.java\n+++ b/platform/xdebugger-impl/testSrc/com/intellij/xdebugger/XBreakpointsTestCase.java\n@@ -16,9 +16,11 @@\n package com.intellij.xdebugger;\n \n import com.intellij.mock.MockProject;\n-import com.intellij.xdebugger.impl.breakpoints.XBreakpointManagerImpl;\n-import com.intellij.util.xmlb.XmlSerializer;\n+import com.intellij.openapi.vfs.impl.http.RemoteFileManager;\n+import com.intellij.openapi.vfs.impl.http.RemoteFileManagerImpl;\n import com.intellij.util.xmlb.SkipDefaultValuesSerializationFilters;\n+import com.intellij.util.xmlb.XmlSerializer;\n+import com.intellij.xdebugger.impl.breakpoints.XBreakpointManagerImpl;\n import org.jdom.Element;\n \n /**\n@@ -30,6 +32,7 @@ public abstract class XBreakpointsTestCase extends XDebuggerTestCase {\n   protected void setUp() throws Exception {\n     super.setUp();\n     MockProject project = disposeOnTearDown(new MockProject());\n+    getApplication().registerService(RemoteFileManager.class, RemoteFileManagerImpl.class);\n     myBreakpointManager = new XBreakpointManagerImpl(project, null, null);\n   }\n \n",
    "summaries": {
      "en": "Add registration for RemoteFileManager",
      "zh": "增加对RemoteFileManager的注册"
    }
  },
  {
    "type": "refactor",
    "subtype": "R5",
    "change": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java b/src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\nindex ebd682881..5d81fbd86 100755\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\n@@ -192,7 +192,7 @@ public final class TreeWalker\n             return;\n         }\n \n-        final String msg = \"%s occurred during the analysis of file %s .\";\n+        final String msg = \"%s occurred during the analysis of file %s.\";\n \n         try {\n             final FileText text = FileText.fromLines(file, lines);\n",
    "summaries": {
      "en": "Remove outdated spaces from error messages",
      "zh": "从错误消息中删除过时的空格"
    }
  },
  {
    "type": "refactor",
    "subtype": "R10",
    "change": "diff --git a/web/src/main/java/org/jboss/as/web/WebExtension.java b/web/src/main/java/org/jboss/as/web/WebExtension.java\nindex d71321e75e..bf18a7a175 100644\n--- a/web/src/main/java/org/jboss/as/web/WebExtension.java\n+++ b/web/src/main/java/org/jboss/as/web/WebExtension.java\n@@ -92,7 +92,6 @@ public class WebExtension implements Extension {\n     protected static final PathElement VALVE_PATH = PathElement.pathElement(Constants.VALVE);\n \n     protected static final PathElement FILE_PATH = PathElement.pathElement(Constants.SETTING, Constants.FILE);\n-    protected static final PathElement FILE_ALIAS = PathElement.pathElement(Constants.FILE, Constants.CONFIGURATION);\n \n     protected static final PathElement PARAM = PathElement.pathElement(Constants.PARAM);\n \n",
    "summaries": {
      "en": "Delete unused variable FILE_ALIAS",
      "zh": "删除未使用的变量FILE_ALIAS"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/stack/NotificationStackScrollLayout.java b/packages/SystemUI/src/com/android/systemui/statusbar/stack/NotificationStackScrollLayout.java\nindex e9d67c2..ed756aa 100644\n--- a/packages/SystemUI/src/com/android/systemui/statusbar/stack/NotificationStackScrollLayout.java\n+++ b/packages/SystemUI/src/com/android/systemui/statusbar/stack/NotificationStackScrollLayout.java\n@@ -1449,7 +1449,7 @@ public class NotificationStackScrollLayout extends ViewGroup\n      */\n     private void updateScrollStateForRemovedChild(View removedChild) {\n         int startingPosition = getPositionInLinearLayout(removedChild);\n-        int childHeight = removedChild.getHeight() + mPaddingBetweenElements;\n+        int childHeight = getIntrinsicHeight(removedChild) + mPaddingBetweenElements;\n         int endPosition = startingPosition + childHeight;\n         if (endPosition <= mOwnScrollY) {\n             // This child is fully scrolled of the top, so we have to deduct its height from the\n@@ -1462,6 +1462,14 @@ public class NotificationStackScrollLayout extends ViewGroup\n         }\n     }\n \n+    private int getIntrinsicHeight(View view) {\n+        if (view instanceof ExpandableView) {\n+            ExpandableView expandableView = (ExpandableView) view;\n+            return expandableView.getIntrinsicHeight();\n+        }\n+        return view.getHeight();\n+    }\n+\n     private int getPositionInLinearLayout(View requestedChild) {\n         int position = 0;\n         for (int i = 0; i < getChildCount(); i++) {\n",
    "summaries": {
      "en": "Added getIntrinsicHeight() method to retrieve the height of a view",
      "zh": "添加getIntrinsicHeight()方法来获取视图的高度"
    }
  },
  {
    "type": "fix",
    "subtype": "I2",
    "change": "diff --git a/src/biz/bokhorst/xprivacy/XWebView.java b/src/biz/bokhorst/xprivacy/XWebView.java\nindex 94edfbb7..f1a94807 100644\n--- a/src/biz/bokhorst/xprivacy/XWebView.java\n+++ b/src/biz/bokhorst/xprivacy/XWebView.java\n@@ -30,7 +30,7 @@ public class XWebView extends XHook {\n \t// frameworks/base/core/java/android/webkit/WebView.java\n \t// http://developer.android.com/reference/android/webkit/WebView.html\n \n-\t// public synchronize String getUserAgentString()\n+\t// public synchronized void setUserAgent(int ua)\n \t// public synchronized void setUserAgentString (String ua)\n \t// frameworks/base/core/java/android/webkit/WebSettings.java\n \t// http://developer.android.com/reference/android/webkit/WebSettings.html\n@@ -69,7 +69,7 @@ public class XWebView extends XHook {\n \n \t\t\t\t\t// setUserAgent\n \t\t\t\t\ttry {\n-\t\t\t\t\t\tMethod setUserAgent = clazzWebSettings.getDeclaredMethod(\"setUserAgent\", String.class);\n+\t\t\t\t\t\tMethod setUserAgent = clazzWebSettings.getDeclaredMethod(\"setUserAgent\", Integer.class);\n \t\t\t\t\t\tUtil.log(this, Log.INFO, \"Hooking \" + setUserAgent.getName());\n \t\t\t\t\t\tXposedBridge.hookMethod(setUserAgent, new XC_MethodHook() {\n \t\t\t\t\t\t\t@Override\n",
    "summaries": {
      "en": "Modified the parameter type of setUserAgent() method",
      "zh": "修改 setUserAgent()方法的参数类型"
    }
  },
  {
    "type": "fix",
    "subtype": "I4",
    "change": "diff --git a/core/java/android/widget/CheckedTextView.java b/core/java/android/widget/CheckedTextView.java\nindex de8b80d..3f080d6 100644\n--- a/core/java/android/widget/CheckedTextView.java\n+++ b/core/java/android/widget/CheckedTextView.java\n@@ -242,7 +242,7 @@ public class CheckedTextView extends TextView implements Checkable {\n                 right = width - mBasePadding;\n                 left = right - mCheckMarkWidth;\n             }\n-            checkMarkDrawable.setBounds( left, top, right, bottom);\n+            checkMarkDrawable.setBounds(mScrollX + left, top, mScrollX + right, bottom);\n             checkMarkDrawable.draw(canvas);\n         }\n     }\n",
    "summaries": {
      "en": "Consider mScrollX when drawing checkMarkDrawable",
      "zh": "在绘制 checkMarkDrawable 时考虑 mScrollX"
    }
  },
  {
    "type": "fix",
    "subtype": "Ix",
    "change": "diff --git a/core/java/android/content/pm/ApplicationInfo.java b/core/java/android/content/pm/ApplicationInfo.java\nindex 17131d2..2d95781 100644\n--- a/core/java/android/content/pm/ApplicationInfo.java\n+++ b/core/java/android/content/pm/ApplicationInfo.java\n@@ -281,9 +281,11 @@ public class ApplicationInfo extends PackageItemInfo implements Parcelable {\n      * Value for {@link #flags}: Set to true if the application has been\n      * installed using the forward lock option.\n      *\n+     * NOTE: DO NOT CHANGE THIS VALUE!  It is saved in packages.xml.\n+     * \n      * {@hide}\n      */\n-    public static final int FLAG_FORWARD_LOCK = 1<<30;\n+    public static final int FLAG_FORWARD_LOCK = 1<<29;\n \n     /**\n      * Value for {@link #flags}: set to <code>true</code> if the application\n@@ -296,7 +298,7 @@ public class ApplicationInfo extends PackageItemInfo implements Parcelable {\n      *\n      * {@hide}\n      */\n-    public static final int FLAG_CANT_SAVE_STATE = 1<<29;\n+    public static final int FLAG_CANT_SAVE_STATE = 1<<28;\n \n     /**\n      * Flags associated with the application.  Any combination of\n",
    "summaries": {
      "en": "Modified the values of constants FLAG_FORWARD_LOCK and FLAG_CANT_SAVE_STATE",
      "zh": "修改常量 FLAG_FORWARD_LOCK 和 FLAG_CANT_SAVE_STATE 的值"
    }
  },
  {
    "type": "fix",
    "subtype": "I11",
    "change": "diff --git a/tools/src/main/java/com/google/bitcoin/tools/WalletTool.java b/tools/src/main/java/com/google/bitcoin/tools/WalletTool.java\nindex 63664f18..9b6f3fde 100644\n--- a/tools/src/main/java/com/google/bitcoin/tools/WalletTool.java\n+++ b/tools/src/main/java/com/google/bitcoin/tools/WalletTool.java\n@@ -470,6 +470,11 @@ public class WalletTool {\n             // network. Once propagation is complete and we heard the transaction back from all our peers, it will\n             // be committed to the wallet.\n             peers.broadcastTransaction(t).get();\n+            if (peers.getMinBroadcastConnections() == 1) {\n+                // Crap hack to work around some issue with Netty where the write future\n+                // completes before the remote peer actually hears the message.\n+                Thread.sleep(5000);\n+            }\n             System.out.println(t.getHashAsString());\n         } catch (BlockStoreException e) {\n             throw new RuntimeException(e);\n",
    "summaries": {
      "en": "Added a hack to WalletTool to fix the Netty issue with garbage collection",
      "zh": "添加垃圾 WalletTool hack 以解决 Netty 问题"
    }
  },
  {
    "type": "docs",
    "subtype": "D2",
    "change": "diff --git a/library/src/main/java/com/github/amlcurran/showcaseview/ShowcaseView.java b/library/src/main/java/com/github/amlcurran/showcaseview/ShowcaseView.java\nindex 9942510..23dd5d4 100644\n--- a/library/src/main/java/com/github/amlcurran/showcaseview/ShowcaseView.java\n+++ b/library/src/main/java/com/github/amlcurran/showcaseview/ShowcaseView.java\n@@ -506,11 +506,19 @@ public class ShowcaseView extends RelativeLayout\n             return this;\n         }\n \n+        /**\n+         * Sets the paint that will draw the text as specified by {@link #setContentText(CharSequence)}\n+         * or {@link #setContentText(int)}\n+         */\n         public Builder setContentTextPaint(TextPaint textPaint) {\n             showcaseView.setContentTextPaint(textPaint);\n             return this;\n         }\n \n+        /**\n+         * Sets the paint that will draw the text as specified by {@link #setContentTitle(CharSequence)}\n+         * or {@link #setContentTitle(int)}\n+         */\n         public Builder setContentTitlePaint(TextPaint textPaint) {\n             showcaseView.setContentTitlePaint(textPaint);\n             return this;\n",
    "summaries": {
      "en": "Add javadoc for new API",
      "zh": "为新的 API 添加 javadoc"
    }
  },
  {
    "type": "refactor",
    "subtype": "R6",
    "change": "diff --git a/modules/cpr/src/main/java/org/atmosphere/cpr/AtmosphereFramework.java b/modules/cpr/src/main/java/org/atmosphere/cpr/AtmosphereFramework.java\nindex a46da71..32adfe8 100644\n--- a/modules/cpr/src/main/java/org/atmosphere/cpr/AtmosphereFramework.java\n+++ b/modules/cpr/src/main/java/org/atmosphere/cpr/AtmosphereFramework.java\n@@ -482,6 +482,11 @@ public class AtmosphereFramework implements ServletContextProvider {\n         } catch (Throwable t) {\n             logger.error(\"Failed to initialize Atmosphere Framework\", t);\n \n+            Throwable a;\n+            while ( (a = t.getCause()) != null) {\n+                logger.error(\"Failed to initialize Atmosphere Framework\", a);\n+            }\n+\n             if (t instanceof ServletException) {\n                 throw (ServletException) t;\n             }\n",
    "summaries": {
      "en": "Added handling for Throwable",
      "zh": "增加对 Throwable 的处理"
    }
  },
  {
    "type": "fix",
    "subtype": "I3",
    "change": "diff --git a/common/src/main/java/io/netty/util/internal/StringUtil.java b/common/src/main/java/io/netty/util/internal/StringUtil.java\nindex 4ede108..adbfeca 100644\n--- a/common/src/main/java/io/netty/util/internal/StringUtil.java\n+++ b/common/src/main/java/io/netty/util/internal/StringUtil.java\n@@ -329,7 +329,7 @@ public final class StringUtil {\n      *\n      * @param value The value which will be escaped according to\n      *              <a href=\"https://tools.ietf.org/html/rfc4180#section-2\">RFC-4180</a>\n-     * @return {@link CharSequence} the escaped value if nesessary, or the value unchanged\n+     * @return {@link CharSequence} the escaped value if necessary, or the value unchanged\n      */\n     public static CharSequence escapeCsv(CharSequence value) {\n         int length = checkNotNull(value, \"value\").length();\n@@ -354,7 +354,7 @@ public final class StringUtil {\n                     } else {\n                         boolean isNextCharDoubleQuote = isDoubleQuote(value.charAt(i + 1));\n                         if (!isDoubleQuote(value.charAt(i - 1)) &&\n-                                (!isNextCharDoubleQuote || isNextCharDoubleQuote && i + 1 == last)) {\n+                                (!isNextCharDoubleQuote || i + 1 == last)) {\n                             escaped.append(DOUBLE_QUOTE);\n                             escapedDoubleQuote = true;\n                         }\n",
    "summaries": {
      "en": "Remove the condition of isNextCharDoubleQuote",
      "zh": "移除isNextCharDoubleQuote条件"
    }
  },
  {
    "type": "docs",
    "subtype": "D2",
    "change": "diff --git a/src/com/android/email/activity/MessageView.java b/src/com/android/email/activity/MessageView.java\nindex 5f09a7d..71db1f7 100644\n--- a/src/com/android/email/activity/MessageView.java\n+++ b/src/com/android/email/activity/MessageView.java\n@@ -485,7 +485,7 @@ public class MessageView extends K9Activity\n         final WebSettings webSettings = mMessageContentView.getSettings();\n \n         webSettings.setSupportZoom(true);\n-        webSettings.setBuiltInZoomControls(true);\n+        //webSettings.setBuiltInZoomControls(true);\n         webSettings.setLayoutAlgorithm(WebSettings.LayoutAlgorithm.NARROW_COLUMNS);\n \n         mAttachments.setVisibility(View.GONE);\n",
    "summaries": {
      "en": "Disable built-in zoom control temporarily",
      "zh": "暂时禁用内置缩放控件"
    }
  },
  {
    "type": "docs",
    "subtype": "D2",
    "change": "diff --git a/core/src/main/java/org/elasticsearch/plugins/AnalysisPlugin.java b/core/src/main/java/org/elasticsearch/plugins/AnalysisPlugin.java\nindex ffd278a..8c23e53 100644\n--- a/core/src/main/java/org/elasticsearch/plugins/AnalysisPlugin.java\n+++ b/core/src/main/java/org/elasticsearch/plugins/AnalysisPlugin.java\n@@ -45,6 +45,10 @@ import static java.util.Collections.emptyMap;\n  *     }\n  * }\n  * }</pre>\n+ *\n+ * Elasticsearch doesn't have any automatic mechanism to share these components between indexes. If any component is heavy enough to warrant\n+ * such sharing then it is the Pugin's responsibility to do it in their {@link AnalysisProvider} implementation. We recommend against doing\n+ * this unless absolutely necessary because it can be difficult to get the caching right given things like behavior changes across versions.\n  */\n public interface AnalysisPlugin {\n     /**\n",
    "summaries": {
      "en": "Add shared instructions for analyzing components",
      "zh": "添加对分析组件的共享说明"
    }
  },
  {
    "type": "test",
    "subtype": "T1",
    "change": "diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollReuseAddrTest.java b/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollReuseAddrTest.java\nindex 21d835e..9d34695 100644\n--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollReuseAddrTest.java\n+++ b/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollReuseAddrTest.java\n@@ -30,6 +30,7 @@ import io.netty.util.ResourceLeakDetector;\n import io.netty.util.internal.StringUtil;\n import org.junit.Assert;\n import org.junit.Assume;\n+import org.junit.Ignore;\n import org.junit.Test;\n \n import java.io.IOException;\n@@ -116,6 +117,7 @@ public class EpollReuseAddrTest {\n     }\n \n     @Test(timeout = 10000)\n+    @Ignore // TODO: Unignore after making it pass on centos6-1 and debian7-1\n     public void testMultipleBindDatagramChannel() throws Exception {\n         ResourceLeakDetector.setLevel(ResourceLeakDetector.Level.ADVANCED);\n         Assume.assumeTrue(versionEqOrGt(3, 9, 0));\n",
    "summaries": {
      "en": "Ignore EpollReuseAddrTest.testMultipleBindDatagramChannel",
      "zh": "忽略EpollReuseAddrTest.testMultipleBindDatagramChannel"
    }
  },
  {
    "type": "fix",
    "subtype": "I2",
    "change": "diff --git a/subprojects/model-core/src/main/java/org/gradle/model/internal/core/ManagedSetModelProjection.java b/subprojects/model-core/src/main/java/org/gradle/model/internal/core/ManagedSetModelProjection.java\nindex 0634a2d..d947d5d 100644\n--- a/subprojects/model-core/src/main/java/org/gradle/model/internal/core/ManagedSetModelProjection.java\n+++ b/subprojects/model-core/src/main/java/org/gradle/model/internal/core/ManagedSetModelProjection.java\n@@ -44,7 +44,7 @@ public class ManagedSetModelProjection<M> extends TypeCompatibilityModelProjecti\n             @Override\n             public M getInstance() {\n                 Class<M> clazz = getType().getConcreteClass(); // safe because we know schema must be of a concrete type\n-                Object view = Proxy.newProxyInstance(clazz.getClassLoader(), new Class[] {clazz, ManagedInstance.class}, new ManagedSetViewInvocationHandler());\n+                Object view = Proxy.newProxyInstance(clazz.getClassLoader(), new Class<?>[] {clazz, ManagedInstance.class}, new ManagedSetViewInvocationHandler());\n                 return Cast.uncheckedCast(view);\n             }\n \n",
    "summaries": {
      "en": "Corrected generic type conversion error",
      "zh": "更正泛型类型转换错误"
    }
  },
  {
    "type": "feat",
    "subtype": "E2",
    "change": "diff --git a/core/src/main/java/com/google/bitcoin/discovery/DnsDiscovery.java b/core/src/main/java/com/google/bitcoin/discovery/DnsDiscovery.java\nindex f9e33a2d..56636ad1 100644\n--- a/core/src/main/java/com/google/bitcoin/discovery/DnsDiscovery.java\n+++ b/core/src/main/java/com/google/bitcoin/discovery/DnsDiscovery.java\n@@ -67,6 +67,9 @@ public class DnsDiscovery implements PeerDiscovery {\n     }\n \n     public InetSocketAddress[] getPeers(long timeoutValue, TimeUnit timeoutUnit) throws PeerDiscoveryException {\n+        if (hostNames == null)\n+            throw new PeerDiscoveryException(\"Unable to find any peers via DNS\");\n+\n         // Java doesn't have an async DNS API so we have to do all lookups in a thread pool, as sometimes seeds go\n         // hard down and it takes ages to give up and move on.\n         ExecutorService threadPool = Executors.newFixedThreadPool(hostNames.length);\n",
    "summaries": {
      "en": "Fix empty hostname in DnsDiscovery (some NPs have this issue)",
      "zh": "处理DnsDiscovery中的空主机名（一些NP有这个问题）"
    }
  },
  {
    "type": "refactor",
    "subtype": "R7",
    "change": "diff --git a/common/buildcraft/api/recipes/AssemblyRecipe.java b/common/buildcraft/api/recipes/AssemblyRecipe.java\nindex a384f7125..573db2827 100644\n--- a/common/buildcraft/api/recipes/AssemblyRecipe.java\n+++ b/common/buildcraft/api/recipes/AssemblyRecipe.java\n@@ -1,8 +1,6 @@\n package buildcraft.api.recipes;\n \n import java.util.LinkedList;\n-\n-import buildcraft.core.inventory.StackHelper;\n import net.minecraft.item.ItemStack;\n \n public class AssemblyRecipe {\n",
    "summaries": {
      "en": "Remove unused import statements",
      "zh": "删除未使用的导入语句"
    }
  },
  {
    "type": "style",
    "subtype": "S2",
    "change": "diff --git a/subprojects/core/src/main/groovy/org/gradle/internal/filewatch/FileWatchInputs.java b/subprojects/core/src/main/groovy/org/gradle/internal/filewatch/FileWatchInputs.java\nindex 6d491ae..2073210 100644\n--- a/subprojects/core/src/main/groovy/org/gradle/internal/filewatch/FileWatchInputs.java\n+++ b/subprojects/core/src/main/groovy/org/gradle/internal/filewatch/FileWatchInputs.java\n@@ -35,7 +35,9 @@ public class FileWatchInputs {\n         return directories;\n     }\n \n-    public List<File> getFiles() { return files; }\n+    public List<File> getFiles() {\n+        return files;\n+    }\n \n     public static Builder newBuilder() {\n         return new Builder();\n",
    "summaries": {
      "en": "Fix code layout",
      "zh": "修复代码布局"
    }
  },
  {
    "type": "refactor",
    "subtype": "R5",
    "change": "diff --git a/python/educational/interactive-learning/src/com/jetbrains/edu/learning/courseGeneration/StudyProjectGenerator.java b/python/educational/interactive-learning/src/com/jetbrains/edu/learning/courseGeneration/StudyProjectGenerator.java\nindex e3d6b9f..82eb8ea 100644\n--- a/python/educational/interactive-learning/src/com/jetbrains/edu/learning/courseGeneration/StudyProjectGenerator.java\n+++ b/python/educational/interactive-learning/src/com/jetbrains/edu/learning/courseGeneration/StudyProjectGenerator.java\n@@ -47,7 +47,7 @@ public class StudyProjectGenerator {\n   private static final String CACHE_NAME = \"courseNames.txt\";\n   private List<CourseInfo> myCourses = new ArrayList<CourseInfo>();\n   private CourseInfo mySelectedCourseInfo;\n-  private static final Pattern CACHE_PATTERN = Pattern.compile(\"name=(.*) description=(.*) folder=(.*) (instructor=(.*))+\");\n+  private static final Pattern CACHE_PATTERN = Pattern.compile(\"name=(.*) description=(.*) folder=(.*) (instructor=(.*))*\");\n   private static final String COURSE_META_FILE = \"course.json\";\n   private static final String COURSE_NAME_ATTRIBUTE = \"name\";\n   private static final String COURSE_DESCRIPTION = \"description\";\n",
    "summaries": {
      "en": "Fix course cache mode",
      "zh": "修复课程缓存模式"
    }
  },
  {
    "type": "style",
    "subtype": "S3",
    "change": "diff --git a/src/main/java/com/github/pedrovgs/binarytree/BinaryNode.java b/src/main/java/com/github/pedrovgs/binarytree/BinaryNode.java\nindex 223a9a7..0db25d2 100644\n--- a/src/main/java/com/github/pedrovgs/binarytree/BinaryNode.java\n+++ b/src/main/java/com/github/pedrovgs/binarytree/BinaryNode.java\n@@ -83,8 +83,6 @@ public class BinaryNode<T> {\n   }\n \n   @Override public String toString() {\n-    return \"BinaryNode{\" +\n-        \"data=\" + data +\n-        '}';\n+    return \"BinaryNode{\" + \"data=\" + data + '}';\n   }\n }\n",
    "summaries": {
      "en": "Deleted getClass method. Deleted unnecessary line breaks and indentation",
      "zh": "删除了getClass方法. 删除了不必要的换行和缩进"
    }
  },
  {
    "type": "refactor",
    "subtype": "R10",
    "change": "diff --git a/processing/src/main/java/io/druid/query/Result.java b/processing/src/main/java/io/druid/query/Result.java\nindex c162562..a948e01 100644\n--- a/processing/src/main/java/io/druid/query/Result.java\n+++ b/processing/src/main/java/io/druid/query/Result.java\n@@ -28,7 +28,6 @@ import org.joda.time.DateTime;\n public class Result<T> implements Comparable<Result<T>>\n {\n   public static String MISSING_SEGMENTS_KEY = \"missingSegments\";\n-  public static String MISSING_INTERVALS_KEY = \"missingIntervals\";\n \n   private final DateTime timestamp;\n   private final T value;\n",
    "summaries": {
      "en": "Delete unnecessary constants",
      "zh": "删除不必要的常量"
    }
  },
  {
    "type": "fix",
    "subtype": "I9",
    "change": "diff --git a/server/sonar-server/src/main/java/org/sonar/server/util/cache/DiskCache.java b/server/sonar-server/src/main/java/org/sonar/server/util/cache/DiskCache.java\nindex 9bc8e0b8ce..34056e8deb 100644\n--- a/server/sonar-server/src/main/java/org/sonar/server/util/cache/DiskCache.java\n+++ b/server/sonar-server/src/main/java/org/sonar/server/util/cache/DiskCache.java\n@@ -25,12 +25,7 @@ import org.sonar.api.utils.System2;\n import org.sonar.server.util.CloseableIterator;\n import org.sonar.server.util.ObjectInputStreamIterator;\n \n-import java.io.File;\n-import java.io.FileOutputStream;\n-import java.io.IOException;\n-import java.io.ObjectOutputStream;\n-import java.io.OutputStream;\n-import java.io.Serializable;\n+import java.io.*;\n \n /**\n  * Serialize and deserialize objects on disk. No search capabilities, only traversal (full scan).\n@@ -90,6 +85,7 @@ public class DiskCache<O extends Serializable> {\n     public DiskAppender append(O object) {\n       try {\n         output.writeObject(object);\n+        output.reset();\n         return this;\n       } catch (IOException e) {\n         throw new IllegalStateException(\"Fail to write into file \" + file, e);\n",
    "summaries": {
      "en": "Reset output stream",
      "zh": "重置输出流"
    }
  },
  {
    "type": "fix",
    "subtype": "Ix",
    "change": "diff --git a/src/main/java/org/bukkit/event/player/PlayerPortalEvent.java b/src/main/java/org/bukkit/event/player/PlayerPortalEvent.java\nindex 83efaa16..a243b538 100644\n--- a/src/main/java/org/bukkit/event/player/PlayerPortalEvent.java\n+++ b/src/main/java/org/bukkit/event/player/PlayerPortalEvent.java\n@@ -17,9 +17,9 @@ public class PlayerPortalEvent extends PlayerTeleportEvent {\n         super(player, from, to);\n         this.travelAgent = pta;\n     }\n-    \n+\n     public PlayerPortalEvent(Player player, Location from, Location to, TravelAgent pta, TeleportCause cause) {\n-        super(Type.PLAYER_PORTAL, player, from, to, cause);\n+        super(player, from, to, cause);\n         this.travelAgent = pta;\n     }\n \n",
    "summaries": {
      "en": "Fixed the PlayerPortalEvent constructor",
      "zh": "修复了PlayerPortalEvent构造函数"
    }
  },
  {
    "type": "docs",
    "subtype": "D3",
    "change": "diff --git a/graylog2-server/src/main/java/org/graylog2/indexer/ranges/CreateNewSingleIndexRangeJob.java b/graylog2-server/src/main/java/org/graylog2/indexer/ranges/CreateNewSingleIndexRangeJob.java\nindex 9a3688b..128f9f2 100644\n--- a/graylog2-server/src/main/java/org/graylog2/indexer/ranges/CreateNewSingleIndexRangeJob.java\n+++ b/graylog2-server/src/main/java/org/graylog2/indexer/ranges/CreateNewSingleIndexRangeJob.java\n@@ -1,3 +1,19 @@\n+/**\n+ * This file is part of Graylog2.\n+ *\n+ * Graylog2 is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Graylog2 is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Graylog2.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n package org.graylog2.indexer.ranges;\n \n import com.google.inject.assistedinject.Assisted;\n",
    "summaries": {
      "en": "Add license for new file",
      "zh": "为新文件添加许可证"
    }
  },
  {
    "type": "feat",
    "subtype": "E2",
    "change": "diff --git a/platform-impl/src/com/intellij/openapi/ui/impl/DialogWrapperPeerImpl.java b/platform-impl/src/com/intellij/openapi/ui/impl/DialogWrapperPeerImpl.java\nindex c7844a1..efe5aa0 100644\n--- a/platform-impl/src/com/intellij/openapi/ui/impl/DialogWrapperPeerImpl.java\n+++ b/platform-impl/src/com/intellij/openapi/ui/impl/DialogWrapperPeerImpl.java\n@@ -562,6 +562,8 @@ public class DialogWrapperPeerImpl extends DialogWrapperPeer {\n     }\n \n     private void disposeFocusTrackbackIfNoChildWindowFocused(@Nullable IdeFocusManager focusManager) {\n+      if (myFocusTrackback == null) return;\n+\n       final DialogWrapper wrapper = myDialogWrapper.get();\n       if (wrapper == null || !wrapper.isShowing()) {\n         myFocusTrackback.dispose();\n",
    "summaries": {
      "en": "Fix NPE when window loses focus",
      "zh": "修复窗口失去焦点时的NPE"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/services/core/java/com/android/server/accounts/AccountManagerService.java b/services/core/java/com/android/server/accounts/AccountManagerService.java\nindex d0006aa..143015f 100644\n--- a/services/core/java/com/android/server/accounts/AccountManagerService.java\n+++ b/services/core/java/com/android/server/accounts/AccountManagerService.java\n@@ -4342,6 +4342,7 @@ public class AccountManagerService\n             String opPackageName) {\n         List<String> permissionsToCheck = new ArrayList<String>(2);\n         permissionsToCheck.add(Manifest.permission.GET_ACCOUNTS_PRIVILEGED);\n+        long id = Binder.clearCallingIdentity();\n         try {\n             ApplicationInfo appInfo = mPackageManager.getApplicationInfo(\n                     opPackageName, 0 /* flags */);\n@@ -4363,6 +4364,8 @@ public class AccountManagerService\n         } catch (NameNotFoundException e) {\n             // No application associated with the specified package.\n             Log.w(TAG, \"No application associated with package: \" + opPackageName);\n+        } finally {\n+            Binder.restoreCallingIdentity(id);\n         }\n         boolean isPermitted = isPermitted(opPackageName, callingUid, permissionsToCheck);\n         return getTypesForCaller(callingUid, userId, isPermitted);\n",
    "summaries": {
      "en": "Added Binder.clearCallingIdentity() and Binder.restoreCallingIdentity(id)",
      "zh": "添加 Binder.clearCallingIdentity()和 Binder.restoreCallingIdentity(id)"
    }
  },
  {
    "type": "feat",
    "subtype": "E2",
    "change": "diff --git a/src/main/org/codehaus/groovy/ast/ClassNode.java b/src/main/org/codehaus/groovy/ast/ClassNode.java\nindex c536e4d5c..fa472e9e3 100644\n--- a/src/main/org/codehaus/groovy/ast/ClassNode.java\n+++ b/src/main/org/codehaus/groovy/ast/ClassNode.java\n@@ -677,6 +677,7 @@ public class ClassNode extends AnnotatedNode implements Opcodes {\n \n     public boolean equals(Object o) {\n         if (redirect!=null) return redirect().equals(o);\n+        if (!(o instanceof ClassNode)) return false;\n         ClassNode cn = (ClassNode) o;\n         return (cn.getName().equals(getName()));\n     }\n",
    "summaries": {
      "en": "Add object type judgment",
      "zh": "添加对象类型判断"
    }
  },
  {
    "type": "fix",
    "subtype": "I2",
    "change": "diff --git a/cas-server-support-ldap-core/src/main/java/org/apereo/cas/authentication/support/DefaultAccountStateHandler.java b/cas-server-support-ldap-core/src/main/java/org/apereo/cas/authentication/support/DefaultAccountStateHandler.java\nindex 0dc674e0447..25b05e9d28f 100644\n--- a/cas-server-support-ldap-core/src/main/java/org/apereo/cas/authentication/support/DefaultAccountStateHandler.java\n+++ b/cas-server-support-ldap-core/src/main/java/org/apereo/cas/authentication/support/DefaultAccountStateHandler.java\n@@ -66,7 +66,7 @@ public class DefaultAccountStateHandler implements AccountStateHandler {\n         this.errorMap.put(PasswordExpirationAccountState.Error.PASSWORD_EXPIRED, new CredentialExpiredException());\n         this.errorMap.put(PasswordPolicyControl.Error.ACCOUNT_LOCKED, new AccountLockedException());\n         this.errorMap.put(PasswordPolicyControl.Error.PASSWORD_EXPIRED, new CredentialExpiredException());\n-        this.errorMap.put(PasswordPolicyControl.Error.CHANGE_AFTER_RESET, new CredentialExpiredException());\n+        this.errorMap.put(PasswordPolicyControl.Error.CHANGE_AFTER_RESET, new AccountPasswordMustChangeException());\n     }\n \n     @Override\n",
    "summaries": {
      "en": "Fix incorrect mapping of password policy changes",
      "zh": "修改密码策略错误映射"
    }
  },
  {
    "type": "fix",
    "subtype": "I13",
    "change": "diff --git a/core/src/processing/opengl/PSurfaceJOGL.java b/core/src/processing/opengl/PSurfaceJOGL.java\nindex 1d99f2f..7cc239c 100644\n--- a/core/src/processing/opengl/PSurfaceJOGL.java\n+++ b/core/src/processing/opengl/PSurfaceJOGL.java\n@@ -250,7 +250,7 @@ public class PSurfaceJOGL implements PSurface {\n     if (screenRect.width == sketchWidth &&\n         screenRect.height == sketchHeight) {\n       fullScreen = true;\n-//        sketch.fullScreen = true;  // hmm\n+      sketch.fullScreen();\n     }\n \n     if (fullScreen || spanDisplays) {\n",
    "summaries": {
      "en": "Set full screen on the sketch",
      "zh": "在草图上设置全屏"
    }
  },
  {
    "type": "build",
    "subtype": "B1",
    "change": "diff --git a/pom.xml b/pom.xml\nindex 330f26a..2df976a 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -44,6 +44,7 @@\n         <module>shenyu-dist</module>\n         <module>shenyu-alert</module>\n         <module>shenyu-sdk</module>\n+        <module>shenyu-discovery</module>\n     </modules>\n \n     <licenses>",
    "summaries": {
      "en": "Add shenyu-discovery module",
      "zh": "添加shenyu-discovery模块。\""
    }
  },
  {
    "type": "refactor",
    "subtype": "R3",
    "change": "diff --git a/spring-core/src/main/java/org/springframework/core/annotation/SynthesizedAnnotation.java b/spring-core/src/main/java/org/springframework/core/annotation/SynthesizedAnnotation.java\nindex b2f082e..028c066 100644\n--- a/spring-core/src/main/java/org/springframework/core/annotation/SynthesizedAnnotation.java\n+++ b/spring-core/src/main/java/org/springframework/core/annotation/SynthesizedAnnotation.java\n@@ -24,5 +24,5 @@ package org.springframework.core.annotation;\n  * @author Sam Brannen\n  * @since 4.2\n  */\n-interface SynthesizedAnnotation {\n+public interface SynthesizedAnnotation {\n }\n",
    "summaries": {
      "en": "Change the access modifier of SynthesizedAnnotation class to public",
      "zh": "更改类SynthesizedAnnotation的访问修饰符为public"
    }
  },
  {
    "type": "fix",
    "subtype": "I3",
    "change": "diff --git a/presto-redis/src/test/java/com/facebook/presto/redis/util/RedisLoader.java b/presto-redis/src/test/java/com/facebook/presto/redis/util/RedisLoader.java\nindex 6fb0c85..d3c71f4 100644\n--- a/presto-redis/src/test/java/com/facebook/presto/redis/util/RedisLoader.java\n+++ b/presto-redis/src/test/java/com/facebook/presto/redis/util/RedisLoader.java\n@@ -19,6 +19,7 @@ import com.facebook.presto.client.QueryResults;\n import com.facebook.presto.server.testing.TestingPrestoServer;\n import com.facebook.presto.spi.type.TimeZoneKey;\n import com.facebook.presto.spi.type.Type;\n+import com.facebook.presto.spi.type.Varchars;\n import com.facebook.presto.tests.AbstractTestingPrestoClient;\n import com.facebook.presto.tests.ResultsSession;\n import com.google.common.collect.ImmutableMap;\n@@ -43,7 +44,6 @@ import static com.facebook.presto.spi.type.TimeType.TIME;\n import static com.facebook.presto.spi.type.TimeWithTimeZoneType.TIME_WITH_TIME_ZONE;\n import static com.facebook.presto.spi.type.TimestampType.TIMESTAMP;\n import static com.facebook.presto.spi.type.TimestampWithTimeZoneType.TIMESTAMP_WITH_TIME_ZONE;\n-import static com.facebook.presto.spi.type.VarcharType.VARCHAR;\n import static com.facebook.presto.util.DateTimeUtils.parseTime;\n import static com.facebook.presto.util.DateTimeUtils.parseTimestampWithTimeZone;\n import static com.facebook.presto.util.DateTimeUtils.parseTimestampWithoutTimeZone;\n@@ -149,7 +149,7 @@ public class RedisLoader\n                 return null;\n             }\n \n-            if (BOOLEAN.equals(type) || VARCHAR.equals(type)) {\n+            if (BOOLEAN.equals(type) || Varchars.isVarcharType(type)) {\n                 return value;\n             }\n             if (BIGINT.equals(type)) {\n",
    "summaries": {
      "en": "Change the check for VarcharType.VARCHAR to Varchars.isVarcharType()",
      "zh": "将VarcharType.VARCHAR的检查改为Varchars.isVarcharType()"
    }
  },
  {
    "type": "refactor",
    "subtype": "R9",
    "change": "diff --git a/library/src/com/handmark/pulltorefresh/library/PullToRefreshBase.java b/library/src/com/handmark/pulltorefresh/library/PullToRefreshBase.java\nindex c06f59a..ab1dd21 100644\n--- a/library/src/com/handmark/pulltorefresh/library/PullToRefreshBase.java\n+++ b/library/src/com/handmark/pulltorefresh/library/PullToRefreshBase.java\n@@ -180,10 +180,8 @@ public abstract class PullToRefreshBase<T extends View> extends LinearLayout imp\n \n \t@Override\n \tpublic final boolean isPullToRefreshOverScrollEnabled() {\n-\t\tif (VERSION.SDK_INT >= VERSION_CODES.GINGERBREAD) {\n-\t\t\treturn mOverScrollEnabled && OverscrollHelper.isAndroidOverScrollEnabled(mRefreshableView);\n-\t\t}\n-\t\treturn false;\n+\t\treturn VERSION.SDK_INT >= VERSION_CODES.GINGERBREAD && mOverScrollEnabled\n+\t\t\t\t&& OverscrollHelper.isAndroidOverScrollEnabled(mRefreshableView);\n \t}\n \n \t@Override\n",
    "summaries": {
      "en": "Simplify the implementation of isPullToRefreshOverScrollEnabled()",
      "zh": "简化isPullToRefreshOverScrollEnabled()的实现"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/source/org/jivesoftware/smackx/packet/VCard.java b/source/org/jivesoftware/smackx/packet/VCard.java\nindex a0584240..7c4234a6 100644\n--- a/source/org/jivesoftware/smackx/packet/VCard.java\n+++ b/source/org/jivesoftware/smackx/packet/VCard.java\n@@ -356,6 +356,26 @@ public class VCard extends IQ {\n     }\n \n     /**\n+     * Specify the bytes for the avatar to use as well as the mime type.\n+     *\n+     * @param bytes the bytes of the avatar.\n+     * @param mimeType the mime type of the avatar.\n+     */\n+    public void setAvatar(byte[] bytes, String mimeType) {\n+        if (bytes == null) {\n+            // Remove avatar (if any) from mappings\n+            otherUnescapableFields.remove(\"PHOTO\");\n+            return;\n+        }\n+\n+        // Otherwise, add to mappings.\n+        String encodedImage = StringUtils.encodeBase64(bytes);\n+        avatar = encodedImage;\n+\n+        setField(\"PHOTO\", \"<TYPE>\" + mimeType + \"</TYPE><BINVAL>\" + encodedImage + \"</BINVAL>\", true);\n+    }\n+\n+    /**\n      * Set the encoded avatar string. This is used by the provider.\n      *\n      * @param encodedAvatar the encoded avatar string.\n",
    "summaries": {
      "en": "Add method to set avatar",
      "zh": "添加设置头像的方法"
    }
  },
  {
    "type": "refactor",
    "subtype": "R6",
    "change": "diff --git a/src/main/java/com/alibaba/fastjson/parser/ParserConfig.java b/src/main/java/com/alibaba/fastjson/parser/ParserConfig.java\nindex 195d357..eff2b39 100644\n--- a/src/main/java/com/alibaba/fastjson/parser/ParserConfig.java\n+++ b/src/main/java/com/alibaba/fastjson/parser/ParserConfig.java\n@@ -416,6 +416,8 @@ public class ParserConfig {\n \r\n         try {\r\n             return ASMDeserializerFactory.getInstance().createJavaBeanDeserializer(this, clazz, type);\r\n+        } catch (NoSuchMethodException error) {\r\n+            return new JavaBeanDeserializer(this, clazz, type);\r\n         } catch (ASMException asmError) {\r\n             return new JavaBeanDeserializer(this, clazz, type);\r\n         } catch (Exception e) {\r\n@@ -445,8 +447,7 @@ public class ParserConfig {\n         try {\r\n             return ASMDeserializerFactory.getInstance().createFieldDeserializer(mapping, clazz, fieldInfo);\r\n         } catch (Throwable e) {\r\n-            // TODO Auto-generated catch block\r\n-            e.printStackTrace();\r\n+            // skip\r\n         }\r\n \r\n         return createFieldDeserializerWithoutASM(mapping, clazz, fieldInfo);\r\n",
    "summaries": {
      "en": "Capture NoSuchMethodException and return JavaBeanDeserializer instance",
      "zh": "捕获NoSuchMethodException并返回JavaBeanDeserializer实例"
    }
  },
  {
    "type": "refactor",
    "subtype": "R10",
    "change": "diff --git a/h2o-core/src/main/java/water/JettyHTTPD.java b/h2o-core/src/main/java/water/JettyHTTPD.java\nindex e9880d538..4c62ef42f 100644\n--- a/h2o-core/src/main/java/water/JettyHTTPD.java\n+++ b/h2o-core/src/main/java/water/JettyHTTPD.java\n@@ -168,12 +168,12 @@ public class JettyHTTPD {\n   protected void startHttp() throws Exception {\n     _server = new Server();\n \n-    QueuedThreadPool p = new QueuedThreadPool();\n-    p.setName(\"jetty-h2o\");\n-    p.setMinThreads(3);\n-    p.setMaxThreads(50);\n-    p.setMaxIdleTimeMs(3000);\n-    _server.setThreadPool(p);\n+//    QueuedThreadPool p = new QueuedThreadPool();\n+//    p.setName(\"jetty-h2o\");\n+//    p.setMinThreads(3);\n+//    p.setMaxThreads(50);\n+//    p.setMaxIdleTimeMs(3000);\n+//    _server.setThreadPool(p);\n \n     Connector connector=new SocketConnector();\n     if (_ip != null) {\n",
    "summaries": {
      "en": "Removed the code for creating a thread pool and setting the server thread pool",
      "zh": "注释掉了创建线程池和设置服务器线程池的相关代码"
    }
  },
  {
    "type": "refactor",
    "subtype": "R4",
    "change": "diff --git a/python/src/com/jetbrains/python/packaging/ui/PyPackageManagementService.java b/python/src/com/jetbrains/python/packaging/ui/PyPackageManagementService.java\nindex 221468c..59ed8a7 100644\n--- a/python/src/com/jetbrains/python/packaging/ui/PyPackageManagementService.java\n+++ b/python/src/com/jetbrains/python/packaging/ui/PyPackageManagementService.java\n@@ -328,7 +328,7 @@ public class PyPackageManagementService extends PackageManagementService {\n       final String cause = stdoutCause != null ? stdoutCause : stderrCause;\n       final String message =  cause != null ? cause : ee.getMessage();\n       final String command = ee.getCommand() + \" \" + StringUtil.join(ee.getArgs(), \" \");\n-      return new ErrorDescription(message, command, ee.getStdout(), findErrorSolution(ee, cause, sdk));\n+      return new ErrorDescription(message, command, ee.getStdout() + \"\\n\" + ee.getStderr(), findErrorSolution(ee, cause, sdk));\n     }\n     else {\n       return ErrorDescription.fromMessage(e.getMessage());\n",
    "summaries": {
      "en": "Merge standard error and standard output in error message",
      "zh": "将错误信息中的标准错误和标准输出合并"
    }
  },
  {
    "type": "fix",
    "subtype": "I7",
    "change": "diff --git a/core/java/android/widget/Scroller.java b/core/java/android/widget/Scroller.java\nindex d2e6688..79ab448 100644\n--- a/core/java/android/widget/Scroller.java\n+++ b/core/java/android/widget/Scroller.java\n@@ -92,7 +92,7 @@ public class Scroller  {\n      *         friction.\n      */\n     public final void setFriction(float friction) {\n-        computeDeceleration(friction);\n+        mDeceleration = computeDeceleration(friction);\n     }\n     \n     private float computeDeceleration(float friction) {\n",
    "summaries": {
      "en": "Assign value to mDeceleration",
      "zh": "对mDeceleration进行赋值"
    }
  },
  {
    "type": "refactor",
    "subtype": "R5",
    "change": "diff --git a/java/src/processing/mode/java/JavaBuild.java b/java/src/processing/mode/java/JavaBuild.java\nindex 7a6f9ae..d7b1969 100644\n--- a/java/src/processing/mode/java/JavaBuild.java\n+++ b/java/src/processing/mode/java/JavaBuild.java\n@@ -1430,9 +1430,9 @@ public class JavaBuild {\n         exportClassPath.append(jarList[i]);\n       }\n     } else {\n+      exportClassPath.append(\"$APPDIR\");\n       for (int i = 0; i < jarList.length; i++) {\n-        if (i != 0) exportClassPath.append(\":\");\n-        exportClassPath.append(\"$APPDIR/lib/\" + jarList[i]);\n+        exportClassPath.append(\":$APPDIR/lib/\" + jarList[i]);\n       }\n     }\n \n",
    "summaries": {
      "en": "Modified the assignment of exportClassPath variable in JavaBuild class",
      "zh": "修改 JavaBuild 类中的 exportClassPath 变量赋值"
    }
  },
  {
    "type": "refactor",
    "subtype": "R10",
    "change": "diff --git a/sonar-batch/src/main/java/org/sonar/batch/bootstrap/ProjectTaskContainer.java b/sonar-batch/src/main/java/org/sonar/batch/bootstrap/ProjectTaskContainer.java\nindex 22e3b3c603..c60cb97570 100644\n--- a/sonar-batch/src/main/java/org/sonar/batch/bootstrap/ProjectTaskContainer.java\n+++ b/sonar-batch/src/main/java/org/sonar/batch/bootstrap/ProjectTaskContainer.java\n@@ -67,7 +67,6 @@ public class ProjectTaskContainer extends Container {\n \n   private void registerCoreComponentsRequiringProject() {\n     container.addSingleton(ProjectTree.class);\n-    container.addSingleton(DefaultIndex.class);\n     container.addSingleton(DefaultFileLinesContextFactory.class);\n     container.addSingleton(ProjectLock.class);\n \n",
    "summaries": {
      "en": "Delete registration of DefaultIndex class",
      "zh": "删除 DefaultIndex 类的注册"
    }
  },
  {
    "type": "fix",
    "subtype": "I3",
    "change": "diff --git a/core/java/android/os/Bundle.java b/core/java/android/os/Bundle.java\nindex c5c5372..133debb 100644\n--- a/core/java/android/os/Bundle.java\n+++ b/core/java/android/os/Bundle.java\n@@ -211,8 +211,9 @@ public final class Bundle extends BaseBundle implements Cloneable, Parcelable {\n                     } else if (obj instanceof Parcelable[]) {\n                         Parcelable[] array = (Parcelable[]) obj;\n                         for (int n = array.length - 1; n >= 0; n--) {\n-                            if ((array[n].describeContents()\n-                                    & Parcelable.CONTENTS_FILE_DESCRIPTOR) != 0) {\n+                            Parcelable p = array[n];\n+                            if (p != null && ((p.describeContents()\n+                                    & Parcelable.CONTENTS_FILE_DESCRIPTOR) != 0)) {\n                                 fdFound = true;\n                                 break;\n                             }\n",
    "summaries": {
      "en": "Added null check for array[n]",
      "zh": "增加对array[n]的空值检查"
    }
  },
  {
    "type": "docs",
    "subtype": "D2",
    "change": "diff --git a/hazelcast-client/src/main/java/com/hazelcast/client/connection/ClientConnectionManager.java b/hazelcast-client/src/main/java/com/hazelcast/client/connection/ClientConnectionManager.java\nindex 7af45fb1ec..4e7927b137 100644\n--- a/hazelcast-client/src/main/java/com/hazelcast/client/connection/ClientConnectionManager.java\n+++ b/hazelcast-client/src/main/java/com/hazelcast/client/connection/ClientConnectionManager.java\n@@ -23,6 +23,7 @@ import java.io.IOException;\n /**\n  * @ali 5/27/13\n  */\n+//TODO recursive connection should be handled\n public interface ClientConnectionManager {\n \n     public void shutdown();\n",
    "summaries": {
      "en": "Add TODO about client recursive connections",
      "zh": "添加关于客户端递归连接的TODO"
    }
  },
  {
    "type": "build",
    "subtype": "B1",
    "change": "diff --git a/Build.gradle b/Build.gradle\nindex 7e640d3..4644dd5 100644\n--- a/Build.gradle\n+++ b/Build.gradle\n@@ -4,9 +4,9 @@ apply plugin: 'eclipse'\n apply plugin: 'org.springframework.boot'\n \n dependencies {\n-    compile('org.springframework.boot:spring-boot-starter-data-jpa')\n-    compile('org.springframework.boot:spring-boot-starter-web')\n-    runtime('com.h2database:h2')\n+    compile('org.springframework.boot:spring-boot-starter-data-jpa:2.5.2')\n+    compile('org.springframework.boot:spring-boot-starter-web:2.5.2')\n+    runtime('com.h2database:h2:1.4.200')\n     testCompile('org.springframework.boot:spring-boot-starter-test')\n }\n \n@@ -14,6 +14,9 @@ bootJar {\n }\n \n bootRun {\n+    systemProperties = System.properties\n+    systemProperties['spring.profiles.active'] = 'dev'\n+    jvmArgs('-Xdebug','-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005')\n     main = project.findProperty('mainClassName')\n }\n \n@@ -23,7 +26,7 @@ springBoot {\n }\n \n jar {\n-    manifest {\n+    manifest {\n         attributes 'Implementation-Title': 'Grails', 'Implementation-Version': version\n     }\n }\n@@ -31,4 +34,4 @@ jar {\n \n task wrapper(type: Wrapper) {\n     gradleVersion = '7.0'\n-}\n\\ No newline at end of file\n+}\n",
    "summaries": {
      "en": "Started the project in debug mode and added versions to some dependencies",
      "zh": "使用调试模式启动项目并未部分依赖添加版本"
    }
  },
  {
    "type": "refactor",
    "subtype": "R3",
    "change": "diff --git a/bundles/binding/org.openhab.binding.homematic/src/main/java/org/openhab/binding/homematic/internal/communicator/client/HomegearClient.java b/bundles/binding/org.openhab.binding.homematic/src/main/java/org/openhab/binding/homematic/internal/communicator/client/HomegearClient.java\nindex 4fc5f47..8ab97ff 100644\n--- a/bundles/binding/org.openhab.binding.homematic/src/main/java/org/openhab/binding/homematic/internal/communicator/client/HomegearClient.java\n+++ b/bundles/binding/org.openhab.binding.homematic/src/main/java/org/openhab/binding/homematic/internal/communicator/client/HomegearClient.java\n@@ -253,7 +253,7 @@ public class HomegearClient extends BaseHomematicClient {\n \t\tHmVariable var = new HmVariable();\n \t\tvar.setName(name);\n \t\tvar.setWriteable(true);\n-\t\tvar.setValue(guessType(value));\n+\t\tvar.setValueType(guessType(value));\n \t\tvar.setValue(value);\n \t\treturn var;\n \t}\n",
    "summaries": {
      "en": "Fix HmVariable variable setting error",
      "zh": "修复 HmVariable 变量设置错误"
    }
  },
  {
    "type": "refactor",
    "subtype": "R10",
    "change": "diff --git a/hazelcast/src/main/java/com/hazelcast/spi/Operation.java b/hazelcast/src/main/java/com/hazelcast/spi/Operation.java\nindex f5854c5f92..0a7543c460 100644\n--- a/hazelcast/src/main/java/com/hazelcast/spi/Operation.java\n+++ b/hazelcast/src/main/java/com/hazelcast/spi/Operation.java\n@@ -47,9 +47,6 @@ public abstract class Operation implements DataSerializable {\n     private long invocationTime = -1;\n     private long callTimeout = Long.MAX_VALUE;\n     private String callerUuid;\n-    // not used anymore, keeping just for serialization compatibility\n-    @Deprecated\n-    private boolean async = false;\n     private String executorName;\n \n     // injected\n@@ -273,7 +270,6 @@ public abstract class Operation implements DataSerializable {\n         out.writeLong(invocationTime);\n         out.writeLong(callTimeout);\n         out.writeUTF(callerUuid);\n-        out.writeBoolean(async);  // not used anymore\n         out.writeUTF(executorName);\n         writeInternal(out);\n     }\n@@ -287,7 +283,6 @@ public abstract class Operation implements DataSerializable {\n         invocationTime = in.readLong();\n         callTimeout = in.readLong();\n         callerUuid = in.readUTF();\n-        async = in.readBoolean();  // not used anymore\n         executorName = in.readUTF();\n         readInternal(in);\n     }\n",
    "summaries": {
      "en": "Delete unused async fields",
      "zh": "删除未使用的async字段"
    }
  },
  {
    "type": "refactor",
    "subtype": "R7",
    "change": "diff --git a/WordPress/src/main/java/org/wordpress/android/ui/accounts/login/WPComMagicLinkFragment.java b/WordPress/src/main/java/org/wordpress/android/ui/accounts/login/WPComMagicLinkFragment.java\nindex 936d1a7bf..45ddda039 100644\n--- a/WordPress/src/main/java/org/wordpress/android/ui/accounts/login/WPComMagicLinkFragment.java\n+++ b/WordPress/src/main/java/org/wordpress/android/ui/accounts/login/WPComMagicLinkFragment.java\n@@ -1,9 +1,9 @@\n package org.wordpress.android.ui.accounts.login;\n \n+import android.app.Fragment;\n import android.content.Context;\n import android.content.Intent;\n import android.os.Bundle;\n-import android.support.v4.app.Fragment;\n import android.view.LayoutInflater;\n import android.view.View;\n import android.view.ViewGroup;\n",
    "summaries": {
      "en": "Replace import section fragment references",
      "zh": "替换import部分Fragment引用"
    }
  },
  {
    "type": "test",
    "subtype": "T1",
    "change": "diff --git a/h2o-core/src/test/java/water/fvec/WordCountBigTest.java b/h2o-core/src/test/java/water/fvec/WordCountBigTest.java\nindex cc15bb5b8..c23cf28ed 100644\n--- a/h2o-core/src/test/java/water/fvec/WordCountBigTest.java\n+++ b/h2o-core/src/test/java/water/fvec/WordCountBigTest.java\n@@ -14,4 +14,8 @@ public class WordCountBigTest extends WordCountTest {\n     if( file==null ) throw new FileNotFoundException(best);\n     doWordCount(file);\n   }\n+\n+  @Test public void testWordCount() throws IOException {\n+    // Do nothing; in particular, don't run inherited testWordCount again.\n+  }\n }\n",
    "summaries": {
      "en": "Added test method",
      "zh": "添加测试方法"
    }
  },
  {
    "type": "fix",
    "subtype": "Ix",
    "change": "diff --git a/server/sonar-search/src/main/java/org/sonar/search/EsSettings.java b/server/sonar-search/src/main/java/org/sonar/search/EsSettings.java\nindex 10a2597135..5736ecd771 100644\n--- a/server/sonar-search/src/main/java/org/sonar/search/EsSettings.java\n+++ b/server/sonar-search/src/main/java/org/sonar/search/EsSettings.java\n@@ -134,6 +134,7 @@ public class EsSettings implements EsSettingsMBean {\n       LOGGER.warn(\"Elasticsearch HTTP connector is enabled on port {}. MUST NOT BE USED FOR PRODUCTION\", httpPort);\n       // see https://github.com/lmenezes/elasticsearch-kopf/issues/195\n       builder.put(\"http.cors.enabled\", true);\n+      builder.put(\"http.cors.allow-origin\", \"*\");\n       builder.put(\"http.enabled\", true);\n       builder.put(\"http.host\", host.getHostAddress());\n       builder.put(\"http.port\", httpPort);\n@@ -169,7 +170,6 @@ public class EsSettings implements EsSettingsMBean {\n     builder.put(IndexMetaData.SETTING_NUMBER_OF_REPLICAS, replicationFactor);\n     builder.put(\"cluster.name\", getClusterName());\n     builder.put(\"cluster.routing.allocation.awareness.attributes\", \"rack_id\");\n-    String nodeName = getNodeName();\n     builder.put(\"node.rack_id\", nodeName);\n     builder.put(\"node.name\", nodeName);\n     builder.put(\"node.data\", true);\n",
    "summaries": {
      "en": "Set HTTP cross-origin allowance",
      "zh": "设置HTTP跨域允许"
    }
  },
  {
    "type": "fix",
    "subtype": "I9",
    "change": "diff --git a/community/kernel/src/main/java/org/neo4j/kernel/impl/nioneo/store/MappedPersistenceWindow.java b/community/kernel/src/main/java/org/neo4j/kernel/impl/nioneo/store/MappedPersistenceWindow.java\nindex 7a3ed92..1f796f5 100644\n--- a/community/kernel/src/main/java/org/neo4j/kernel/impl/nioneo/store/MappedPersistenceWindow.java\n+++ b/community/kernel/src/main/java/org/neo4j/kernel/impl/nioneo/store/MappedPersistenceWindow.java\n@@ -134,7 +134,14 @@ class MappedPersistenceWindow extends LockableWindow\n     public Buffer getOffsettedBuffer( long id )\n     {\n         int offset = (int) (id - buffer.position()) * recordSize;\n-        buffer.setOffset( offset );\n-        return buffer;\n+        try\n+        {\n+            buffer.setOffset( offset );\n+            return buffer;\n+        } catch(IllegalArgumentException e)\n+        {\n+            throw new IllegalArgumentException( \"Unable to set offset. id:\" + id + \", position:\" + buffer.position()\n+                    + \", recordSize:\" + recordSize, e );\n+        }\n     }\n }\n\\ No newline at end of file\n",
    "summaries": {
      "en": "If the offset setting (buffer.setOffset()) fails, throw an IllegalArgumentException",
      "zh": "如果设置偏移量(buffer.setOffset())失败，则抛出IllegalArgumentException"
    }
  },
  {
    "type": "fix",
    "subtype": "I3",
    "change": "diff --git a/src/edu/stanford/nlp/parser/shiftreduce/ShiftReduceOptions.java b/src/edu/stanford/nlp/parser/shiftreduce/ShiftReduceOptions.java\nindex 13a24d6..bfa294a 100644\n--- a/src/edu/stanford/nlp/parser/shiftreduce/ShiftReduceOptions.java\n+++ b/src/edu/stanford/nlp/parser/shiftreduce/ShiftReduceOptions.java\n@@ -69,6 +69,12 @@ public class ShiftReduceOptions extends Options {\n     } else if (args[i].equalsIgnoreCase(\"-nosaveIntermediateModels\")) {\n       trainOptions().saveIntermediateModels = false;\n       i++;\n+    } else if (args[i].equalsIgnoreCase(\"-oracleShiftToBinary\")) {\n+      trainOptions().oracleShiftToBinary = true;\n+      i++;\n+    } else if (args[i].equalsIgnoreCase(\"-oracleBinaryToShift\")) {\n+      trainOptions().oracleBinaryToShift = true;\n+      i++;\n     } else if (args[i].equalsIgnoreCase(\"-recordBinarized\")) {\n       testOptions().recordBinarized = args[i + 1];\n       i += 2;\n",
    "summaries": {
      "en": "Add option parsing for new srparser options",
      "zh": "为新的srparser选项添加选项解析"
    }
  },
  {
    "type": "fix",
    "subtype": "I3",
    "change": "diff --git a/plugins/java-decompiler/engine/src/de/fernflower/modules/decompiler/deobfuscator/ExceptionDeobfuscator.java b/plugins/java-decompiler/engine/src/de/fernflower/modules/decompiler/deobfuscator/ExceptionDeobfuscator.java\nindex aae0c77..eaec600 100644\n--- a/plugins/java-decompiler/engine/src/de/fernflower/modules/decompiler/deobfuscator/ExceptionDeobfuscator.java\n+++ b/plugins/java-decompiler/engine/src/de/fernflower/modules/decompiler/deobfuscator/ExceptionDeobfuscator.java\n@@ -313,7 +313,7 @@ public class ExceptionDeobfuscator {\n \t\t\t}\n \n \t\t\tif(!setEntries.isEmpty()) {\n-\t\t\t\tif(setEntries.size() > 1 || ent.getValue().contains(first)) {\n+\t\t\t\tif(setEntries.size() > 1 /*|| ent.getValue().contains(first)*/) {\n \t\t\t\t\treturn true;\n \t\t\t\t}\n \t\t\t}\n",
    "summaries": {
      "en": "Change condition, comment out ent.getValue().contains(first)",
      "zh": "更改条件，注释掉ent.getValue().contains(first)"
    }
  },
  {
    "type": "refactor",
    "subtype": "R10",
    "change": "diff --git a/grails-core/src/main/groovy/org/codehaus/groovy/grails/plugins/AbstractGrailsPluginManager.java b/grails-core/src/main/groovy/org/codehaus/groovy/grails/plugins/AbstractGrailsPluginManager.java\nindex 2f27e3bced..a575e6b09e 100644\n--- a/grails-core/src/main/groovy/org/codehaus/groovy/grails/plugins/AbstractGrailsPluginManager.java\n+++ b/grails-core/src/main/groovy/org/codehaus/groovy/grails/plugins/AbstractGrailsPluginManager.java\n@@ -280,7 +280,6 @@ public abstract class AbstractGrailsPluginManager implements GrailsPluginManager\n \n     }\n \n-    @Override\n     public boolean isShutdown() {\n         return shutdown;\n     }\n",
    "summaries": {
      "en": "Delete unnecessary method override annotations",
      "zh": "删除不需要的方法覆盖注解"
    }
  },
  {
    "type": "fix",
    "subtype": "I2",
    "change": "diff --git a/engine/src/main/java/org/terasology/input/binds/movement/RunButton.java b/engine/src/main/java/org/terasology/input/binds/movement/RunButton.java\nindex 7bf00668c..757b26457 100644\n--- a/engine/src/main/java/org/terasology/input/binds/movement/RunButton.java\n+++ b/engine/src/main/java/org/terasology/input/binds/movement/RunButton.java\n@@ -26,6 +26,6 @@ import org.terasology.input.RegisterBindButton;\n  * @author Immortius\n  */\n @RegisterBindButton(id = \"run\", description = \"Run\")\n-@DefaultBinding(type = InputType.KEY, id = Keyboard.KeyId.LEFT_SHIFT)\n+@DefaultBinding(type = InputType.KEY, id = Keyboard.KeyId.R)\n public class RunButton extends BindButtonEvent {\n }\n",
    "summaries": {
      "en": "Change the default key for running from \"Shift\" to \"R\"",
      "zh": "将运行键默认从“Shift”更改为“R”"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/components/camel-snmp/src/main/java/org/apache/camel/component/snmp/SnmpEndpoint.java b/components/camel-snmp/src/main/java/org/apache/camel/component/snmp/SnmpEndpoint.java\nindex 4c70a77e17..9a8cdc330e 100644\n--- a/components/camel-snmp/src/main/java/org/apache/camel/component/snmp/SnmpEndpoint.java\n+++ b/components/camel-snmp/src/main/java/org/apache/camel/component/snmp/SnmpEndpoint.java\n@@ -17,6 +17,7 @@\n package org.apache.camel.component.snmp;\n \n import java.net.URI;\n+\n import org.apache.camel.Consumer;\n import org.apache.camel.Exchange;\n import org.apache.camel.ExchangePattern;\n@@ -204,4 +205,10 @@ public class SnmpEndpoint extends DefaultPollingEndpoint {\n     public void setProtocol(String protocol) {\n         this.protocol = protocol;\n     }\n+\n+    @Override\n+    public String toString() {\n+        // only show address to avoid user and password details to be shown\n+        return \"SnmpEndpoint[\" + address + \"]\";\n+    }\n }\n",
    "summaries": {
      "en": "Rewritten toString() method to only display the address, avoiding the display of user and password details",
      "zh": "重写toString()方法，只显示地址，避免显示用户和密码详细信息"
    }
  },
  {
    "type": "feat",
    "subtype": "E1",
    "change": "diff --git a/core/java/android/app/UiAutomationConnection.java b/core/java/android/app/UiAutomationConnection.java\nindex 607930c..91b0d7c 100644\n--- a/core/java/android/app/UiAutomationConnection.java\n+++ b/core/java/android/app/UiAutomationConnection.java\n@@ -146,7 +146,9 @@ public final class UiAutomationConnection extends IUiAutomationConnection.Stub {\n     @Override\n     public void shutdown() {\n         synchronized (mLock) {\n-            throwIfCalledByNotTrustedUidLocked();\n+            if (isConnectedLocked()) {\n+                throwIfCalledByNotTrustedUidLocked();\n+            }\n             throwIfShutdownLocked();\n             mIsShutdown = true;\n             if (isConnectedLocked()) {\n",
    "summaries": {
      "en": "Added check for connection status",
      "zh": "增加对连接状态的判断"
    }
  },
  {
    "type": "refactor",
    "subtype": "R3",
    "change": "diff --git a/src/com/jwetherell/algorithms/DataStructures.java b/src/com/jwetherell/algorithms/DataStructures.java\nindex 3cac0e9..177b23a 100644\n--- a/src/com/jwetherell/algorithms/DataStructures.java\n+++ b/src/com/jwetherell/algorithms/DataStructures.java\n@@ -45,7 +45,7 @@ public class DataStructures {\n     private static Integer[] unsorted = null;\n     private static String string = null;\n     private static boolean debug = false;\n-    private static boolean debugTime = true;\n+    private static boolean debugTime = false;\n \n \n     public static void main(String[] args) {\n",
    "summaries": {
      "en": "Close debugTime flag",
      "zh": "关闭debugTime标志"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/jphp-swing-ext/src/org/develnext/jphp/swing/classes/components/UIForm.java b/jphp-swing-ext/src/org/develnext/jphp/swing/classes/components/UIForm.java\nindex ecdcb2d6..fdf60244 100644\n--- a/jphp-swing-ext/src/org/develnext/jphp/swing/classes/components/UIForm.java\n+++ b/jphp-swing-ext/src/org/develnext/jphp/swing/classes/components/UIForm.java\n@@ -14,6 +14,13 @@ import static php.runtime.annotation.Reflection.*;\n \n @Name(SwingExtension.NAMESPACE + \"UIForm\")\n public class UIForm extends UIWindow {\n+    // UIForm.setDefaultCloseOperation(define)\n+    public final static int DO_NOTHING_ON_CLOSE = JFrameX.DO_NOTHING_ON_CLOSE;\n+    public final static int HIDE_ON_CLOSE       = JFrameX.HIDE_ON_CLOSE;\n+    public final static int DISPOSE_ON_CLOSE    = JFrameX.DISPOSE_ON_CLOSE;\n+    public final static int EXIT_ON_CLOSE       = JFrameX.EXIT_ON_CLOSE;\n+\n+\n     protected JFrameX frame;\n \n     public UIForm(Environment env, JFrameX frame) {\n",
    "summaries": {
      "en": "Add static constants to the UIForm class",
      "zh": "添加 UIForm 类的静态常量"
    }
  },
  {
    "type": "refactor",
    "subtype": "R3",
    "change": "diff --git a/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java b/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java\nindex 13e0f4d3..181f5953 100644\n--- a/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java\n+++ b/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java\n@@ -1447,7 +1447,7 @@ public class UTF8StreamJsonParser\n     /**********************************************************\n      */\n     \n-    protected Name _parseName(int i) throws IOException\n+    protected final Name _parseName(int i) throws IOException\n     {\n         if (i != INT_QUOTE) {\n             return _handleOddName(i);\n",
    "summaries": {
      "en": "Set _parseName() as final",
      "zh": "将 _parseName() 设为 final"
    }
  },
  {
    "type": "refactor",
    "subtype": "R10",
    "change": "diff --git a/src/net/java/sip/communicator/impl/gui/main/call/OneToOneCallPeerPanel.java b/src/net/java/sip/communicator/impl/gui/main/call/OneToOneCallPeerPanel.java\nindex b410481e3..ed7cbf127 100644\n--- a/src/net/java/sip/communicator/impl/gui/main/call/OneToOneCallPeerPanel.java\n+++ b/src/net/java/sip/communicator/impl/gui/main/call/OneToOneCallPeerPanel.java\n@@ -1178,7 +1178,6 @@ public class OneToOneCallPeerPanel\n      */\n     public void removeMouseAndKeyListeners()\n     {\n-        System.out.println(\"REMOVE MOUSE AND KEY LISTENERSSSSSSSSSSS=======\" + remoteVideo);\n         if(remoteVideo != null)\n         {\n             remoteVideo.removeKeyListener(mouseAndKeyListener);\n@@ -1270,7 +1269,6 @@ public class OneToOneCallPeerPanel\n          */\n         public void mouseMoved(MouseEvent event)\n         {\n-            System.out.println(\"MOUSE MOVED!!!!!!!!!!!!!!!!!!!!\");\n             if(System.currentTimeMillis() > lastMouseMovedTime + 50)\n             {\n                 desktopSharingClient.sendMouseEvent(callPeer, event,\n",
    "summaries": {
      "en": "Remove unnecessary print statements",
      "zh": "删除不必要的打印语句"
    }
  },
  {
    "type": "feat",
    "subtype": "E1",
    "change": "diff --git a/idea/src/org/jetbrains/kotlin/idea/codeInsight/CodeInsightUtils.java b/idea/src/org/jetbrains/kotlin/idea/codeInsight/CodeInsightUtils.java\nindex 31cd0c4..128f9ea 100644\n--- a/idea/src/org/jetbrains/kotlin/idea/codeInsight/CodeInsightUtils.java\n+++ b/idea/src/org/jetbrains/kotlin/idea/codeInsight/CodeInsightUtils.java\n@@ -231,6 +231,10 @@ public class CodeInsightUtils {\n         Document document = PsiDocumentManager.getInstance(file.getProject()).getDocument(file);\n         if (document == null) return null;\n \n+        if (line >= document.getLineCount()) {\n+            return null;\n+        }\n+\n         int lineStartOffset = document.getLineStartOffset(line);\n         return CharArrayUtil.shiftForward(document.getCharsSequence(), lineStartOffset, \" \\t\");\n     }\n@@ -240,6 +244,10 @@ public class CodeInsightUtils {\n         Document document = PsiDocumentManager.getInstance(file.getProject()).getDocument(file);\n         if (document == null) return null;\n \n+        if (line >= document.getLineCount()) {\n+            return null;\n+        }\n+\n         int lineStartOffset = document.getLineEndOffset(line);\n         return CharArrayUtil.shiftBackward(document.getCharsSequence(), lineStartOffset, \" \\t\");\n     }\n",
    "summaries": {
      "en": "If the required line number exceeds the number of lines in the document, return an empty string",
      "zh": "如果所需行号超过文档行数，则返回空"
    }
  },
  {
    "type": "test",
    "subtype": "T1",
    "change": "diff --git a/subprojects/gradle-core/src/test/groovy/org/gradle/util/MultithreadedTestCase.java b/subprojects/gradle-core/src/test/groovy/org/gradle/util/MultithreadedTestCase.java\nindex f0317e8..9b0a4ef 100755\n--- a/subprojects/gradle-core/src/test/groovy/org/gradle/util/MultithreadedTestCase.java\n+++ b/subprojects/gradle-core/src/test/groovy/org/gradle/util/MultithreadedTestCase.java\n@@ -115,8 +115,10 @@ public class MultithreadedTestCase {\n         ThreadHandle threadHandle = start(closure);\r\n         threadHandle.waitFor();\r\n         Date end = new Date();\r\n-        if (end.getTime() - start.getTime() > units.toMillis(value) + 300) {\r\n-            throw new RuntimeException(\"Action did not complete within expected time.\");\r\n+        long actual = end.getTime() - start.getTime();\r\n+        long expected = units.toMillis(value);\r\n+        if (actual > expected + 300) {\r\n+            throw new RuntimeException(String.format(\"Action did not complete within expected time. Expected <= %d ms, was %d ms.\", expected, actual));\r\n         }\r\n         return threadHandle;\r\n     }\r\n",
    "summaries": {
      "en": "Modified logic for timeout judgment",
      "zh": "修改超时时间判断逻辑"
    }
  },
  {
    "type": "refactor",
    "subtype": "R3",
    "change": "diff --git a/client/src/main/java/com/orientechnologies/orient/client/remote/OStorageRemote.java b/client/src/main/java/com/orientechnologies/orient/client/remote/OStorageRemote.java\nindex 9850262..1018d2b 100755\n--- a/client/src/main/java/com/orientechnologies/orient/client/remote/OStorageRemote.java\n+++ b/client/src/main/java/com/orientechnologies/orient/client/remote/OStorageRemote.java\n@@ -357,8 +357,9 @@ public class OStorageRemote extends OStorageAbstract implements OStorageProxy {\n \r\n       status = STATUS.CLOSING;\r\n       // CLOSE ALL THE CONNECTIONS\r\n-      engine.getConnectionManager().closePool(getCurrentServerURL());\r\n-\r\n+      for(String url: serverURLs) {\r\n+        engine.getConnectionManager().closePool(url);\r\n+      }\r\n       sbTreeCollectionManager.close();\r\n \r\n       super.close(iForce, onDelete);\r\n",
    "summaries": {
      "en": "Close all connection pools",
      "zh": "关闭所有连接池"
    }
  },
  {
    "type": "refactor",
    "subtype": "R2",
    "change": "diff --git a/OsmAnd/src/net/osmand/plus/activities/search/GeoIntentActivity.java b/OsmAnd/src/net/osmand/plus/activities/search/GeoIntentActivity.java\nindex 3c6b8a71f5..c1209f865b 100644\n--- a/OsmAnd/src/net/osmand/plus/activities/search/GeoIntentActivity.java\n+++ b/OsmAnd/src/net/osmand/plus/activities/search/GeoIntentActivity.java\n@@ -476,8 +476,7 @@ public class GeoIntentActivity extends OsmandListActivity {\n \t\t\t\t\t.replaceAll(\" \", \",\");\n \t\t\tSystem.out.println(query);\n \t\t\t//String is split on each comma\n-\t\t\tString[] s = query.substring(query\n-\t\t\t\t\t.indexOf(\"q=\") + 2).split(\",\");\n+\t\t\tString[] s = query.split(\",\");\n \t\t\t\n \t\t\telements = new ArrayList<String>();\n \t\t\tfor (int i = 0;  i<s.length; i++) {\n",
    "summaries": {
      "en": "Delete unnecessary code",
      "zh": "删除无用的代码"
    }
  },
  {
    "type": "fix",
    "subtype": "I1",
    "change": "diff --git a/core/src/main/java/com/orientechnologies/orient/core/metadata/OMetadataDefault.java b/core/src/main/java/com/orientechnologies/orient/core/metadata/OMetadataDefault.java\nindex cb6266b..286397a 100755\n--- a/core/src/main/java/com/orientechnologies/orient/core/metadata/OMetadataDefault.java\n+++ b/core/src/main/java/com/orientechnologies/orient/core/metadata/OMetadataDefault.java\n@@ -19,10 +19,6 @@\n  */\n package com.orientechnologies.orient.core.metadata;\n \n-import java.io.IOException;\n-import java.util.concurrent.Callable;\n-import java.util.concurrent.atomic.AtomicReference;\n-\n import com.orientechnologies.common.log.OLogManager;\n import com.orientechnologies.common.profiler.OProfilerMBean;\n import com.orientechnologies.orient.core.Orient;\n@@ -49,6 +45,10 @@ import com.orientechnologies.orient.core.schedule.OSchedulerListenerImpl;\n import com.orientechnologies.orient.core.schedule.OSchedulerListenerProxy;\n import com.orientechnologies.orient.core.storage.OStorageProxy;\n \n+import java.io.IOException;\n+import java.util.concurrent.Callable;\n+import java.util.concurrent.atomic.AtomicReference;\n+\n public class OMetadataDefault implements OMetadata {\n   public static final String                           CLUSTER_INTERNAL_NAME     = \"internal\";\n   public static final String                           CLUSTER_INDEX_NAME        = \"index\";\n@@ -248,7 +248,7 @@ public class OMetadataDefault implements OMetadata {\n     if (schema != null)\n       schema.reload();\n     if (indexManager != null)\n-      indexManager.load();\n+      indexManager.reload();\n     if (security != null)\n       security.load();\n     if (functionLibrary != null)\n",
    "summaries": {
      "en": "Change load() to reload()",
      "zh": "将load()更改为reload()"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/java/idea-ui/src/com/intellij/openapi/roots/ui/configuration/projectRoot/JdkListConfigurable.java b/java/idea-ui/src/com/intellij/openapi/roots/ui/configuration/projectRoot/JdkListConfigurable.java\nindex ab2fc0a..213a54a 100644\n--- a/java/idea-ui/src/com/intellij/openapi/roots/ui/configuration/projectRoot/JdkListConfigurable.java\n+++ b/java/idea-ui/src/com/intellij/openapi/roots/ui/configuration/projectRoot/JdkListConfigurable.java\n@@ -99,7 +99,8 @@ public class JdkListConfigurable extends BaseStructureConfigurable {\n   @Nullable\n   @NonNls\n   public String getHelpTopic() {\n-    return \"reference.settingsdialog.project.structure.jdk\";\n+    final NamedConfigurable selectedConfigurable = getSelectedConfugurable();\n+    return selectedConfigurable != null ? selectedConfigurable.getHelpTopic() : \"reference.settingsdialog.project.structure.jdk\";\n   }\n \n   @NonNls\n",
    "summaries": {
      "en": "Provide help topics for selected configurable items",
      "zh": "为选定的可配置项提供帮助主题"
    }
  },
  {
    "type": "feat",
    "subtype": "E1",
    "change": "diff --git a/nephele/nephele-common/src/main/java/eu/stratosphere/nephele/io/channels/bytebuffered/AbstractByteBufferedOutputChannel.java b/nephele/nephele-common/src/main/java/eu/stratosphere/nephele/io/channels/bytebuffered/AbstractByteBufferedOutputChannel.java\nindex 93263e050b..e42d09d8b9 100644\n--- a/nephele/nephele-common/src/main/java/eu/stratosphere/nephele/io/channels/bytebuffered/AbstractByteBufferedOutputChannel.java\n+++ b/nephele/nephele-common/src/main/java/eu/stratosphere/nephele/io/channels/bytebuffered/AbstractByteBufferedOutputChannel.java\n@@ -92,7 +92,7 @@ public abstract class AbstractByteBufferedOutputChannel<T extends Record> extend\n \t */\n \tprivate long amountOfDataTransmitted = 0L;\n \n-\tprivate static final Log LOG = LogFactory.getLog(AbstractByteBufferedInputChannel.class);\n+\tprivate static final Log LOG = LogFactory.getLog(AbstractByteBufferedOutputChannel.class);\n \n \t/**\n \t * Creates a new byte buffered output channel.\n@@ -148,6 +148,10 @@ public abstract class AbstractByteBufferedOutputChannel<T extends Record> extend\n \n \t\tif (!this.closeRequested) {\n \t\t\tthis.closeRequested = true;\n+\t\t\tif (this.serializationBuffer.dataLeftFromPreviousSerialization()) {\n+\t\t\t\t//make sure we serialized all data before we send the close event\n+\t\t\t\tflush();\n+\t\t\t}\n \n \t\t\tif (!isBroadcastChannel() || getChannelIndex() == 0) {\n \t\t\t\ttransferEvent(new ByteBufferedChannelCloseEvent());\n",
    "summaries": {
      "en": "Fixed the issue of prematurely closing large records",
      "zh": "修复了对于大记录过早关闭事件的问题"
    }
  },
  {
    "type": "fix",
    "subtype": "I11",
    "change": "diff --git a/minicluster/src/main/java/tachyon/master/LocalTachyonMaster.java b/minicluster/src/main/java/tachyon/master/LocalTachyonMaster.java\nindex fb5b624..15146d5 100644\n--- a/minicluster/src/main/java/tachyon/master/LocalTachyonMaster.java\n+++ b/minicluster/src/main/java/tachyon/master/LocalTachyonMaster.java\n@@ -18,6 +18,7 @@ package tachyon.master;\n import java.io.File;\n import java.io.IOException;\n import java.net.InetSocketAddress;\n+import java.util.Random;\n \n import com.google.common.base.Preconditions;\n import com.google.common.base.Supplier;\n@@ -43,6 +44,8 @@ import tachyon.util.network.NetworkAddressUtils.ServiceType;\n public final class LocalTachyonMaster {\n   // TODO(hy): Should this be moved to TachyonURI? Prob after UFS supports it.\n \n+  private static Random sRandomGenerator = new Random();\n+\n   private final String mTachyonHome;\n   private final String mHostname;\n \n@@ -77,10 +80,13 @@ public final class LocalTachyonMaster {\n     // \"hdfs://xxx:xxx/tachyon*\".\n     mUfsCluster = UnderFileSystemCluster.get(mTachyonHome + \"/dfs\", tachyonConf);\n     mUfsDirectory = mUfsCluster.getUnderFilesystemAddress() + \"/tachyon_underfs_folder\";\n+\n     // To setup the journalFolder under either local file system or distributed ufs like\n     // miniDFSCluster\n-    mJournalFolder =\n-        mUfsCluster.getUnderFilesystemAddress() + \"/journal\" + System.currentTimeMillis();\n+    synchronized (sRandomGenerator) {\n+      mJournalFolder =\n+          mUfsCluster.getUnderFilesystemAddress() + \"/journal\" + sRandomGenerator.nextLong();\n+    }\n \n     UnderFileSystemUtils.mkdirIfNotExists(mJournalFolder, tachyonConf);\n     String[] masterServiceNames = new String[] {\n",
    "summaries": {
      "en": "Replace timestamp with synchronized random number",
      "zh": "使用同步的随机数代替时间戳"
    }
  },
  {
    "type": "cicd",
    "subtype": "C2",
    "change": "diff --git a/.gitlab-ci.yml b/.gitlab-ci.yml\nindex 2b3e4f5..6h7j8k9 100644\n--- a/.gitlab-ci.yml\n+++ b/.gitlab-ci.yml\n@@ -10,29 +10,13 @@ cache:\n stages:\n   - build\n   - test\n-  - static_analysis\n-  - performance_test\n   - deploy\n\n build:\n   script:\n     - echo \"Building the project...\"\n     - build-command\n\n-# Removing static code analysis stage\n-static_analysis:\n-  stage: static_analysis\n-  script:\n-    - echo \"Performing static code analysis...\"\n-    - static-analysis-command\n-\n-# Removing performance testing stage\n-performance_test:\n-  stage: performance_test\n-  script:\n-    - echo \"Running performance tests...\"\n-    - performance-test-command\n-\n test:\n   stage: test\n   script:",
    "summaries": {
      "en": "Delete static analysis and performance test process",
      "zh": "删除static analysis和performance test过程"
    }
  },
  {
    "type": "feat",
    "subtype": "E1",
    "change": "diff --git a/platform/util/src/com/intellij/util/concurrency/Semaphore.java b/platform/util/src/com/intellij/util/concurrency/Semaphore.java\nindex 9a33f0e..2cf7d96 100644\n--- a/platform/util/src/com/intellij/util/concurrency/Semaphore.java\n+++ b/platform/util/src/com/intellij/util/concurrency/Semaphore.java\n@@ -15,15 +15,12 @@\n  */\n package com.intellij.util.concurrency;\n \n-import com.intellij.openapi.diagnostic.Logger;\n import com.intellij.openapi.progress.ProcessCanceledException;\n \n import java.util.concurrent.TimeUnit;\n import java.util.concurrent.locks.AbstractQueuedSynchronizer;\n \n public class Semaphore {\n-  private static final Logger LOG = Logger.getInstance(\"#com.intellij.util.concurrency.Semaphore\");\n-\n   private static final class Sync extends AbstractQueuedSynchronizer {\n     public int tryAcquireShared(int acquires) {\n       return getState() == 0 ? 1 : -1;\n@@ -69,6 +66,8 @@ public class Semaphore {\n \n   public boolean waitFor(final long timeout)  {\n     try {\n+      if (sync.tryAcquireShared(1) >= 0) return true;\n+\n       return sync.tryAcquireSharedNanos(1, TimeUnit.MILLISECONDS.toNanos(timeout));\n     }\n     catch (InterruptedException e) {\n",
    "summaries": {
      "en": "If the lock is acquired successfully, continue execution",
      "zh": "如果取锁成功则继续执行"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/framework/src/org/apache/cordova/CordovaWebView.java b/framework/src/org/apache/cordova/CordovaWebView.java\nindex b9ea21e2..46d1f312 100644\n--- a/framework/src/org/apache/cordova/CordovaWebView.java\n+++ b/framework/src/org/apache/cordova/CordovaWebView.java\n@@ -84,12 +84,16 @@ public class CordovaWebView extends WebView {\n   public CordovaWebView(Context context, AttributeSet attrs) {\n     super(context, attrs);\n     mCtx = context;\n+    preferences = new PreferenceSet();\n+    loadConfiguration();\n     setup();\n   }\n   \n   public CordovaWebView(Context context, AttributeSet attrs, int defStyle) {\n     super(context, attrs, defStyle);\n     mCtx = context;\n+    preferences = new PreferenceSet();\n+    loadConfiguration();\n     setup();\n   }\n   \n@@ -97,6 +101,8 @@ public class CordovaWebView extends WebView {\n       boolean privateBrowsing) {\n     super(context, attrs, defStyle, privateBrowsing);\n     mCtx = context;\n+    preferences = new PreferenceSet();\n+    loadConfiguration();\n     setup();\n   }\n   \n",
    "summaries": {
      "en": "Add PreferenceSet object and call loadConfiguration() method",
      "zh": "添加 PreferenceSet 对象并调用 loadConfiguration()方法"
    }
  },
  {
    "type": "refactor",
    "subtype": "R3",
    "change": "diff --git a/grails-web/src/main/groovy/org/codehaus/groovy/grails/web/binding/DataBindingUtils.java b/grails-web/src/main/groovy/org/codehaus/groovy/grails/web/binding/DataBindingUtils.java\nindex 99cc55579d..1a75d37272 100644\n--- a/grails-web/src/main/groovy/org/codehaus/groovy/grails/web/binding/DataBindingUtils.java\n+++ b/grails-web/src/main/groovy/org/codehaus/groovy/grails/web/binding/DataBindingUtils.java\n@@ -189,9 +189,14 @@ public class DataBindingUtils {\n     public static BindingResult bindObjectToDomainInstance(GrailsDomainClass domain, Object object,\n             Object source, List include, List exclude, String filter) {\n         BindingResult bindingResult = null;\n-        // setting this inline temporarily here for now...\n         boolean useLegacyBinder = false;\n-        final GrailsApplication grailsApplication = GrailsWebRequest.lookupApplication();\n+        GrailsApplication grailsApplication = null;\n+        if(domain != null) {\n+            grailsApplication = domain.getGrailsApplication();\n+        }\n+        if(grailsApplication == null) {\n+            grailsApplication = GrailsWebRequest.lookupApplication();\n+        }\n         if(grailsApplication != null) {\n             if(Boolean.TRUE.equals(grailsApplication.getFlatConfig().get(\"grails.databinding.useLegacyBinder\"))) {\n                 useLegacyBinder = true;\n",
    "summaries": {
      "en": "Added method and condition for obtaining grailsApplication",
      "zh": "添加获取grailsApplication方式及条件"
    }
  },
  {
    "type": "refactor",
    "subtype": "R3",
    "change": "diff --git a/platform/platform-impl/src/com/intellij/ui/docking/impl/DockManagerImpl.java b/platform/platform-impl/src/com/intellij/ui/docking/impl/DockManagerImpl.java\nindex 738d25f..b490ba4 100644\n--- a/platform/platform-impl/src/com/intellij/ui/docking/impl/DockManagerImpl.java\n+++ b/platform/platform-impl/src/com/intellij/ui/docking/impl/DockManagerImpl.java\n@@ -354,7 +354,7 @@ public class DockManagerImpl extends DockManager implements PersistentStateCompo\n     return myFactories.get(type);\n   }\n \n-  private void createNewDockContainerFor(DockableContent content, RelativePoint point) {\n+  public void createNewDockContainerFor(DockableContent content, RelativePoint point) {\n     DockContainer container = getFactory(content.getDockContainerType()).createContainer(content);\n     register(container);\n \n",
    "summaries": {
      "en": "Modified the visibility of createNewDockContainerFor to public",
      "zh": "修改createNewDockContainerFor的可见性为public"
    }
  },
  {
    "type": "fix",
    "subtype": "I13",
    "change": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/AceEditorWidget.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/AceEditorWidget.java\nindex f209b1005..0c40a0758 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/AceEditorWidget.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/AceEditorWidget.java\n@@ -49,6 +49,7 @@ import org.rstudio.studio.client.RStudioGinjector;\n import org.rstudio.studio.client.application.events.EventBus;\n import org.rstudio.studio.client.common.debugging.model.Breakpoint;\n import org.rstudio.studio.client.server.Void;\n+import org.rstudio.studio.client.workbench.commands.Commands;\n import org.rstudio.studio.client.workbench.views.output.lint.LintResources;\n import org.rstudio.studio.client.workbench.views.output.lint.model.AceAnnotation;\n import org.rstudio.studio.client.workbench.views.output.lint.model.LintItem;\n@@ -334,6 +335,8 @@ public class AceEditorWidget extends Composite\n    private Image createRunIcon()\n    {\n       Image icon = new Image(ThemeResources.INSTANCE.runChunk());\n+      icon.setTitle(\n+            commands_.executeCurrentChunk().getTooltip());\n       return icon;\n    }\n \n@@ -1002,6 +1005,7 @@ public class AceEditorWidget extends Composite\n    private LintResources.Styles lintStyles_ = LintResources.INSTANCE.styles();\n    \n    private EventBus events_;\n+   private Commands commands_ = RStudioGinjector.INSTANCE.getCommands();\n    \n    \n }\n\\ No newline at end of file\n",
    "summaries": {
      "en": "Add tooltip for \"Run\" icon",
      "zh": "为“运行块”图标添加工具提示"
    }
  },
  {
    "type": "docs",
    "subtype": "D2",
    "change": "diff --git a/server/sonar-server/src/test/java/org/sonar/server/activity/SearchMediumTest.java b/server/sonar-server/src/test/java/org/sonar/server/activity/SearchMediumTest.java\nindex 2dba3d0426..48f89a595b 100644\n--- a/server/sonar-server/src/test/java/org/sonar/server/activity/SearchMediumTest.java\n+++ b/server/sonar-server/src/test/java/org/sonar/server/activity/SearchMediumTest.java\n@@ -1,3 +1,22 @@\n+/*\n+ * SonarQube, open source software quality management tool.\n+ * Copyright (C) 2008-2014 SonarSource\n+ * mailto:contact AT sonarsource DOT com\n+ *\n+ * SonarQube is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3 of the License, or (at your option) any later version.\n+ *\n+ * SonarQube is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public License\n+ * along with this program; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n+ */\n package org.sonar.server.activity;\n \n import org.junit.After;\n",
    "summaries": {
      "en": "Add license header",
      "zh": "添加许可证头"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/src/main/java/org/elasticsearch/rest/action/bulk/RestBulkAction.java b/src/main/java/org/elasticsearch/rest/action/bulk/RestBulkAction.java\nindex 76b2e1a..8170383 100644\n--- a/src/main/java/org/elasticsearch/rest/action/bulk/RestBulkAction.java\n+++ b/src/main/java/org/elasticsearch/rest/action/bulk/RestBulkAction.java\n@@ -25,6 +25,7 @@ import org.elasticsearch.action.bulk.BulkItemResponse;\n import org.elasticsearch.action.bulk.BulkRequest;\n import org.elasticsearch.action.bulk.BulkResponse;\n import org.elasticsearch.action.index.IndexResponse;\n+import org.elasticsearch.action.delete.DeleteResponse;\n import org.elasticsearch.action.support.replication.ReplicationType;\n import org.elasticsearch.client.Client;\n import org.elasticsearch.client.Requests;\n@@ -125,6 +126,9 @@ public class RestBulkAction extends BaseRestHandler {\n                                 }\n                                 builder.endArray();\n                             }\n+                        } else if (itemResponse.getResponse() instanceof DeleteResponse) {\n+                            DeleteResponse deleteResponse = itemResponse.getResponse();\n+                            builder.field(Fields.FOUND, !deleteResponse.isNotFound());\n                         }\n                         builder.endObject();\n                         builder.endObject();\n@@ -159,6 +163,7 @@ public class RestBulkAction extends BaseRestHandler {\n         static final XContentBuilderString TOOK = new XContentBuilderString(\"took\");\n         static final XContentBuilderString _VERSION = new XContentBuilderString(\"_version\");\n         static final XContentBuilderString MATCHES = new XContentBuilderString(\"matches\");\n+        static final XContentBuilderString FOUND = new XContentBuilderString(\"found\");\n     }\n \n }\n",
    "summaries": {
      "en": "Add support for DeleteResponse",
      "zh": "添加 DeleteResponse 的支持"
    }
  },
  {
    "type": "docs",
    "subtype": "D2",
    "change": "diff --git a/src/java/org/jivesoftware/openfire/auth/JDBCAuthProvider.java b/src/java/org/jivesoftware/openfire/auth/JDBCAuthProvider.java\nindex 9b52d39f4..9c08454de 100644\n--- a/src/java/org/jivesoftware/openfire/auth/JDBCAuthProvider.java\n+++ b/src/java/org/jivesoftware/openfire/auth/JDBCAuthProvider.java\n@@ -73,9 +73,9 @@ import org.slf4j.LoggerFactory;\n  * situations where legacy (ex/md5) password hashes were stored and then \"upgraded\" to a stronger hash algorithm.\r\n  * Hashes are executed left to right.</p>\r\n  * <p>Example Setting: \"md5,sha1\"<br>  \r\n- * Usage: password -><br>\r\n- * (md5)&nbsp;286755fad04869ca523320acce0dc6a4&nbsp;-><br>\r\n- * (sha1)&nbsp;0524b1fc84d315b08db890413e65260040b08caa&nbsp;-></p>\r\n+ * Usage: password -&gt;<br>\r\n+ * (md5)&nbsp;286755fad04869ca523320acce0dc6a4&nbsp;-&gt;<br>\r\n+ * (sha1)&nbsp;0524b1fc84d315b08db890413e65260040b08caa&nbsp;-&gt;</p>\r\n  * \r\n  * <p>Bcrypt is supported as a passwordType; however, when chaining password types it MUST be the last type given. (bcrypt hashes are different \r\n  * every time they are generated)</p>\r\n",
    "summaries": {
      "en": "Fix Javadoc details issue",
      "zh": "修复Javadoc细节问题"
    }
  },
  {
    "type": "feat",
    "subtype": "E2",
    "change": "diff --git a/core/java/android/animation/PropertyValuesHolder.java b/core/java/android/animation/PropertyValuesHolder.java\nindex bf2924c..bdfbde1 100644\n--- a/core/java/android/animation/PropertyValuesHolder.java\n+++ b/core/java/android/animation/PropertyValuesHolder.java\n@@ -631,6 +631,9 @@ public class PropertyValuesHolder implements Cloneable {\n     public void setObjectValues(Object... values) {\n         mValueType = values[0].getClass();\n         mKeyframeSet = KeyframeSet.ofObject(values);\n+        if (mEvaluator != null) {\n+            mKeyframeSet.setEvaluator(mEvaluator);\n+        }\n     }\n \n     /**\n",
    "summaries": {
      "en": "If mEvaluator is not empty, set the Evaluator of mKeyframeSet",
      "zh": "如果mEvaluator不为空，则设置mKeyframeSet的Evaluator"
    }
  },
  {
    "type": "fix",
    "subtype": "I5",
    "change": "diff --git a/platform-impl/src/com/intellij/openapi/actionSystem/impl/Utils.java b/platform-impl/src/com/intellij/openapi/actionSystem/impl/Utils.java\nindex 0b5d96b..8a9a238 100644\n--- a/platform-impl/src/com/intellij/openapi/actionSystem/impl/Utils.java\n+++ b/platform-impl/src/com/intellij/openapi/actionSystem/impl/Utils.java\n@@ -125,13 +125,13 @@ public class Utils{\n \n       if (anAction instanceof ActionGroup) {\n         ActionGroup childGroup = (ActionGroup)anAction;\n+        final Presentation presentation = factory.getPresentation(childGroup);\n+        AnActionEvent event1 = new AnActionEvent(null, context, place, presentation, ActionManager.getInstance(), 0);\n+        event1.setInjectedContext(childGroup.isInInjectedContext());\n+        doUpdate(childGroup, event1, presentation);\n \n         // popup menu must be visible itself\n         if (childGroup.isPopup()) {\n-          final Presentation presentation = factory.getPresentation(childGroup);\n-          AnActionEvent event1 = new AnActionEvent(null, context, place, presentation, ActionManager.getInstance(), 0);\n-          event1.setInjectedContext(childGroup.isInInjectedContext());\n-          doUpdate(childGroup, event1, presentation);\n           if (!presentation.isVisible()) {\n             continue;\n           }\n",
    "summaries": {
      "en": "Update the operation group before checking visible sub-items",
      "zh": "在检查可见子项之前始终更新操作组"
    }
  },
  {
    "type": "fix",
    "subtype": "I11",
    "change": "diff --git a/services/core/java/com/android/server/MountService.java b/services/core/java/com/android/server/MountService.java\nindex 92b98a7..ed136e9 100644\n--- a/services/core/java/com/android/server/MountService.java\n+++ b/services/core/java/com/android/server/MountService.java\n@@ -3431,6 +3431,11 @@ class MountService extends IMountService.Stub\n         }\n \n         public boolean hasExternalStorage(int uid, String packageName) {\n+            // No need to check for system uid. This avoids a deadlock between\n+            // PackageManagerService and AppOpsService.\n+            if (uid == Process.SYSTEM_UID) {\n+                return true;\n+            }\n             // No locking - CopyOnWriteArrayList\n             for (ExternalStorageMountPolicy policy : mPolicies) {\n                 final boolean policyHasStorage = policy.hasExternalStorage(uid, packageName);\n",
    "summaries": {
      "en": "Avoid deadlock between PMS and AppOpsService",
      "zh": "避免 PMS 和 AppOpsService 之间的死锁"
    }
  },
  {
    "type": "feat",
    "subtype": "E1",
    "change": "diff --git a/ext/java/nokogiri/XmlSaxPushParser.java b/ext/java/nokogiri/XmlSaxPushParser.java\nindex 91fb156..83cdf4b 100644\n--- a/ext/java/nokogiri/XmlSaxPushParser.java\n+++ b/ext/java/nokogiri/XmlSaxPushParser.java\n@@ -10,8 +10,10 @@ import nokogiri.internals.PushInputStream;\n import org.jruby.Ruby;\n import org.jruby.RubyClass;\n import org.jruby.RubyIO;\n+import org.jruby.RubyKernel;\n import org.jruby.RubyModule;\n import org.jruby.RubyObject;\n+import org.jruby.RubyString;\n import org.jruby.anno.JRubyMethod;\n import org.jruby.exceptions.RaiseException;\n import org.jruby.javasupport.util.RuntimeHelpers;\n@@ -61,7 +63,12 @@ public class XmlSaxPushParser extends RubyObject {\n     @JRubyMethod\n     public IRubyObject native_write(ThreadContext context, IRubyObject chunk,\n                                     IRubyObject isLast) {\n-        byte[] data = chunk.toString().getBytes();\n+        byte[] data = null;\n+        if (chunk instanceof RubyString || chunk.respondsTo(\"to_str\")) {\n+            data = chunk.convertToString().getBytes();\n+        } else {\n+            throw new RaiseException(new XmlSyntaxError(context.getRuntime()));\n+        }\n \n         try {\n             stream.writeAndWaitForRead(data);\n",
    "summaries": {
      "en": "If chunk is not of string type, throw an exception XmlSyntaxError",
      "zh": "如果chunk不是字符串类型，则抛出异常XmlSyntaxError"
    }
  },
  {
    "type": "refactor",
    "subtype": "R3",
    "change": "diff --git a/src/edu/stanford/nlp/parser/shiftreduce/ShiftReduceParserQuery.java b/src/edu/stanford/nlp/parser/shiftreduce/ShiftReduceParserQuery.java\nindex 09d0ff0..09d2690 100644\n--- a/src/edu/stanford/nlp/parser/shiftreduce/ShiftReduceParserQuery.java\n+++ b/src/edu/stanford/nlp/parser/shiftreduce/ShiftReduceParserQuery.java\n@@ -105,12 +105,12 @@ public class ShiftReduceParserQuery implements ParserQuery {\n \n   @Override\n   public Tree getBestDependencyParse(boolean debinarize) {\n-    throw new UnsupportedOperationException();\n+    return null;\n   }\n \n   @Override\n   public Tree getBestFactoredParse() {\n-    throw new UnsupportedOperationException();\n+    return null;\n   }\n \n   /** TODO: if this is a beam, return all equal parses */\n",
    "summaries": {
      "en": "EvaluateTreebank should return null for unavailable parses",
      "zh": "EvaluateTreebank 期望对不可用的解析返回 null"
    }
  },
  {
    "type": "fix",
    "subtype": "I1",
    "change": "diff --git a/jps/jps-builders/src/org/jetbrains/jps/cmdline/ProfilingHelper.java b/jps/jps-builders/src/org/jetbrains/jps/cmdline/ProfilingHelper.java\nindex 7b58418..40cf904 100644\n--- a/jps/jps-builders/src/org/jetbrains/jps/cmdline/ProfilingHelper.java\n+++ b/jps/jps-builders/src/org/jetbrains/jps/cmdline/ProfilingHelper.java\n@@ -33,9 +33,9 @@ class ProfilingHelper {\n \n   public void startProfiling() {\n     try {\n-      final Method startMethod = myControllerClass.getDeclaredMethod(\"startCPUProfiling\", long.class, String.class);\n+      final Method startMethod = myControllerClass.getDeclaredMethod(\"startCPUSampling\", String.class);\n       if (startMethod != null) {\n-        startMethod.invoke(myController, 4L/*ProfilingModes.CPU_SAMPLING*/, null);\n+        startMethod.invoke(myController, new Object[] {null});\n       }\n       else {\n         System.err.println(\"Cannot find method 'startCPUProfiling' in class \" + myControllerClass.getName());\n",
    "summaries": {
      "en": "Change method call",
      "zh": "更改方法调用"
    }
  },
  {
    "type": "refactor",
    "subtype": "R3",
    "change": "diff --git a/java/org/apache/tomcat/util/file/ConfigFileLoader.java b/java/org/apache/tomcat/util/file/ConfigFileLoader.java\nindex 1f1f4039d..1b0b63da0 100644\n--- a/java/org/apache/tomcat/util/file/ConfigFileLoader.java\n+++ b/java/org/apache/tomcat/util/file/ConfigFileLoader.java\n@@ -33,7 +33,7 @@ public class ConfigFileLoader {\n     private static final URI CATALINA_BASE_URI;\n \n     static {\n-        File catalinaBase = new File(\"\");\n+        File catalinaBase = new File(System.getProperty(\"catalina.base\"));\n         CATALINA_BASE_URI = catalinaBase.toURI();\n     }\n \n",
    "summaries": {
      "en": "Modified the initialization method of catalinaBase to obtain from system properties",
      "zh": "修改catalinaBase的初始化方式，从系统属性中获取"
    }
  },
  {
    "type": "refactor",
    "subtype": "R10",
    "change": "diff --git a/src/org/geometerplus/android/fbreader/DisplayBookPopupAction.java b/src/org/geometerplus/android/fbreader/DisplayBookPopupAction.java\nindex 4fc0f9328..f6b936d73 100644\n--- a/src/org/geometerplus/android/fbreader/DisplayBookPopupAction.java\n+++ b/src/org/geometerplus/android/fbreader/DisplayBookPopupAction.java\n@@ -105,10 +105,8 @@ class DisplayBookPopupAction extends FBAndroidAction {\n \t\t\t}\n \t\t});\n \n-\t\tif (Build.VERSION.SDK_INT < Build.VERSION_CODES.LOLLIPOP) {\n-\t\t\tdownloadButton.setTextColor(0xFF777777);\n-\t\t\tcancelButton.setTextColor(0xFF777777);\n-\t\t}\n+\t\tdownloadButton.setTextColor(0xFF777777);\n+\t\tcancelButton.setTextColor(0xFF777777);\n \n \t\tpopup.setOnDismissListener(new PopupWindow.OnDismissListener() {\n \t\t\tpublic void onDismiss() {\n",
    "summaries": {
      "en": "Delete invalid conditional statements",
      "zh": "删除无效的条件判断"
    }
  },
  {
    "type": "fix",
    "subtype": "I1",
    "change": "diff --git a/dbflow/src/main/java/com/raizlabs/android/dbflow/sql/SqlUtils.java b/dbflow/src/main/java/com/raizlabs/android/dbflow/sql/SqlUtils.java\nindex 9c0e585..56f928e 100644\n--- a/dbflow/src/main/java/com/raizlabs/android/dbflow/sql/SqlUtils.java\n+++ b/dbflow/src/main/java/com/raizlabs/android/dbflow/sql/SqlUtils.java\n@@ -15,9 +15,9 @@ import com.raizlabs.android.dbflow.config.FlowManager;\n import com.raizlabs.android.dbflow.runtime.FlowContentObserver;\n import com.raizlabs.android.dbflow.sql.language.Condition;\n import com.raizlabs.android.dbflow.sql.language.ConditionGroup;\n-import com.raizlabs.android.dbflow.sql.language.Delete;\n import com.raizlabs.android.dbflow.sql.language.NameAlias;\n import com.raizlabs.android.dbflow.sql.language.SQLCondition;\n+import com.raizlabs.android.dbflow.sql.language.SQLite;\n import com.raizlabs.android.dbflow.structure.BaseModel.Action;\n import com.raizlabs.android.dbflow.structure.InstanceAdapter;\n import com.raizlabs.android.dbflow.structure.InternalAdapter;\n@@ -361,8 +361,8 @@ public class SqlUtils {\n     @SuppressWarnings(\"unchecked\")\n     public static <ModelClass extends Model, TableClass extends Model, AdapterClass extends RetrievalAdapter & InternalAdapter>\n     void delete(final TableClass model, AdapterClass adapter, ModelAdapter<ModelClass> modelAdapter) {\n-        new Delete().from((Class<TableClass>) adapter.getModelClass()).where(\n-                adapter.getPrimaryConditionClause(model)).query();\n+        SQLite.delete((Class<TableClass>) adapter.getModelClass()).where(\n+                adapter.getPrimaryConditionClause(model)).queryClose();\n         adapter.updateAutoIncrement(model, 0);\n         notifyModelChanged(model, adapter, modelAdapter, Action.DELETE);\n     }\n",
    "summaries": {
      "en": "Using SQLite to delete data",
      "zh": "使用SQLite来删除数据"
    }
  },
  {
    "type": "test",
    "subtype": "T1",
    "change": "diff --git a/platform/platform-impl/testSrc/com/intellij/ide/util/treeView/TreeUiTest.java b/platform/platform-impl/testSrc/com/intellij/ide/util/treeView/TreeUiTest.java\nindex 8dd6c70..4f0ef6f 100644\n--- a/platform/platform-impl/testSrc/com/intellij/ide/util/treeView/TreeUiTest.java\n+++ b/platform/platform-impl/testSrc/com/intellij/ide/util/treeView/TreeUiTest.java\n@@ -2515,6 +2515,10 @@ public class TreeUiTest extends AbstractTreeBuilderTest {\n       // doesn't make sense in pass-through mode\n     }\n \n+    @Override\n+    public void testNoExtraJTreeModelUpdate() throws Exception {\n+      // doesn't make sense in pass-through mode\n+    }\n \n     @Override\n     public void testSelectWhenUpdatesArePending() throws Exception {\n",
    "summaries": {
      "en": "Add test method testNoExtraJTreeModelUpdate()",
      "zh": "添加测试方法 testNoExtraJTreeModelUpdate()"
    }
  },
  {
    "type": "test",
    "subtype": "T1",
    "change": "diff --git a/androidTest/java/com/owncloud/android/authentication/AuthenticatorActivityTest.java b/androidTest/java/com/owncloud/android/authentication/AuthenticatorActivityTest.java\nindex 9cee8e70f..d367976d8 100644\n--- a/androidTest/java/com/owncloud/android/authentication/AuthenticatorActivityTest.java\n+++ b/androidTest/java/com/owncloud/android/authentication/AuthenticatorActivityTest.java\n@@ -21,7 +21,6 @@ package com.owncloud.android.authentication;\n \n import android.content.Context;\n import android.content.Intent;\n-import android.graphics.Point;\n import android.os.Bundle;\n import android.os.RemoteException;\n import android.support.test.InstrumentationRegistry;\n@@ -84,11 +83,11 @@ public class AuthenticatorActivityTest {\n     @Before\n     public void init(){\n         UiDevice uiDevice = UiDevice.getInstance(InstrumentationRegistry.getInstrumentation());\n-        Point[] coordinates = new Point[4];\n+        /*Point[] coordinates = new Point[4];\n         coordinates[0] = new Point(248, 1020);\n         coordinates[1] = new Point(248, 429);\n         coordinates[2] = new Point(796, 1020);\n-        coordinates[3] = new Point(796, 429);\n+        coordinates[3] = new Point(796, 429);*/\n         try {\n             if (!uiDevice.isScreenOn()) {\n                 uiDevice.wakeUp();\n",
    "summaries": {
      "en": "Remove unnecessary code block comments",
      "zh": "注释无用代码块"
    }
  },
  {
    "type": "fix",
    "subtype": "Ix",
    "change": "diff --git a/core/src/main/java/com/orientechnologies/orient/core/OConstants.java b/core/src/main/java/com/orientechnologies/orient/core/OConstants.java\nindex 57d56a9..a1ed825 100644\n--- a/core/src/main/java/com/orientechnologies/orient/core/OConstants.java\n+++ b/core/src/main/java/com/orientechnologies/orient/core/OConstants.java\n@@ -22,7 +22,7 @@ package com.orientechnologies.orient.core;\n public class OConstants {\r\n   public static final String ORIENT_VERSION = \"2.1-SNAPSHOT\";\r\n \r\n-  public static final String ORIENT_URL     = \"www.orientechnologies.com\";\r\n+  public static final String ORIENT_URL     = \"www.orientdb.com\";\r\n   public static final String COPYRIGHT      = \"Copyrights (c) 2015 Orient Technologies LTD\";\r\n \r\n   public static String getVersion() {\r\n",
    "summaries": {
      "en": "Change website to orientdb.com",
      "zh": "将网站更改为orientdb.com"
    }
  },
  {
    "type": "fix",
    "subtype": "I3",
    "change": "diff --git a/src/main/groovy/lang/MetaClass.java b/src/main/groovy/lang/MetaClass.java\nindex 2f8a2ffe0..8cfab695c 100644\n--- a/src/main/groovy/lang/MetaClass.java\n+++ b/src/main/groovy/lang/MetaClass.java\n@@ -384,9 +384,8 @@ public class MetaClass {\n            // if no method was found, try to find a closure defined as a field of the class and run it\n            try {\n                Object value = this.getProperty(object, methodName);\n-               if (value instanceof Closure && object!=this) {\n+               if (value instanceof Closure) {  // This test ensures that value != this If you ever change this ensure that value != this\n                    Closure closure = (Closure) value;\n-                   closure.setDelegate(this);\n                    MetaClass delegateMetaClass = registry.getMetaClass(closure.getClass());\n                    return delegateMetaClass.invokeMethod(closure,\"doCall\",arguments);\n                }\n",
    "summaries": {
      "en": "When a closure is called as a field of an object, stop delegating being overridden",
      "zh": "当闭包作为对象的字段被调用时，停止委托被覆盖"
    }
  },
  {
    "type": "feat",
    "subtype": "E2",
    "change": "diff --git a/platform/lang-impl/src/com/intellij/codeInsight/editorActions/TypedHandler.java b/platform/lang-impl/src/com/intellij/codeInsight/editorActions/TypedHandler.java\nindex 5552f59..6f7bb4c 100644\n--- a/platform/lang-impl/src/com/intellij/codeInsight/editorActions/TypedHandler.java\n+++ b/platform/lang-impl/src/com/intellij/codeInsight/editorActions/TypedHandler.java\n@@ -196,7 +196,9 @@ public class TypedHandler implements TypedActionHandler {\n \n     if (!editor.getSelectionModel().hasBlockSelection()) {\n       if (')' == charTyped || ']' == charTyped || '}' == charTyped) {\n-        if (handleRParen(editor, fileType, charTyped)) return;\n+        if (StdFileTypes.PLAIN_TEXT != fileType) {\n+          if (handleRParen(editor, fileType, charTyped)) return;\n+        }\n       }\n       else if ('\"' == charTyped || '\\'' == charTyped) {\n         if (handleQuote(editor, charTyped, dataContext, file)) return;\n",
    "summaries": {
      "en": "Add file type judgment",
      "zh": "增加文件类型判断"
    }
  },
  {
    "type": "feat",
    "subtype": "E2",
    "change": "diff --git a/OsmAnd/src/net/osmand/plus/dashboard/DashAudioVideoNotesFragment.java b/OsmAnd/src/net/osmand/plus/dashboard/DashAudioVideoNotesFragment.java\nindex 53fc396921..a6fd5e0cc3 100644\n--- a/OsmAnd/src/net/osmand/plus/dashboard/DashAudioVideoNotesFragment.java\n+++ b/OsmAnd/src/net/osmand/plus/dashboard/DashAudioVideoNotesFragment.java\n@@ -61,6 +61,10 @@ public class DashAudioVideoNotesFragment extends DashBaseFragment {\n \n \tpublic void setupNotes() {\n \t\tView mainView = getView();\n+\t\tif (mainView == null) {\n+\t\t\treturn;\n+\t\t}\n+\n \t\tif (plugin == null){\n \t\t\t(mainView.findViewById(R.id.main_notes)).setVisibility(View.GONE);\n \t\t\treturn;\n",
    "summaries": {
      "en": "Add null check for mainView in setupNotes() function",
      "zh": "在setupNotes()函数中，添加对mainView的null检查"
    }
  },
  {
    "type": "test",
    "subtype": "T1",
    "change": "diff --git a/core/src/test/java/org/acegisecurity/util/MockFilterChain.java b/core/src/test/java/org/acegisecurity/util/MockFilterChain.java\nindex 9f27764ea..14925ed11 100644\n--- a/core/src/test/java/org/acegisecurity/util/MockFilterChain.java\n+++ b/core/src/test/java/org/acegisecurity/util/MockFilterChain.java\n@@ -17,12 +17,11 @@ package net.sf.acegisecurity.util;\n \n import junit.framework.TestCase;\n \n-import java.io.IOException;\n-\n import javax.servlet.FilterChain;\n import javax.servlet.ServletException;\n import javax.servlet.ServletRequest;\n import javax.servlet.ServletResponse;\n+import java.io.IOException;\n \n \n /**\n@@ -31,7 +30,7 @@ import javax.servlet.ServletResponse;\n  * @author Ben Alex\n  * @version $Id$\n  */\n-public class MockFilterChain extends TestCase implements FilterChain {\n+public class MockFilterChain implements FilterChain {\n     //~ Instance fields ========================================================\n \n     private boolean expectToProceed;\n@@ -42,18 +41,14 @@ public class MockFilterChain extends TestCase implements FilterChain {\n         this.expectToProceed = expectToProceed;\n     }\n \n-    private MockFilterChain() {\n-        super();\n-    }\n-\n     //~ Methods ================================================================\n \n     public void doFilter(ServletRequest request, ServletResponse response)\n-        throws IOException, ServletException {\n+            throws IOException, ServletException {\n         if (expectToProceed) {\n-            assertTrue(true);\n+            TestCase.assertTrue(true);\n         } else {\n-            fail(\"Did not expect filter chain to proceed\");\n+            TestCase.fail(\"Did not expect filter chain to proceed\");\n         }\n     }\n }\n",
    "summaries": {
      "en": "Deleted TestCase and unnecessary code, and changed Assert class",
      "zh": "删除TestCase和无用代码并更改断言类"
    }
  },
  {
    "type": "test",
    "subtype": "T1",
    "change": "diff --git a/testsuite/src/test/java/org/hibernate/test/extendshbm/ExtendsTest.java b/testsuite/src/test/java/org/hibernate/test/extendshbm/ExtendsTest.java\nindex 9152c82d56..1e58458bc4 100644\n--- a/testsuite/src/test/java/org/hibernate/test/extendshbm/ExtendsTest.java\n+++ b/testsuite/src/test/java/org/hibernate/test/extendshbm/ExtendsTest.java\n@@ -150,7 +150,7 @@ public class ExtendsTest extends UnitTestCase {\n \t\t}\n \t}\n \n-\tpublic void testEntityNamesWithPackageFailureExpected() {\n+\tpublic void testEntityNamesWithPackage() {\n \t\tConfiguration cfg = new Configuration();\n \t\ttry {\n \t\t\tcfg.addResource( getBaseForMappings() + \"extendshbm/packageentitynames.hbm.xml\" );\n",
    "summaries": {
      "en": "Modified test method names",
      "zh": "修改测试方法名称"
    }
  },
  {
    "type": "fix",
    "subtype": "I2",
    "change": "diff --git a/src/org/anddev/andengine/entity/Entity.java b/src/org/anddev/andengine/entity/Entity.java\nindex e7dc019..c274a13 100644\n--- a/src/org/anddev/andengine/entity/Entity.java\n+++ b/src/org/anddev/andengine/entity/Entity.java\n@@ -467,7 +467,7 @@ public class Entity implements IEntity {\n \t\tif(this.mChildren == null) {\r\n \t\t\treturn null;\r\n \t\t}\r\n-\t\treturn this.mChildren.remove(pEntityMatcher);\r\n+\t\treturn this.mChildren.remove(pEntityMatcher, Entity.PARAMETERCALLABLE_DETACHCHILD);\r\n \t}\r\n \r\n \t@Override\r\n",
    "summaries": {
      "en": "Corrected the parameters of the remove method call",
      "zh": "更正remove方法的调用参数"
    }
  },
  {
    "type": "refactor",
    "subtype": "R10",
    "change": "diff --git a/src/main/java/org/jboss/netty/handler/ssl/SslHandler.java b/src/main/java/org/jboss/netty/handler/ssl/SslHandler.java\nindex d5355c8..4bb35a2 100644\n--- a/src/main/java/org/jboss/netty/handler/ssl/SslHandler.java\n+++ b/src/main/java/org/jboss/netty/handler/ssl/SslHandler.java\n@@ -585,9 +585,6 @@ public class SslHandler extends FrameDecoder {\n         try {\n             for (;;) {\n                 synchronized (handshakeLock) {\n-                    if (engine.isOutboundDone()) {\n-                        break;\n-                    }\n                     result = engine.wrap(EMPTY_BUFFER, outNetBuf);\n                 }\n \n",
    "summaries": {
      "en": "Remove unnecessary conditional statements",
      "zh": "删除不必要的条件判断"
    }
  },
  {
    "type": "feat",
    "subtype": "E1",
    "change": "diff --git a/src/com/owncloud/android/operations/OAuth2GetAccessToken.java b/src/com/owncloud/android/operations/OAuth2GetAccessToken.java\nindex 66c4efee4..12e611c45 100644\n--- a/src/com/owncloud/android/operations/OAuth2GetAccessToken.java\n+++ b/src/com/owncloud/android/operations/OAuth2GetAccessToken.java\n@@ -98,7 +98,7 @@ public class OAuth2GetAccessToken extends RemoteOperation {\n                 Log.e(TAG, \"OAuth2 TOKEN REQUEST with auth code \" + mOAuth2ParsedAuthorizationResponse.get(\"code\") + \" to \" + client.getBaseUri() + \": \" + result.getLogMessage(), result.getException());\n                 \n             } else if (result.getCode() == ResultCode.OAUTH2_ERROR) {\n-                    Log.e(TAG, \"OAuth2 TOKEN REQUEST with auth code \" + mOAuth2ParsedAuthorizationResponse.get(\"code\") + \" to \" + client.getBaseUri() + \": \" + mResultTokenMap.get(OAuth2Context.OAUTH2_TOKEN_RECEIVED_ERROR));\n+                    Log.e(TAG, \"OAuth2 TOKEN REQUEST with auth code \" + mOAuth2ParsedAuthorizationResponse.get(\"code\") + \" to \" + client.getBaseUri() + \": \" + ((mResultTokenMap != null) ? mResultTokenMap.get(OAuth2Context.OAUTH2_TOKEN_RECEIVED_ERROR) : \"NULL\"));\n                     \n             } else {\n                 Log.e(TAG, \"OAuth2 TOKEN REQUEST with auth code \" + mOAuth2ParsedAuthorizationResponse.get(\"code\") + \" to \" + client.getBaseUri() + \": \" + result.getLogMessage());\n",
    "summaries": {
      "en": "Fixed NullPointerException in the log",
      "zh": "修复日志中的 NullPointerException"
    }
  },
  {
    "type": "fix",
    "subtype": "I2",
    "change": "diff --git a/DataExtractionOSM/src/net/osmand/render/OsmandRenderingRulesParser.java b/DataExtractionOSM/src/net/osmand/render/OsmandRenderingRulesParser.java\nindex 28f6d6beee..365e2ddfff 100644\n--- a/DataExtractionOSM/src/net/osmand/render/OsmandRenderingRulesParser.java\n+++ b/DataExtractionOSM/src/net/osmand/render/OsmandRenderingRulesParser.java\n@@ -153,7 +153,7 @@ public class OsmandRenderingRulesParser {\n \t\t\t\tString dnc = attributes.getValue(\"defaultNightColor\");\n \t\t\t\tint defautNightColor = defaultColor;\n \t\t\t\tif(dnc != null && dnc.length() > 0){\n-\t\t\t\t\tdefautNightColor = parseColor(dc);\n+\t\t\t\t\tdefautNightColor = parseColor(dnc);\n \t\t\t\t}\n \t\t\t\tvisitor.rendering(attributes.getValue(\"name\"), attributes.getValue(\"depends\"), defaultColor, defautNightColor); //$NON-NLS-1$ //$NON-NLS-2$\n \t\t\t} else {\n",
    "summaries": {
      "en": "Fix parameter error",
      "zh": "修复参数错误"
    }
  },
  {
    "type": "refactor",
    "subtype": "R3",
    "change": "diff --git a/library/src/main/java/com/loopj/android/http/AsyncHttpResponseHandler.java b/library/src/main/java/com/loopj/android/http/AsyncHttpResponseHandler.java\nindex 8cbddb2..b59001a 100644\n--- a/library/src/main/java/com/loopj/android/http/AsyncHttpResponseHandler.java\n+++ b/library/src/main/java/com/loopj/android/http/AsyncHttpResponseHandler.java\n@@ -322,11 +322,11 @@ public abstract class AsyncHttpResponseHandler implements ResponseHandlerInterfa\n         boolean missingLooper = null == Looper.myLooper();\n         if (runnable != null) {\n             if (missingLooper) {\n-                // If there is no looper, run on current thread\n-                runnable.run();\n-            } else {\n-                // Otherwise, run on a handler we create\n+                // If there is no looper, run on provided handler\n                 handler.post(runnable);\n+            } else {\n+                // Otherwise, run on current thread\n+                runnable.run();\n             }\n         }\n     }\n",
    "summaries": {
      "en": "Fix thread race condition",
      "zh": "修复线程竞争条件"
    }
  },
  {
    "type": "fix",
    "subtype": "I5",
    "change": "diff --git a/src/java/org/jivesoftware/openfire/roster/RosterItemProvider.java b/src/java/org/jivesoftware/openfire/roster/RosterItemProvider.java\nindex 2cac9aafa..3fa7798ed 100644\n--- a/src/java/org/jivesoftware/openfire/roster/RosterItemProvider.java\n+++ b/src/java/org/jivesoftware/openfire/roster/RosterItemProvider.java\n@@ -88,9 +88,8 @@ public class RosterItemProvider {\n         Connection con = null;\r\n         PreparedStatement pstmt = null;\r\n         try {\r\n-            con = DbConnectionManager.getConnection();\r\n-\r\n             long rosterID = SequenceManager.nextID(JiveConstants.ROSTER);\r\n+            con = DbConnectionManager.getConnection();\r\n             pstmt = con.prepareStatement(CREATE_ROSTER_ITEM);\r\n             pstmt.setString(1, username);\r\n             pstmt.setLong(2, rosterID);\r\n",
    "summaries": {
      "en": "Changed the location for connecting to the database",
      "zh": "改变了连接数据库的位置"
    }
  },
  {
    "type": "fix",
    "subtype": "Ix",
    "change": "diff --git a/packages/SettingsProvider/src/com/android/providers/settings/SettingsBackupAgent.java b/packages/SettingsProvider/src/com/android/providers/settings/SettingsBackupAgent.java\nindex 6b7ac8c..b4d8c63 100644\n--- a/packages/SettingsProvider/src/com/android/providers/settings/SettingsBackupAgent.java\n+++ b/packages/SettingsProvider/src/com/android/providers/settings/SettingsBackupAgent.java\n@@ -942,6 +942,7 @@ public class SettingsBackupAgent extends BackupAgentHelper {\n                 ByteArrayOutputStream bos = new ByteArrayOutputStream();\n                 OutputStreamWriter out = new OutputStreamWriter(bos);\n                 fromFile.write(out);\n+                out.flush();\n                 return bos.toByteArray();\n             } else {\n                 return EMPTY_DATA;\n",
    "summaries": {
      "en": "Refresh the output stream after writing to OutputStreamWriter",
      "zh": "在写入 OutputStreamWriter 后刷新输出流"
    }
  },
  {
    "type": "docs",
    "subtype": "D3",
    "change": "diff --git a/querydsl-collections/src/main/java/com/mysema/query/collections/SimpleEvaluator.java b/querydsl-collections/src/main/java/com/mysema/query/collections/SimpleEvaluator.java\nindex 1b717bc19..519e70390 100644\n--- a/querydsl-collections/src/main/java/com/mysema/query/collections/SimpleEvaluator.java\n+++ b/querydsl-collections/src/main/java/com/mysema/query/collections/SimpleEvaluator.java\n@@ -1,3 +1,8 @@\n+/*\r\n+ * Copyright (c) 2010 Mysema Ltd.\r\n+ * All rights reserved.\r\n+ * \r\n+ */\r\n package com.mysema.query.collections;\r\n \r\n import java.io.File;\r\n",
    "summaries": {
      "en": "Add copyright notice",
      "zh": "添加版权声明"
    }
  },
  {
    "type": "refactor",
    "subtype": "R10",
    "change": "diff --git a/robotium-solo/src/main/java/com/jayway/android/robotium/solo/ViewFetcher.java b/robotium-solo/src/main/java/com/jayway/android/robotium/solo/ViewFetcher.java\nindex 0de5fab..12726ed 100755\n--- a/robotium-solo/src/main/java/com/jayway/android/robotium/solo/ViewFetcher.java\n+++ b/robotium-solo/src/main/java/com/jayway/android/robotium/solo/ViewFetcher.java\n@@ -185,7 +185,6 @@ class ViewFetcher {\n \t */\n \n \tpublic ArrayList<View> getViews(View parent, boolean onlySufficientlyVisible) {\n-\t\tactivityUtils.getCurrentActivity(false);\n \t\tfinal ArrayList<View> views = new ArrayList<View>();\n \t\tfinal View parentToUse;\n \n",
    "summaries": {
      "en": "Remove the call to activityUtils.getCurrentActivity(false)",
      "zh": "删除activityUtils.getCurrentActivity(false)的调用"
    }
  },
  {
    "type": "fix",
    "subtype": "Ix",
    "change": "diff --git a/fml/common/cpw/mods/fml/common/ModClassLoader.java b/fml/common/cpw/mods/fml/common/ModClassLoader.java\nindex 78ae96ebf..0c49b31c3 100644\n--- a/fml/common/cpw/mods/fml/common/ModClassLoader.java\n+++ b/fml/common/cpw/mods/fml/common/ModClassLoader.java\n@@ -81,8 +81,21 @@ public class ModClassLoader extends URLClassLoader\n \n     public Class<? extends BaseModProxy> loadBaseModClass(String modClazzName) throws Exception\n     {\n-        AccessTransformer transformer = (AccessTransformer)mainClassLoader.getTransformers().get(0);\n-        transformer.ensurePublicAccessFor(modClazzName);\n+        AccessTransformer accessTransformer = null;\n+        for (IClassTransformer transformer : mainClassLoader.getTransformers())\n+        {\n+            if (transformer instanceof AccessTransformer)\n+            {\n+                accessTransformer = (AccessTransformer) transformer;\n+                break;\n+            }\n+        }\n+        if (accessTransformer == null)\n+        {\n+            FMLLog.log(Level.SEVERE, \"No access transformer found\");\n+            throw new LoaderException();\n+        }\n+        accessTransformer.ensurePublicAccessFor(modClazzName);\n         return (Class<? extends BaseModProxy>) Class.forName(modClazzName, true, this);\n     }\n }\n",
    "summaries": {
      "en": "Fix ClassCastException when loading ModLoader mods",
      "zh": "修复加载ModLoader模组时的ClassCastException"
    }
  },
  {
    "type": "refactor",
    "subtype": "R3",
    "change": "diff --git a/OsmAnd/src/net/osmand/plus/dashboard/DashFavoritesFragment.java b/OsmAnd/src/net/osmand/plus/dashboard/DashFavoritesFragment.java\nindex 6e104d6e79..2dd93a97b3 100644\n--- a/OsmAnd/src/net/osmand/plus/dashboard/DashFavoritesFragment.java\n+++ b/OsmAnd/src/net/osmand/plus/dashboard/DashFavoritesFragment.java\n@@ -87,7 +87,7 @@ public class DashFavoritesFragment extends DashBaseFragment {\n \n \n \n-\tprivate void setupFavorites(){\n+\tpublic void setupFavorites(){\n \t\tView mainView = getView();\n \t\tfinal FavouritesDbHelper helper = getMyApplication().getFavorites();\n \t\tpoints = new ArrayList<FavouritePoint>(helper.getFavouritePoints());\n",
    "summaries": {
      "en": "Change the access modifier of the setupFavorites() method to public",
      "zh": "将setupFavorites()方法的访问修饰符改为public"
    }
  },
  {
    "type": "refactor",
    "subtype": "R4",
    "change": "diff --git a/OsmAnd/src/net/osmand/plus/download/DownloadActivity.java b/OsmAnd/src/net/osmand/plus/download/DownloadActivity.java\nindex e0e3a1af96..dca576dd53 100644\n--- a/OsmAnd/src/net/osmand/plus/download/DownloadActivity.java\n+++ b/OsmAnd/src/net/osmand/plus/download/DownloadActivity.java\n@@ -78,11 +78,11 @@ public class DownloadActivity extends BaseDownloadActivity {\n \t\tString tab = getIntent() == null || getIntent().getExtras() == null ? null : getIntent().getExtras().getString(TAB_TO_OPEN);\n \t\tif (tab != null) {\n \t\t\tif (tab.equals(DOWNLOAD_TAB)) {\n-\t\t\t\tcurrentTab = 0;\n+\t\t\t\tcurrentTab = DOWNLOAD_TAB_NUMBER;\n \t\t\t} else if (tab.equals(LOCAL_TAB)) {\n-\t\t\t\tcurrentTab = 1;\n+\t\t\t\tcurrentTab = LOCAL_TAB_NUMBER;\n \t\t\t} else if (tab.equals(UPDATES_TAB)) {\n-\t\t\t\tcurrentTab = 2;\n+\t\t\t\tcurrentTab = UPDATES_TAB_NUMBER;\n \t\t\t}\n \t\t}\n \n",
    "summaries": {
      "en": "Fix adding constant",
      "zh": "修复添加常量"
    }
  },
  {
    "type": "refactor",
    "subtype": "R7",
    "change": "diff --git a/LinkBubbleProject/LinkBubble/src/main/java/com/chrislacy/linkbubble/ContentView.java b/LinkBubbleProject/LinkBubble/src/main/java/com/chrislacy/linkbubble/ContentView.java\nindex 2bc395a3..bcd80d60 100644\n--- a/LinkBubbleProject/LinkBubble/src/main/java/com/chrislacy/linkbubble/ContentView.java\n+++ b/LinkBubbleProject/LinkBubble/src/main/java/com/chrislacy/linkbubble/ContentView.java\n@@ -17,12 +17,17 @@ import android.graphics.drawable.Drawable;\n import android.net.Uri;\n import android.net.http.SslError;\n import android.util.Log;\n+import android.view.KeyEvent;\n+import android.view.Menu;\n+import android.view.MenuItem;\n+import android.view.MotionEvent;\n+import android.view.ViewGroup;\n+import android.view.WindowManager;\n import android.webkit.SslErrorHandler;\n import android.webkit.WebChromeClient;\n import android.webkit.WebSettings;\n import android.widget.ArrayAdapter;\n import android.widget.ListAdapter;\n-import android.view.*;\n import android.view.View;\n import android.webkit.WebView;\n import android.webkit.WebViewClient;\n",
    "summaries": {
      "en": "Disable wildcard imports",
      "zh": "取消使用通配符导入"
    }
  },
  {
    "type": "fix",
    "subtype": "I2",
    "change": "diff --git a/EditTextChips/src/main/java/com/novoda/demo/edittextchips/SplitwiseHintTextWatcher.java b/EditTextChips/src/main/java/com/novoda/demo/edittextchips/SplitwiseHintTextWatcher.java\nindex 78afa83..bd18a2d 100644\n--- a/EditTextChips/src/main/java/com/novoda/demo/edittextchips/SplitwiseHintTextWatcher.java\n+++ b/EditTextChips/src/main/java/com/novoda/demo/edittextchips/SplitwiseHintTextWatcher.java\n@@ -28,7 +28,7 @@ class SplitwiseHintTextWatcher extends HintSafeTextWatcher {\n     }\n \n     private boolean containsSpansOnly(String rawText) {\n-        return rawText.matches(\"( )*(,, )*\");\n+        return rawText.matches(\"(( )*,, )*\");\n     }\n \n     boolean textContainsHint(Editable text) {\n",
    "summaries": {
      "en": "Update regular expression to match multiple spaces",
      "zh": "更新正则表达式以匹配多个空格"
    }
  },
  {
    "type": "test",
    "subtype": "T1",
    "change": "diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BaseBulletTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BaseBulletTest.java\nindex 89a93d0..13ccd9f 100644\n--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BaseBulletTest.java\n+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BaseBulletTest.java\n@@ -72,7 +72,7 @@ public class BaseBulletTest extends BulletTest {\n \tpublic ModelBuilder modelBuilder = new ModelBuilder();\n \tpublic ModelBatch modelBatch;\n \tpublic Array<Disposable> disposables = new Array<Disposable>();\n-\tprivate int debugMode = DebugDrawModes.DBG_DrawFeaturesText;\n+\tprivate int debugMode = DebugDrawModes.DBG_NoDebug;\n \t\n \tprotected final static Vector3 tmpV1 = new Vector3(), tmpV2 = new Vector3();\n \n",
    "summaries": {
      "en": "Set debugMode to DBG_NoDebug",
      "zh": "将 debugMode 设置为 DBG_NoDebug"
    }
  },
  {
    "type": "refactor",
    "subtype": "R10",
    "change": "diff --git a/platform/xdebugger-impl/src/com/intellij/xdebugger/impl/ui/XDebugSessionTab.java b/platform/xdebugger-impl/src/com/intellij/xdebugger/impl/ui/XDebugSessionTab.java\nindex 177f045..6a0c734 100644\n--- a/platform/xdebugger-impl/src/com/intellij/xdebugger/impl/ui/XDebugSessionTab.java\n+++ b/platform/xdebugger-impl/src/com/intellij/xdebugger/impl/ui/XDebugSessionTab.java\n@@ -151,7 +151,6 @@ public class XDebugSessionTab extends DebuggerSessionTabBase {\n \n     debugProcess.registerAdditionalContent(myUi);\n     RunContentBuilder.addAdditionalConsoleEditorActions(myConsole, consoleContent);\n-    myUi.addContent(consoleContent, 0, PlaceInGrid.bottom, false);\n \n     if (ApplicationManager.getApplication().isUnitTestMode()) {\n       return myRunContentDescriptor;\n",
    "summaries": {
      "en": "Remove duplicate console additions",
      "zh": "移除控制台的双重添加"
    }
  },
  {
    "type": "refactor",
    "subtype": "R10",
    "change": "diff --git a/codec/src/main/java/io/netty/handler/codec/embedder/EmbeddedChannel.java b/codec/src/main/java/io/netty/handler/codec/embedder/EmbeddedChannel.java\nindex 5e1420c..019f17f 100644\n--- a/codec/src/main/java/io/netty/handler/codec/embedder/EmbeddedChannel.java\n+++ b/codec/src/main/java/io/netty/handler/codec/embedder/EmbeddedChannel.java\n@@ -109,13 +109,11 @@ class EmbeddedChannel extends AbstractChannel {\n         int byteBufLen = byteBuf.readableBytes();\n         if (byteBufLen > 0) {\n             productQueue.add(byteBuf.readBytes(byteBufLen));\n-            writeCounter += byteBufLen;\n             byteBuf.clear();\n         }\n         Queue<Object> msgBuf = buf.messageBuffer();\n         if (!msgBuf.isEmpty()) {\n             productQueue.addAll(msgBuf);\n-            writeCounter += msgBuf.size();\n             msgBuf.clear();\n         }\n     }\n",
    "summaries": {
      "en": "Delete writeCounter counter",
      "zh": "删除writeCounter计数器"
    }
  },
  {
    "type": "refactor",
    "subtype": "Rx",
    "change": "diff --git a/client/src/main/java/com/metamx/druid/initialization/CuratorDiscoveryConfig.java b/client/src/main/java/com/metamx/druid/initialization/CuratorDiscoveryConfig.java\nindex ee0f7ce..4fc6c28 100644\n--- a/client/src/main/java/com/metamx/druid/initialization/CuratorDiscoveryConfig.java\n+++ b/client/src/main/java/com/metamx/druid/initialization/CuratorDiscoveryConfig.java\n@@ -23,7 +23,7 @@ import com.fasterxml.jackson.annotation.JsonProperty;\n \n /**\n  */\n-public abstract class CuratorDiscoveryConfig\n+public class CuratorDiscoveryConfig\n {\n   @JsonProperty\n   private String path = null;\n",
    "summaries": {
      "en": "Change abstract class CuratorDiscoveryConfig to regular class",
      "zh": "将抽象类 CuratorDiscoveryConfig 改为普通类"
    }
  },
  {
    "type": "fix",
    "subtype": "I2",
    "change": "diff --git a/deployment-scanner/src/main/java/org/jboss/as/server/deployment/scanner/DeploymentScannerDefinition.java b/deployment-scanner/src/main/java/org/jboss/as/server/deployment/scanner/DeploymentScannerDefinition.java\nindex 72c4a75958..57f1b5fd3b 100644\n--- a/deployment-scanner/src/main/java/org/jboss/as/server/deployment/scanner/DeploymentScannerDefinition.java\n+++ b/deployment-scanner/src/main/java/org/jboss/as/server/deployment/scanner/DeploymentScannerDefinition.java\n@@ -79,7 +79,7 @@ public class DeploymentScannerDefinition extends SimpleResourceDefinition {\n             new SimpleAttributeDefinitionBuilder(CommonAttributes.DEPLOYMENT_TIMEOUT, ModelType.LONG, true)\n                     .setXmlName(Attribute.DEPLOYMENT_TIMEOUT.getLocalName())\n                     .setAllowExpression(true)\n-                    .setDefaultValue(new ModelNode().set(60))\n+                    .setDefaultValue(new ModelNode().set(600))\n                     .build();\n     protected static final SimpleAttributeDefinition[] ALL_ATTRIBUTES = {PATH,RELATIVE_TO,SCAN_ENABLED,SCAN_INTERVAL,AUTO_DEPLOY_EXPLODED,AUTO_DEPLOY_XML,AUTO_DEPLOY_ZIPPED,DEPLOYMENT_TIMEOUT};\n \n",
    "summaries": {
      "en": "Change default value to 600",
      "zh": "更改默认值为600"
    }
  },
  {
    "type": "fix",
    "subtype": "I5",
    "change": "diff --git a/WordPress/src/main/java/org/wordpress/android/models/Person.java b/WordPress/src/main/java/org/wordpress/android/models/Person.java\nindex f0b651ead..8fb1b30c8 100644\n--- a/WordPress/src/main/java/org/wordpress/android/models/Person.java\n+++ b/WordPress/src/main/java/org/wordpress/android/models/Person.java\n@@ -13,13 +13,18 @@ public class Person {\n \n     private long personID;\n     private int localTableBlogId;\n-\n-    private String username;\n     private String displayName;\n     private String avatarUrl;\n+    private PersonType personType;\n+\n+    // Only users have a role\n     private String role;\n+\n+    // Users, followers & viewers has a username, email followers don't\n+    private String username;\n+\n+    // Only followers & email followers have a subscribed date\n     private String subscribed;\n-    private PersonType personType;\n \n     public Person(long personID, int localTableBlogId) {\n         this.personID = personID;\n",
    "summaries": {
      "en": "Change property position and add necessary comments",
      "zh": "更改属性位置并添加必要注释"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/media/packages/BluetoothMidiService/src/com/android/bluetoothmidiservice/BluetoothMidiDevice.java b/media/packages/BluetoothMidiService/src/com/android/bluetoothmidiservice/BluetoothMidiDevice.java\nindex e6d59e4..444705c 100644\n--- a/media/packages/BluetoothMidiService/src/com/android/bluetoothmidiservice/BluetoothMidiDevice.java\n+++ b/media/packages/BluetoothMidiService/src/com/android/bluetoothmidiservice/BluetoothMidiDevice.java\n@@ -147,14 +147,22 @@ public final class BluetoothMidiDevice {\n             // switch to receiving notifications after initial characteristic read\n             mBluetoothGatt.setCharacteristicNotification(characteristic, true);\n \n+            // Use writeType that requests acknowledgement.\n+            // This improves compatibility with various BLE-MIDI devices.\n+            int originalWriteType = characteristic.getWriteType();\n+            characteristic.setWriteType(BluetoothGattCharacteristic.WRITE_TYPE_DEFAULT);\n+\n             BluetoothGattDescriptor descriptor = characteristic.getDescriptor(\n                     CLIENT_CHARACTERISTIC_CONFIG);\n             if (descriptor != null) {\n                 descriptor.setValue(BluetoothGattDescriptor.ENABLE_NOTIFICATION_VALUE);\n-                mBluetoothGatt.writeDescriptor(descriptor);\n+                boolean result = mBluetoothGatt.writeDescriptor(descriptor);\n+                Log.d(TAG, \"writeDescriptor returned \" + result);\n             } else {\n                 Log.e(TAG, \"No CLIENT_CHARACTERISTIC_CONFIG for device \" + mBluetoothDevice);\n             }\n+\n+            characteristic.setWriteType(originalWriteType);\n         }\n \n         @Override\n",
    "summaries": {
      "en": "Ensure device compatibility using writeType",
      "zh": "使用writeType保证设备的兼容性"
    }
  },
  {
    "type": "test",
    "subtype": "T1",
    "change": "diff --git a/advanced/test/java/slavetest/StartHaDb.java b/advanced/test/java/slavetest/StartHaDb.java\nindex af84fa3..10a2d5f 100644\n--- a/advanced/test/java/slavetest/StartHaDb.java\n+++ b/advanced/test/java/slavetest/StartHaDb.java\n@@ -27,7 +27,8 @@ public class StartHaDb\n                 HighlyAvailableGraphDatabase.CONFIG_KEY_HA_MACHINE_ID, \"1\",\n                 HighlyAvailableGraphDatabase.CONFIG_KEY_HA_ZOO_KEEPER_SERVERS, join( StartZooKeeperServer.ZOO_KEEPER_SERVERS, \",\" ),\n                 HighlyAvailableGraphDatabase.CONFIG_KEY_HA_SERVERS, toHaServerFormat( HA_SERVERS ),\n-                \"enable_remote_shell\", \"true\" ) );\n+                \"enable_remote_shell\", \"true\",\n+                \"keep_logical_logs\", \"true\" ) );\n //        Runtime.getRuntime().addShutdownHook( new Thread()\n //        {\n //            public void run()\n",
    "summaries": {
      "en": "Preserve logical logs",
      "zh": "保留逻辑日志"
    }
  },
  {
    "type": "fix",
    "subtype": "I5",
    "change": "diff --git a/hystrix-core/src/main/java/com/netflix/hystrix/collapser/RequestBatch.java b/hystrix-core/src/main/java/com/netflix/hystrix/collapser/RequestBatch.java\nindex 5a14967..12a6fe9 100644\n--- a/hystrix-core/src/main/java/com/netflix/hystrix/collapser/RequestBatch.java\n+++ b/hystrix-core/src/main/java/com/netflix/hystrix/collapser/RequestBatch.java\n@@ -54,11 +54,12 @@ public class RequestBatch<BatchReturnType, ResponseType, RequestArgumentType> {\n          * The 'read' just means non-exclusive even though we are writing.\n          */\n         if (batchLock.readLock().tryLock()) {\n-            /* double-check now that we have the lock - if the batch is started we reject the offer */\n-            if (batchStarted.get()) {\n-                return null;\n-            }\n             try {\n+                /* double-check now that we have the lock - if the batch is started we reject the offer */\n+                if (batchStarted.get()) {\n+                    return null;\n+                }\n+\n                 int s = count.incrementAndGet();\n                 if (s > maxBatchSize) {\n                     return null;\n",
    "summaries": {
      "en": "Modified the position of the double-check logic judgment",
      "zh": "修改double-check逻辑判断的位置"
    }
  },
  {
    "type": "fix",
    "subtype": "I3",
    "change": "diff --git a/packages/DocumentsUI/src/com/android/documentsui/DirectoryFragment.java b/packages/DocumentsUI/src/com/android/documentsui/DirectoryFragment.java\nindex edf829d..253a4af 100644\n--- a/packages/DocumentsUI/src/com/android/documentsui/DirectoryFragment.java\n+++ b/packages/DocumentsUI/src/com/android/documentsui/DirectoryFragment.java\n@@ -1824,7 +1824,7 @@ public class DirectoryFragment extends Fragment {\n             // position by 1.\n             final int originalPos = position;\n             final int size = mMarkedForDeletion.size();\n-            for (int i = 0; i <= size; ++i) {\n+            for (int i = 0; i < size; ++i) {\n                 // It'd be more concise, but less efficient, to iterate over positions while calling\n                 // mMarkedForDeletion.get.  Instead, iterate over deleted entries.\n                 if (mMarkedForDeletion.keyAt(i) <= position && mMarkedForDeletion.valueAt(i)) {\n",
    "summaries": {
      "en": "Fix boundary issues in the loop",
      "zh": "修复循环中的边界问题"
    }
  },
  {
    "type": "style",
    "subtype": "S2",
    "change": "diff --git a/style_example.py b/style_example.py\nindex 73be197..6935954 100644\n--- a/style_example.py\n+++ b/style_example.py\n@@ -1,12 +1,15 @@\n def style_example():\n- print(\"This is a poorly styled function.\")\n+    print(\"This is a poorly styled function.\")\n  \n- if 1 < 2:\n- print(\"One is less than two.\")\n- elif 2 < 3:\n- print(\"Two is less than three.\")\n+    if 1 < 2:\n+        print(\"One is less than two.\")\n+    elif 2 < 3:\n+        print(\"Two is less than three.\")\n  \n- #This is a comment.\n- #This is another comment.\n+    # This is a comment.\n+    # This is another comment.\n  \n #This is a standalone comment.\n+    # This is a standalone comment.\n+\n+style_example()",
    "summaries": {
      "en": "Correct indentation of code",
      "zh": "正确缩进代码"
    }
  },
  {
    "type": "refactor",
    "subtype": "R5",
    "change": "diff --git a/core/java/android/provider/MediaStore.java b/core/java/android/provider/MediaStore.java\nindex b6f96c4..51d1951 100644\n--- a/core/java/android/provider/MediaStore.java\n+++ b/core/java/android/provider/MediaStore.java\n@@ -737,7 +737,7 @@ public final class MediaStore\n                     name.endsWith(\", a\") || name.endsWith(\",a\")) {\n                     name = name.substring(0, name.lastIndexOf(','));\n                 }\n-                name = name.replaceAll(\"[\\\\[\\\\]\\\\(\\\\)'.,?!]\", \"\").trim();\n+                name = name.replaceAll(\"[\\\\[\\\\]\\\\(\\\\)\\\"'.,?!]\", \"\").trim();\n                 if (name.length() > 0) {\n                     // Insert a separator between the characters to avoid\n                     // matches on a partial character. If we ever change\n",
    "summaries": {
      "en": "Added double quotes (\"\") to the regular expression",
      "zh": "添加了双引号（\"）到正则表达式中"
    }
  },
  {
    "type": "fix",
    "subtype": "I1",
    "change": "diff --git a/plugins/IntelliLang/src/org/intellij/plugins/intelliLang/InjectionsSettingsUI.java b/plugins/IntelliLang/src/org/intellij/plugins/intelliLang/InjectionsSettingsUI.java\nindex e65500c..d446925 100644\n--- a/plugins/IntelliLang/src/org/intellij/plugins/intelliLang/InjectionsSettingsUI.java\n+++ b/plugins/IntelliLang/src/org/intellij/plugins/intelliLang/InjectionsSettingsUI.java\n@@ -371,7 +371,7 @@ public class InjectionsSettingsUI implements Configurable {\n   private List<BaseInjection> getSelectedInjections() {\n     final ArrayList<BaseInjection> toRemove = new ArrayList<BaseInjection>();\n     for (int row : myInjectionsTable.getSelectedRows()) {\n-      toRemove.add(myInjectionsTable.getItems().get(row));\n+      toRemove.add(myInjectionsTable.getItems().get(myInjectionsTable.convertRowIndexToModel(row)));\n     }\n     return toRemove;\n   }\n@@ -379,7 +379,7 @@ public class InjectionsSettingsUI implements Configurable {\n   @Nullable\n   private BaseInjection getSelectedInjection() {\n     final int row = myInjectionsTable.getSelectedRow();\n-    return row < 0? null : myInjectionsTable.getItems().get(row);\n+    return row < 0? null : myInjectionsTable.getItems().get(myInjectionsTable.convertRowIndexToModel(row));\n   }\n \n   private void performAdd(final AnActionEvent e) {\n",
    "summaries": {
      "en": "Modified line index conversion in getSelectedInjections() and getSelectedInjection() methods",
      "zh": "修改 getSelectedInjections()和 getSelectedInjection()方法中的行索引转换"
    }
  },
  {
    "type": "feat",
    "subtype": "E1",
    "change": "diff --git a/sql/src/main/java/io/crate/action/job/ContextPreparer.java b/sql/src/main/java/io/crate/action/job/ContextPreparer.java\nindex e2476104d..88388e65a 100644\n--- a/sql/src/main/java/io/crate/action/job/ContextPreparer.java\n+++ b/sql/src/main/java/io/crate/action/job/ContextPreparer.java\n@@ -149,13 +149,22 @@ public class ContextPreparer {\n      */\n     private void postPrepare(JobExecutionContext.Builder contextBuilder,\n                              PreparerContext preparerContext) {\n-        while (!preparerContext.executionPhasesToProcess.isEmpty()) {\n+\n+        /**\n+         * if a phase has its upstream on the same node it might need to be processes 2 times\n+         * (the first time it might be skipped if the upstream hasn't been processed yet)\n+         */\n+        int reProcessLimit = preparerContext.executionPhasesToProcess.size() * 2;\n+        for (int i = 0; i < reProcessLimit && !preparerContext.executionPhasesToProcess.isEmpty(); i++) {\n             List<ExecutionPhase> executionPhasesToProcess = Lists.newArrayList(preparerContext.executionPhasesToProcess);\n             preparerContext.executionPhasesToProcess.clear();\n             for (ExecutionPhase executionPhase : executionPhasesToProcess) {\n                 processExecutionPhase(executionPhase, preparerContext, contextBuilder);\n             }\n         }\n+        if (!preparerContext.executionPhasesToProcess.isEmpty()) {\n+            throw new IllegalStateException(\"Aborted context preparation as an infinite loop was detected\");\n+        }\n     }\n \n     private void processExecutionPhase(ExecutionPhase executionPhase,\n",
    "summaries": {
      "en": "Add infinite loop protection for ContextPreparer",
      "zh": "为ContextPreparer添加无限循环保护"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/src/org/zaproxy/zap/utils/DesktopUtils.java b/src/org/zaproxy/zap/utils/DesktopUtils.java\nindex a3d4d68e..d2493a19 100644\n--- a/src/org/zaproxy/zap/utils/DesktopUtils.java\n+++ b/src/org/zaproxy/zap/utils/DesktopUtils.java\n@@ -13,7 +13,15 @@ import edu.stanford.ejalbert.exception.UnsupportedOperatingSystemException;\n public class DesktopUtils {\n \t\n \tprivate static enum BrowserInvoker {desktop, browserlauncher, none};\n+\n \tprivate static BrowserInvoker DEFAULT_INVOKER = BrowserInvoker.desktop;\n+\t// Initialize the default invoker to desktop, if it's supported\n+\tstatic {\n+\t\tif (Desktop.isDesktopSupported())\n+\t\t\tDEFAULT_INVOKER = BrowserInvoker.desktop;\n+\t\telse\n+\t\t\tDEFAULT_INVOKER = BrowserInvoker.browserlauncher;\n+\t}\n \n \tprivate static BrowserInvoker invoker = null; \n     private static BrowserLauncher launcher = null;\n@@ -21,6 +29,7 @@ public class DesktopUtils {\n     private static Logger log = Logger.getLogger(DesktopUtils.class);\n \n \tpublic static boolean openUrlInBrowser (URI uri) {\n+\t\t\n \t\ttry {\n \t\t\tswitch (getInvoker()) {\n \t\t\tcase desktop:\n",
    "summaries": {
      "en": "Add default browser invocation method",
      "zh": "添加默认浏览器调用方式"
    }
  },
  {
    "type": "refactor",
    "subtype": "R10",
    "change": "diff --git a/src/main/org/codehaus/groovy/reflection/ReflectionUtils.java b/src/main/org/codehaus/groovy/reflection/ReflectionUtils.java\nindex c64089537..0d2cbfb7d 100644\n--- a/src/main/org/codehaus/groovy/reflection/ReflectionUtils.java\n+++ b/src/main/org/codehaus/groovy/reflection/ReflectionUtils.java\n@@ -46,7 +46,6 @@ public class ReflectionUtils {\n             Class srr = Class.forName(\"sun.reflect.Reflection\");\r\n             meth = srr.getMethod(\"getCallerClass\", Integer.TYPE);\r\n         } catch (Throwable t) {\r\n-            t.printStackTrace(System.out);\r\n             meth = null;\r\n         }\r\n         magicMethod = meth;\r\n",
    "summaries": {
      "en": "Remove exception stack output",
      "zh": "删除异常堆栈输出"
    }
  },
  {
    "type": "fix",
    "subtype": "I5",
    "change": "diff --git a/engine/src/main/java/org/terasology/world/chunks/localChunkProvider/LocalChunkProvider.java b/engine/src/main/java/org/terasology/world/chunks/localChunkProvider/LocalChunkProvider.java\nindex c1edb4fa6..7baca9f01 100644\n--- a/engine/src/main/java/org/terasology/world/chunks/localChunkProvider/LocalChunkProvider.java\n+++ b/engine/src/main/java/org/terasology/world/chunks/localChunkProvider/LocalChunkProvider.java\n@@ -484,7 +484,6 @@ public class LocalChunkProvider implements ChunkProvider, GeneratingChunkProvide\n \n     @Override\n     public void dispose() {\n-        ChunkMonitor.fireChunkProviderDisposed(this);\n         pipeline.shutdown();\n         unloadRequestTaskMaster.shutdown(new ChunkUnloadRequest(), true);\n         lightMerger.shutdown();\n@@ -496,7 +495,11 @@ public class LocalChunkProvider implements ChunkProvider, GeneratingChunkProvide\n             store.save();\n         }\n         nearCache.clear();\n-\n+        /*\n+         * The chunk monitor needs to clear chunk references, so it's important\n+         * that no new chunk get created\n+         */\n+        ChunkMonitor.fireChunkProviderDisposed(this);\n     }\n \n     @Override\n",
    "summaries": {
      "en": "Adjusted function call to update LocalChunkProvider status",
      "zh": "调整了函数调用项以更新 LocalChunkProvider 状态"
    }
  },
  {
    "type": "refactor",
    "subtype": "R3",
    "change": "diff --git a/spring-security-oauth2/src/main/java/org/springframework/security/oauth2/provider/expression/OAuth2ExpressionParser.java b/spring-security-oauth2/src/main/java/org/springframework/security/oauth2/provider/expression/OAuth2ExpressionParser.java\nindex 571d8c01..86141196 100644\n--- a/spring-security-oauth2/src/main/java/org/springframework/security/oauth2/provider/expression/OAuth2ExpressionParser.java\n+++ b/spring-security-oauth2/src/main/java/org/springframework/security/oauth2/provider/expression/OAuth2ExpressionParser.java\n@@ -35,7 +35,8 @@ import org.springframework.util.Assert;\n  * @author Rob Winch\n  * \n  */\n-final class OAuth2ExpressionParser implements ExpressionParser {\n+public class OAuth2ExpressionParser implements ExpressionParser {\n+\n \tprivate final ExpressionParser delegate;\n \n \tpublic OAuth2ExpressionParser(ExpressionParser delegate) {\n",
    "summaries": {
      "en": "Remove final and make OAuth2ExpressionParser public",
      "zh": "OAuth2ExpressionParser去掉final并设为公开"
    }
  },
  {
    "type": "fix",
    "subtype": "I9",
    "change": "diff --git a/byte-buddy-agent/src/main/java/net/bytebuddy/agent/ByteBuddyAgent.java b/byte-buddy-agent/src/main/java/net/bytebuddy/agent/ByteBuddyAgent.java\nindex 373b8bfc06..c877385a52 100644\n--- a/byte-buddy-agent/src/main/java/net/bytebuddy/agent/ByteBuddyAgent.java\n+++ b/byte-buddy-agent/src/main/java/net/bytebuddy/agent/ByteBuddyAgent.java\n@@ -563,7 +563,7 @@ public class ByteBuddyAgent {\n                         @Override\n                         public Accessor resolve(Class<?> virtualMachineType) {\n                             try {\n-                                return new Simple(virtualMachineType, (String) getPid.invoke(current.invoke(STATIC_MEMBER)));\n+                                return new Simple(virtualMachineType, getPid.invoke(current.invoke(STATIC_MEMBER)).toString());\n                             } catch (IllegalAccessException exception) {\n                                 throw new UnsupportedOperationException(\"Not yet implemented\");\n                             } catch (InvocationTargetException exception) {\n",
    "summaries": {
      "en": "Avoid String type conversion errors",
      "zh": "避免String类型转换错误"
    }
  },
  {
    "type": "feat",
    "subtype": "E1",
    "change": "diff --git a/packages/PrintSpooler/src/com/android/printspooler/PrintSpoolerService.java b/packages/PrintSpooler/src/com/android/printspooler/PrintSpoolerService.java\nindex 609ae64..778fb4d 100644\n--- a/packages/PrintSpooler/src/com/android/printspooler/PrintSpoolerService.java\n+++ b/packages/PrintSpooler/src/com/android/printspooler/PrintSpoolerService.java\n@@ -544,7 +544,7 @@ public final class PrintSpoolerService extends Service {\n         final int printJobCount = mPrintJobs.size();\n         for (int i = 0; i < printJobCount; i++) {\n             PrintJobInfo printJob = mPrintJobs.get(i);\n-            if (isActiveState(printJob.getState())\n+            if (isActiveState(printJob.getState()) && printJob.getPrinterId() != null\n                     && printJob.getPrinterId().getServiceName().equals(service)) {\n                 return true;\n             }\n",
    "summaries": {
      "en": "Added null check for printJob.getPrinterId()",
      "zh": "添加对printJob.getPrinterId()的空指针检查"
    }
  },
  {
    "type": "fix",
    "subtype": "I3",
    "change": "diff --git a/src/com/owncloud/android/operations/SynchronizeFolderOperation.java b/src/com/owncloud/android/operations/SynchronizeFolderOperation.java\nindex 4c2030e87..b8da4a1fb 100644\n--- a/src/com/owncloud/android/operations/SynchronizeFolderOperation.java\n+++ b/src/com/owncloud/android/operations/SynchronizeFolderOperation.java\n@@ -404,7 +404,7 @@ public class SynchronizeFolderOperation extends SyncOperation {\n                     /// this should result in direct upload of files that were locally modified\n                     SynchronizeFileOperation operation = new SynchronizeFileOperation(\n                             child,\n-                            (child.getEtagInConflict() != null ? null : child),\n+                            (child.getEtagInConflict() != null ? child : null),\n                             mAccount,\n                             true,\n                             mContext\n",
    "summaries": {
      "en": "Fix logical error in conditional statement",
      "zh": "修复条件语句中的逻辑错误"
    }
  },
  {
    "type": "refactor",
    "subtype": "R3",
    "change": "diff --git a/hazelcast-client/src/main/java/com/hazelcast/client/spi/ProxyManager.java b/hazelcast-client/src/main/java/com/hazelcast/client/spi/ProxyManager.java\nindex 675db1c524..742c8728ff 100644\n--- a/hazelcast-client/src/main/java/com/hazelcast/client/spi/ProxyManager.java\n+++ b/hazelcast-client/src/main/java/com/hazelcast/client/spi/ProxyManager.java\n@@ -237,7 +237,7 @@ public final class ProxyManager {\n         return ListenerUtil.stopListening(clientContext, request, id);\n     }\n \n-    private class ClientProxyFuture {\n+    private static class ClientProxyFuture {\n \n         volatile ClientProxy proxy;\n \n",
    "summaries": {
      "en": "Change inner class to static inner class",
      "zh": "将内部类改为静态内部类"
    }
  },
  {
    "type": "build",
    "subtype": "B1",
    "change": "diff --git a/server/sonar-webserver-webapi/build.gradle b/server/sonar-webserver-webapi/build.gradle\nindex a4e223b..2ae902d 100644\n--- a/server/sonar-webserver-webapi/build.gradle\n+++ b/server/sonar-webserver-webapi/build.gradle\n@@ -39,7 +39,7 @@ dependencies {\n   testImplementation 'javax.servlet:javax.servlet-api'\n   testImplementation 'org.mockito:mockito-core'\n   testImplementation 'org.sonarsource.api.plugin:sonar-plugin-api-test-fixtures'\n-  testImplementation 'org.springframework:spring-test:${springVersion}'\n+  testImplementation 'org.springframework:spring-test'\n   testImplementation testFixtures(project(':server:sonar-server-common'))\n   testImplementation testFixtures(project(':server:sonar-webserver-auth'))\n   testImplementation testFixtures(project(':server:sonar-webserver-es'))",
    "summaries": {
      "en": "Remove redundant dependency version numbers",
      "zh": "删除多余的依赖版本号"
    }
  },
  {
    "type": "fix",
    "subtype": "I3",
    "change": "diff --git a/core/java/android/webkit/WebView.java b/core/java/android/webkit/WebView.java\nindex 9ac91ac..de263b1 100644\n--- a/core/java/android/webkit/WebView.java\n+++ b/core/java/android/webkit/WebView.java\n@@ -4656,7 +4656,7 @@ public class WebView extends AbsoluteLayout\n             return false;\n         }\n \n-        if (isEnterActionKey(keyCode)) {\n+        if (keyCode == KeyEvent.KEYCODE_DPAD_CENTER) {\n             switchOutDrawHistory();\n             boolean wantsKeyEvents = nativeCursorNodePointer() == 0\n                 || nativeCursorWantsKeyEvents();\n",
    "summaries": {
      "en": "Modified keyboard event handling logic",
      "zh": "修改键盘事件处理逻辑"
    }
  },
  {
    "type": "refactor",
    "subtype": "R10",
    "change": "diff --git a/bundles/binding/org.openhab.binding.fs20/src/main/java/org/openhab/binding/fs20/internal/FS20Binding.java b/bundles/binding/org.openhab.binding.fs20/src/main/java/org/openhab/binding/fs20/internal/FS20Binding.java\nindex 71531e9..9c16082 100644\n--- a/bundles/binding/org.openhab.binding.fs20/src/main/java/org/openhab/binding/fs20/internal/FS20Binding.java\n+++ b/bundles/binding/org.openhab.binding.fs20/src/main/java/org/openhab/binding/fs20/internal/FS20Binding.java\n@@ -76,12 +76,7 @@ public class FS20Binding extends AbstractActiveBinding<FS20BindingProvider>\n \t}\n \n \tpublic void activate() {\n-\t\tif (StringUtils.isEmpty(deviceName)) {\n-\t\t\tlogger.error(\"Device name not configured, can't start the FS20 binding\");\n-\t\t\treturn;\n-\t\t}\n \t\tlogger.debug(\"Activating FS20 binding\");\n-\t\tgetCULHandler();\n \t}\n \n \tprivate void setNewDeviceName(String deviceName) {\n",
    "summaries": {
      "en": "Deleted check for device name",
      "zh": "删除了设备名称的检查"
    }
  },
  {
    "type": "refactor",
    "subtype": "R3",
    "change": "diff --git a/compiler/src/main/java/org/robovm/compiler/ClassCompiler.java b/compiler/src/main/java/org/robovm/compiler/ClassCompiler.java\nindex 56f367fb4..3603a9117 100644\n--- a/compiler/src/main/java/org/robovm/compiler/ClassCompiler.java\n+++ b/compiler/src/main/java/org/robovm/compiler/ClassCompiler.java\n@@ -335,7 +335,7 @@ public class ClassCompiler {\n                 String triple = config.getTriple();\n                 Target target = Target.lookupTarget(triple);\n                 try (TargetMachine targetMachine = target.createTargetMachine(triple,\n-                        config.getArch().getLlvmCpu(), null, config.isDebug()? CodeGenOptLevel.CodeGenLevelNone: null, null, null)) {\n+                        config.getArch().getLlvmCpu(), null, config.isDebug()? CodeGenOptLevel.CodeGenLevelDefault: null, null, null)) {\n                     targetMachine.setAsmVerbosityDefault(true);\n                     targetMachine.setFunctionSections(true);\n                     targetMachine.setDataSections(true);\n",
    "summaries": {
      "en": "Revert to using default code generation optimization level",
      "zh": "再次使用默认的代码生成优化级别"
    }
  },
  {
    "type": "fix",
    "subtype": "I5",
    "change": "diff --git a/src/main/java/hex/CoxPH.java b/src/main/java/hex/CoxPH.java\nindex ec111ce08..701725496 100644\n--- a/src/main/java/hex/CoxPH.java\n+++ b/src/main/java/hex/CoxPH.java\n@@ -599,12 +599,12 @@ public class CoxPH extends Job {\n \n       final double newLoglik = model.calcLoglik(coxMR);\n       if (newLoglik > oldLoglik) {\n-        model.calcModelStats(newCoef, newLoglik);\n-        model.calcCumhaz_0(coxMR);\n-\n         if (i == 0)\n           model.calcCounts(coxMR);\n \n+        model.calcModelStats(newCoef, newLoglik);\n+        model.calcCumhaz_0(coxMR);\n+\n         if (newLoglik == 0)\n           model.lre = - Math.log10(Math.abs(oldLoglik - newLoglik));\n         else\n",
    "summaries": {
      "en": "Rearrange the calculation order of summary statistics in Cox PH",
      "zh": "重新排列Cox PH中摘要统计数据的计算顺序"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/enterprise/ha/src/test/java/org/neo4j/kernel/ha/BiggerThanLogTxIT.java b/enterprise/ha/src/test/java/org/neo4j/kernel/ha/BiggerThanLogTxIT.java\nindex a8478e8..7836873 100644\n--- a/enterprise/ha/src/test/java/org/neo4j/kernel/ha/BiggerThanLogTxIT.java\n+++ b/enterprise/ha/src/test/java/org/neo4j/kernel/ha/BiggerThanLogTxIT.java\n@@ -129,6 +129,35 @@ public class BiggerThanLogTxIT\n     {\n         for ( GraphDatabaseService db : cluster.getAllMembers() )\n         {\n+            // Try again with sync, it will clear up...\n+            if ( expectedNodeCount != nodeCount( db ) )\n+            {\n+                for ( int i = 0; i < 100; i++ )\n+                {\n+                    try\n+                    {\n+                        Thread.sleep(1000);\n+                    }\n+                    catch ( InterruptedException e )\n+                    {\n+                        throw new RuntimeException( e );\n+                    }\n+\n+                    int count = nodeCount( db );\n+                    if (expectedNodeCount == count)\n+                        break;\n+\n+                    try\n+                    {\n+                        cluster.sync(  );\n+                    }\n+                    catch ( InterruptedException e )\n+                    {\n+                        throw new RuntimeException( e );\n+                    }\n+                }\n+            }\n+\n             assertEquals( expectedNodeCount, nodeCount( db ) );\n         }\n     }\n",
    "summaries": {
      "en": "Added a loop to attempt synchronization until the correct number of nodes is reached",
      "zh": "增加了一个循环，在循环中尝试同步，直到节点数量正确为止"
    }
  },
  {
    "type": "refactor",
    "subtype": "R3",
    "change": "diff --git a/core/src/main/java/tachyon/master/JsonObject.java b/core/src/main/java/tachyon/master/JsonObject.java\nindex 9047fda..1f5c26d 100644\n--- a/core/src/main/java/tachyon/master/JsonObject.java\n+++ b/core/src/main/java/tachyon/master/JsonObject.java\n@@ -24,9 +24,9 @@ abstract class JsonObject {\n         SerializationFeature.CLOSE_CLOSEABLE, false);\n   }\n \n-  public Map<String, Object> parameters = Maps.newHashMap();\n+  private static final ObjectMapper OBJECT_MAPPER = createObjectMapper();\n \n-  private final ObjectMapper objectMapper = createObjectMapper();\n+  public Map<String, Object> parameters = Maps.newHashMap();\n \n   /**\n    * Generic parameter getter, useful for custom classes or enums.\n@@ -36,8 +36,8 @@ abstract class JsonObject {\n   public <T> T get(String name, Class<T> clazz) {\n     Object value = parameters.get(name);\n     try {\n-      String stringValue = objectMapper.writeValueAsString(value);\n-      return objectMapper.readValue(stringValue.getBytes(), clazz);\n+      String stringValue = OBJECT_MAPPER.writeValueAsString(value);\n+      return OBJECT_MAPPER.readValue(stringValue.getBytes(), clazz);\n     } catch (Exception e) {\n       // fail, lets try cast it\n       return (T) value;\n",
    "summaries": {
      "en": "Change the ObjectMapper instance in JsonObject class to a static constant",
      "zh": "更改 JsonObject 类中的 ObjectMapper 实例为静态常量"
    }
  },
  {
    "type": "fix",
    "subtype": "I5",
    "change": "diff --git a/src/java/org/jivesoftware/openfire/SessionManager.java b/src/java/org/jivesoftware/openfire/SessionManager.java\nindex 76189b998..8c819dadb 100644\n--- a/src/java/org/jivesoftware/openfire/SessionManager.java\n+++ b/src/java/org/jivesoftware/openfire/SessionManager.java\n@@ -548,10 +548,10 @@ public class SessionManager extends BasicModule implements ClusterEventListener\n      * @param session the session that was authenticated.\r\n      */\r\n     public void addSession(LocalClientSession session) {\r\n-        // Remove the pre-Authenticated session but remember to use the temporary ID as the key\r\n-        localSessionManager.getPreAuthenticatedSessions().remove(session.getStreamID().toString());\r\n         // Add session to the routing table (routing table will know session is not available yet)\r\n         routingTable.addClientRoute(session.getAddress(), session);\r\n+        // Remove the pre-Authenticated session but remember to use the temporary ID as the key\r\n+        localSessionManager.getPreAuthenticatedSessions().remove(session.getStreamID().toString());\r\n         SessionEventDispatcher.EventType event = session.getAuthToken().isAnonymous() ?\r\n                 SessionEventDispatcher.EventType.anonymous_session_created :\r\n                 SessionEventDispatcher.EventType.session_created;\r\n",
    "summaries": {
      "en": "Remove session should be executed after session is added",
      "zh": "移除会话应该放在会话添加后执行"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/plugins/git4idea/src/git4idea/crlf/GitCrlfDialog.java b/plugins/git4idea/src/git4idea/crlf/GitCrlfDialog.java\nindex 2bc9f8e..4f50735 100644\n--- a/plugins/git4idea/src/git4idea/crlf/GitCrlfDialog.java\n+++ b/plugins/git4idea/src/git4idea/crlf/GitCrlfDialog.java\n@@ -60,7 +60,7 @@ public class GitCrlfDialog extends DialogWrapper {\n \n   @Override\n   protected Action[] createActions() {\n-    return new Action[] { getOKAction(), getCancelAction(), new DialogWrapperExitAction(\"Commit As Is\", DONT_SET) };\n+    return new Action[] { getHelpAction(), getOKAction(), getCancelAction(), new DialogWrapperExitAction(\"Commit As Is\", DONT_SET) };\n   }\n \n   @Override\n@@ -105,4 +105,10 @@ public class GitCrlfDialog extends DialogWrapper {\n     return myDontWarn.isSelected();\n   }\n \n+  @Nullable\n+  @Override\n+  protected String getHelpId() {\n+    return \"reference.VersionControl.Git.CrlfWarning\";\n+  }\n+\n }\n",
    "summaries": {
      "en": "Added a help button getHelpAction() and set the associated help ID",
      "zh": "添加了一个帮助按钮getHelpAction()，并设置了关联的帮助ID"
    }
  },
  {
    "type": "cicd",
    "subtype": "C2",
    "change": "diff --git a/.gitlab-ci.yml b/.gitlab-ci.yml\nindex 3e5f6a9..2b763ed 100644\n--- a/.gitlab-ci.yml\n+++ b/.gitlab-ci.yml\n@@ -1,6 +1,6 @@\n image: node:14\n \n-test:\n+tests:\n   script:\n     - npm install\n     - npm run test\n@@ -8,3 +8,20 @@ test:\n   only:\n     - main\n     - merge_requests\n+\n+code_scan:\n+  image: sonarsource/sonar-scanner-cli\n+  script:\n+    - sonar-scanner\n+  only:\n+    - main\n+    - merge_requests\n+    - feature/*\n+\n+security_scan:\n+  image: aquasec/trivy:latest\n+  script:\n+    - trivy filesystem --exit-code 1 --no-progress /\n+  only:\n+    - main\n+    - merge_requests",
    "summaries": {
      "en": "Support code scanning and security detection",
      "zh": "支持代码扫描和安全检测"
    }
  },
  {
    "type": "style",
    "subtype": "Sx",
    "change": "diff --git a/previous.rb b/current.rb\nindex e69de29bb2d1d6434..a5b5c5bc6ab8e716a 100644\n--- a/previous.rb\n+++ b/current.rb\n@@ -1,16 +1,16 @@\n-def foo_bar(a, b, c)\n+def foo_bar(a,\n+            b,\n+            c)\n   if a > 5\n-    puts \"a is bigger than 5\"\n-  else\n-    puts \"a is not bigger than 5\"\n+    puts 'a is bigger than 5'\n   else\n+    puts 'a is not bigger than 5'\n   end\n\n-  if b > 10\n-    puts \"b is bigger than 10\"\n-  else\n-    puts \"b is not bigger than 10\"\n+  if b > 10 \n+    puts 'b is bigger than 10'\n   else\n+    puts 'b is not bigger than 10'\n   end\n\n   if c > 15\n@@ -20,4 +16,4 @@\n   else\n     puts \"c is not bigger than 15\"\n   end\n-end\n+end",
    "summaries": {
      "en": "Unify code style by using single quotes",
      "zh": "使用单引号以统一代码风格"
    }
  },
  {
    "type": "fix",
    "subtype": "I3",
    "change": "diff --git a/src/main/java/com/tinkerpop/gremlin/pipes/GremlinPipeline.java b/src/main/java/com/tinkerpop/gremlin/pipes/GremlinPipeline.java\nindex 5cd55990..25915002 100644\n--- a/src/main/java/com/tinkerpop/gremlin/pipes/GremlinPipeline.java\n+++ b/src/main/java/com/tinkerpop/gremlin/pipes/GremlinPipeline.java\n@@ -74,7 +74,8 @@ public class GremlinPipeline<S, E> implements Pipe<S, E>, MetaPipe {\n         for (final Pipe subPipe : metaPipe.getPipes()) {\n             if (subPipe instanceof AsPipe) {\n                 asPipes.add((AsPipe) subPipe);\n-            } else if (subPipe instanceof MetaPipe) {\n+            }\n+            if (subPipe instanceof MetaPipe) {\n                 asPipes.addAll(this.getAsPipes((MetaPipe) subPipe));\n             }\n         }\n",
    "summaries": {
      "en": "Replace the else if branch with an if statement",
      "zh": "将else if分支替换为if判断"
    }
  },
  {
    "type": "fix",
    "subtype": "I7",
    "change": "diff --git a/src/org/openintents/openpgp/OpenPgpSignatureResult.java b/src/org/openintents/openpgp/OpenPgpSignatureResult.java\nindex 3b78abcf..8ce4d3c0 100644\n--- a/src/org/openintents/openpgp/OpenPgpSignatureResult.java\n+++ b/src/org/openintents/openpgp/OpenPgpSignatureResult.java\n@@ -156,6 +156,7 @@ public class OpenPgpSignatureResult implements Parcelable {\n             vr.signatureOnly = source.readByte() == 1;\n             vr.primaryUserId = source.readString();\n             vr.keyId = source.readLong();\n+            vr.userIds = new ArrayList<String>();\n             source.readStringList(vr.userIds);\n \n             // skip over all fields added in future versions of this parcel\n",
    "summaries": {
      "en": "Add a line of code before vr.userIds to create an instance of vr.userIds",
      "zh": "在vr.userIds之前添加一行代码以创建vr.userIds的实例"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/media/java/android/mtp/MtpDatabase.java b/media/java/android/mtp/MtpDatabase.java\nold mode 100644\nnew mode 100755\nindex 4e271c7..98617d2\n--- a/media/java/android/mtp/MtpDatabase.java\n+++ b/media/java/android/mtp/MtpDatabase.java\n@@ -38,6 +38,7 @@ import android.view.WindowManager;\n \n import java.io.File;\n import java.util.HashMap;\n+import java.util.Locale;\n \n /**\n  * {@hide}\n@@ -120,6 +121,20 @@ public class MtpDatabase {\n         mMediaStoragePath = storagePath;\n         mObjectsUri = Files.getMtpObjectsUri(volumeName);\n         mMediaScanner = new MediaScanner(context);\n+\n+        // Set locale to MediaScanner.\n+        Locale locale = context.getResources().getConfiguration().locale;\n+        if (locale != null) {\n+            String language = locale.getLanguage();\n+            String country = locale.getCountry();\n+            if (language != null) {\n+                if (country != null) {\n+                    mMediaScanner.setLocale(language + \"_\" + country);\n+                } else {\n+                    mMediaScanner.setLocale(language);\n+                }\n+            }\n+        }\n         initDeviceProperties(context);\n     }\n \n",
    "summaries": {
      "en": "Set localization language for MediaScanner",
      "zh": "为MediaScanner设置本地化语言"
    }
  },
  {
    "type": "refactor",
    "subtype": "R3",
    "change": "diff --git a/plugins/github/src/org/jetbrains/plugins/github/api/GithubApiUtil.java b/plugins/github/src/org/jetbrains/plugins/github/api/GithubApiUtil.java\nindex 9029cd8..b8cf537 100644\n--- a/plugins/github/src/org/jetbrains/plugins/github/api/GithubApiUtil.java\n+++ b/plugins/github/src/org/jetbrains/plugins/github/api/GithubApiUtil.java\n@@ -292,7 +292,7 @@ public class GithubApiUtil {\n     try {\n       return new JsonParser().parse(reader);\n     }\n-    catch (JsonSyntaxException jse) {\n+    catch (JsonParseException jse) {\n       throw new GithubJsonException(\"Couldn't parse GitHub response\", jse);\n     }\n     finally {\n",
    "summaries": {
      "en": "Modified exception type from JsonSyntaxException to JsonParseException",
      "zh": "修改异常捕捉类型，从JsonSyntaxException修改为JsonParseException"
    }
  },
  {
    "type": "refactor",
    "subtype": "R10",
    "change": "diff --git a/src/com/google/zxing/client/android/LocaleManager.java b/src/com/google/zxing/client/android/LocaleManager.java\nindex 305df2c..ea2b1f2 100644\n--- a/src/com/google/zxing/client/android/LocaleManager.java\n+++ b/src/com/google/zxing/client/android/LocaleManager.java\n@@ -77,13 +77,11 @@ public final class LocaleManager {\n     GOOGLE_PRODUCT_SEARCH_COUNTRY_TLD.put(Locale.UK, \"co.uk\");\n   }\n \n-  // TODO(dswitkin): Not sure which countries Google Book Search has launched in, so for the moment\n-  // we'll keep everything in web search minus China as with v3.5.\n+  // Book search is offered everywhere that web search is available.\n   private static final Map<Locale,String> GOOGLE_BOOK_SEARCH_COUNTRY_TLD;\n   static {\n     GOOGLE_BOOK_SEARCH_COUNTRY_TLD = new HashMap<Locale,String>();\n     GOOGLE_BOOK_SEARCH_COUNTRY_TLD.putAll(GOOGLE_COUNTRY_TLD);\n-    GOOGLE_BOOK_SEARCH_COUNTRY_TLD.remove(Locale.CHINA);\n   }\n \n   private LocaleManager() {}\n",
    "summaries": {
      "en": "Updated our list of countries for book search",
      "zh": "更新了我们的图书搜索国家列表"
    }
  },
  {
    "type": "fix",
    "subtype": "Ix",
    "change": "diff --git a/core/src/main/java/com/orientechnologies/orient/core/db/record/ORecordLazySet.java b/core/src/main/java/com/orientechnologies/orient/core/db/record/ORecordLazySet.java\nindex dedc008..715e39e 100644\n--- a/core/src/main/java/com/orientechnologies/orient/core/db/record/ORecordLazySet.java\n+++ b/core/src/main/java/com/orientechnologies/orient/core/db/record/ORecordLazySet.java\n@@ -23,6 +23,7 @@ import java.util.Iterator;\n import java.util.Set;\r\n \r\n import com.orientechnologies.orient.core.config.OGlobalConfiguration;\r\n+import com.orientechnologies.orient.core.db.ODatabaseRecordThreadLocal;\r\n import com.orientechnologies.orient.core.id.ORID;\r\n import com.orientechnologies.orient.core.record.ORecord;\r\n import com.orientechnologies.orient.core.record.ORecordInternal;\r\n@@ -87,7 +88,7 @@ public class ORecordLazySet implements Set<OIdentifiable>, ORecordLazyMultiValue\n \tpublic Iterator<OIdentifiable> iterator() {\r\n \t\tif (hasNewItems()) {\r\n \t\t\tlazyLoad(false);\r\n-\t\t\treturn new OLazyRecordMultiIterator(delegate.sourceRecord, delegate.database, delegate.recordType, new Object[] {\r\n+\t\t\treturn new OLazyRecordMultiIterator(delegate.sourceRecord, ODatabaseRecordThreadLocal.INSTANCE.get(), delegate.recordType, new Object[] {\r\n \t\t\t\t\tdelegate.iterator(), newItems.keySet().iterator() }, delegate.autoConvertToRecord);\r\n \t\t}\r\n \t\treturn delegate.iterator();\r\n",
    "summaries": {
      "en": "Fix remote index issue",
      "zh": "修复远程索引问题"
    }
  },
  {
    "type": "refactor",
    "subtype": "R10",
    "change": "diff --git a/bundles/archetype/org.openhab.archetype.binding/src/main/resources/archetype-resources/src/main/java/internal/__binding-name__Binding.java b/bundles/archetype/org.openhab.archetype.binding/src/main/resources/archetype-resources/src/main/java/internal/__binding-name__Binding.java\nindex 04a1110..53b0d15 100644\n--- a/bundles/archetype/org.openhab.archetype.binding/src/main/resources/archetype-resources/src/main/java/internal/__binding-name__Binding.java\n+++ b/bundles/archetype/org.openhab.archetype.binding/src/main/resources/archetype-resources/src/main/java/internal/__binding-name__Binding.java\n@@ -73,7 +73,7 @@ public class ${binding-name}Binding extends AbstractActiveBinding<${binding-name\n \t}\n \t\n \tpublic void deactivate() {\n-\t\t// deallocate Resources here that are no longer needed and \n+\t\t// deallocate resources here that are no longer needed and \n \t\t// should be reset when activating this binding again\n \t}\n \n@@ -124,19 +124,7 @@ public class ${binding-name}Binding extends AbstractActiveBinding<${binding-name\n \t\t// BindingProviders provide a binding for the given 'itemName'.\n \t\tlogger.debug(\"internalReceiveCommand() is called!\");\n \t}\n-\t\n-\t\n-\t/**\n-\t * NOTE: REMOVE THIS OVERRIDDEN METHOD WHEN IMPLEMENTING YOUR OWN BINDING!\n-\t * THIS IS ONLY DONE FOR DEMO PURPOSE!!\n-\t */\n-\t@Override\n-\tprotected boolean providesBindingFor(String itemName) {\n-\t\t// REMOVE THIS CODE WHEN IMPLEMENTIING YOUR OWN BINDING!\n-\t\treturn true;\n-\t}\n-\t\n-\t\n+\t\t\n \t/**\n \t * @{inheritDoc}\n \t */\n",
    "summaries": {
      "en": "Delete unnecessary comments and methods",
      "zh": "删除不需要的注释和方法"
    }
  },
  {
    "type": "feat",
    "subtype": "E2",
    "change": "diff --git a/src/main/org/codehaus/groovy/runtime/Invoker.java b/src/main/org/codehaus/groovy/runtime/Invoker.java\nindex 6086ba886..03e50cc81 100644\n--- a/src/main/org/codehaus/groovy/runtime/Invoker.java\n+++ b/src/main/org/codehaus/groovy/runtime/Invoker.java\n@@ -46,6 +46,7 @@\n package org.codehaus.groovy.runtime;\n \n import groovy.lang.Closure;\n+import groovy.lang.GString;\n import groovy.lang.GroovyObject;\n import groovy.lang.GroovyRuntimeException;\n import groovy.lang.MetaClass;\n@@ -497,6 +498,9 @@ public class Invoker {\n             else if (left instanceof String && right instanceof Character) {\n                 return ((String) left).compareTo(right.toString());\n             }\n+            else if (left instanceof String && right instanceof GString) {\n+                return ((String) left).compareTo(right.toString());\n+            }\n             Comparable comparable = (Comparable) left;\n             return comparable.compareTo(right);\n         }\n",
    "summaries": {
      "en": "Add support for GString type",
      "zh": "增加对 GString 类型的支持"
    }
  },
  {
    "type": "test",
    "subtype": "T1",
    "change": "diff --git a/trunk/JLanguageTool/src/test/de/danielnaber/languagetool/synthesis/en/EnglishSynthesizerTest.java b/trunk/JLanguageTool/src/test/de/danielnaber/languagetool/synthesis/en/EnglishSynthesizerTest.java\nindex 039aa4c45c..76c5218583 100644\n--- a/trunk/JLanguageTool/src/test/de/danielnaber/languagetool/synthesis/en/EnglishSynthesizerTest.java\n+++ b/trunk/JLanguageTool/src/test/de/danielnaber/languagetool/synthesis/en/EnglishSynthesizerTest.java\n@@ -26,6 +26,7 @@ public class EnglishSynthesizerTest extends TestCase {\n     //with special indefinite article\n     assertEquals(\"[a university, the university]\", Arrays.toString(synth.synthesize(dummyToken(\"university\"), \"+DT\", false)));\n     assertEquals(\"[an hour, the hour]\", Arrays.toString(synth.synthesize(dummyToken(\"hour\"), \"+DT\", false)));\n+    assertEquals(\"[an hour]\", Arrays.toString(synth.synthesize(dummyToken(\"hour\"), \"+INDT\", false)));\n   }\n \n }\n",
    "summaries": {
      "en": "Add test cases",
      "zh": "添加测试用例"
    }
  },
  {
    "type": "test",
    "subtype": "T1",
    "change": "diff --git a/spring-boot-integration-tests/spring-boot-gradle-tests/src/test/java/org/springframework/boot/gradle/WarPackagingTests.java b/spring-boot-integration-tests/spring-boot-gradle-tests/src/test/java/org/springframework/boot/gradle/WarPackagingTests.java\nindex 88971fa..3cc1ec2 100644\n--- a/spring-boot-integration-tests/spring-boot-gradle-tests/src/test/java/org/springframework/boot/gradle/WarPackagingTests.java\n+++ b/spring-boot-integration-tests/spring-boot-gradle-tests/src/test/java/org/springframework/boot/gradle/WarPackagingTests.java\n@@ -46,8 +46,7 @@ public class WarPackagingTests {\n \n \tprivate static final Set<String> TOMCAT_EXPECTED_IN_WEB_INF_LIB_PROVIDED = new HashSet<String>(\n \t\t\tArrays.asList(\"spring-boot-starter-tomcat-\", \"tomcat-embed-core-\",\n-\t\t\t\t\t\"tomcat-embed-el-\", \"tomcat-embed-logging-juli-\",\n-\t\t\t\t\t\"tomcat-embed-websocket-\"));\n+\t\t\t\t\t\"tomcat-embed-el-\", \"tomcat-embed-websocket-\"));\n \n \tprivate static final Set<String> JETTY_EXPECTED_IN_WEB_INF_LIB_PROVIDED = new HashSet<String>(\n \t\t\tArrays.asList(\"spring-boot-starter-jetty-\", \"jetty-continuation\",\n",
    "summaries": {
      "en": "Delete tomcat-embed-logging-juli-",
      "zh": "删除tomcat-embed-logging-juli-"
    }
  },
  {
    "type": "build",
    "subtype": "B1",
    "change": "diff --git a/lib/trino-plugin-toolkit/pom.xml b/lib/trino-plugin-toolkit/pom.xml\nindex 169437f..f404889 100644\n--- a/lib/trino-plugin-toolkit/pom.xml\n+++ b/lib/trino-plugin-toolkit/pom.xml\n@@ -5,7 +5,7 @@\n     <parent>\n         <groupId>io.trino</groupId>\n         <artifactId>trino-root</artifactId>\n-        <version>416</version>\n+        <version>417-SNAPSHOT</version>\n         <relativePath>../../pom.xml</relativePath>\n     </parent>\n ",
    "summaries": {
      "en": "Update trino-root version to 417-SNAPSHOT",
      "zh": "更新trino-root版本号为417-SNAPSHOT"
    }
  },
  {
    "type": "docs",
    "subtype": "D2",
    "change": "diff --git a/bundles/binding/org.openhab.binding.jointspace/src/main/java/org/openhab/binding/jointspace/JointSpaceBindingProvider.java b/bundles/binding/org.openhab.binding.jointspace/src/main/java/org/openhab/binding/jointspace/JointSpaceBindingProvider.java\nindex e8b86d7..e8b5526 100644\n--- a/bundles/binding/org.openhab.binding.jointspace/src/main/java/org/openhab/binding/jointspace/JointSpaceBindingProvider.java\n+++ b/bundles/binding/org.openhab.binding.jointspace/src/main/java/org/openhab/binding/jointspace/JointSpaceBindingProvider.java\n@@ -18,7 +18,7 @@ import org.openhab.core.binding.BindingProvider;\n public interface JointSpaceBindingProvider extends BindingProvider {\n \t\n \t/**\n-\t * Returns the TV Command string that is stored for given @see itemName in response to a given @see command\n+\t * Returns the TV Command string that is stored for given @code itemName in response to a given @code command\n \t * @param itemName\n \t * @param command\n \t * @return Stored string, or null if unknown combination of itemName and command\n",
    "summaries": {
      "en": "Replace \"see\" with \"code\"",
      "zh": "将 see 替换为 code"
    }
  },
  {
    "type": "fix",
    "subtype": "I3",
    "change": "diff --git a/modules/elasticsearch/src/main/java/org/elasticsearch/common/util/concurrent/TransferThreadPoolExecutor.java b/modules/elasticsearch/src/main/java/org/elasticsearch/common/util/concurrent/TransferThreadPoolExecutor.java\nindex c497190..bb5fe3a 100644\n--- a/modules/elasticsearch/src/main/java/org/elasticsearch/common/util/concurrent/TransferThreadPoolExecutor.java\n+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/util/concurrent/TransferThreadPoolExecutor.java\n@@ -496,7 +496,7 @@ public class TransferThreadPoolExecutor extends AbstractExecutorService {\n         mainLock.lock();\n         boolean canExit;\n         try {\n-            canExit = runState >= STOP || queueSize.get() == 0;\n+            canExit = runState >= STOP || (queueSize.get() == 0 && poolSize.get() > corePoolSize);\n         } finally {\n             mainLock.unlock();\n         }\n",
    "summaries": {
      "en": "Added (poolSize.get() > corePoolSize) as a condition in the judgment",
      "zh": "在判断条件中增加了(poolSize.get() > corePoolSize)作为一个条件"
    }
  },
  {
    "type": "test",
    "subtype": "T1",
    "change": "diff --git a/src/test/java/org/elasticsearch/test/unit/node/internal/InternalSettingsPerparerTests.java b/src/test/java/org/elasticsearch/test/unit/node/internal/InternalSettingsPerparerTests.java\nindex 69f540c..9e44eb0 100644\n--- a/src/test/java/org/elasticsearch/test/unit/node/internal/InternalSettingsPerparerTests.java\n+++ b/src/test/java/org/elasticsearch/test/unit/node/internal/InternalSettingsPerparerTests.java\n@@ -23,6 +23,8 @@ import org.elasticsearch.common.collect.Tuple;\n import org.elasticsearch.common.settings.Settings;\n import org.elasticsearch.env.Environment;\n import org.elasticsearch.node.internal.InternalSettingsPerparer;\n+import org.testng.annotations.AfterMethod;\n+import org.testng.annotations.BeforeMethod;\n import org.testng.annotations.Test;\n \n import static org.elasticsearch.common.settings.ImmutableSettings.settingsBuilder;\n@@ -30,9 +32,18 @@ import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.Matchers.equalTo;\n \n public class InternalSettingsPerparerTests {\n+    @BeforeMethod\n+    public void setupSystemProperties() {\n+        System.setProperty(\"es.node.zone\", \"foo\");\n+    }\n+\n+    @AfterMethod\n+    public void cleanupSystemProperties() {\n+        System.clearProperty(\"es.node.zone\");\n+    }\n+\n     @Test\n     public void testIgnoreSystemProperties() {\n-        System.setProperty(\"es.node.zone\", \"foo\");\n         Tuple<Settings, Environment> tuple = InternalSettingsPerparer.prepareSettings(settingsBuilder().put(\"node.zone\", \"bar\").build(), true);\n         // Should use setting from the system property\n         assertThat(tuple.v1().get(\"node.zone\"), equalTo(\"foo\"));\n",
    "summaries": {
      "en": "Add @BeforeMethod and @AfterMethod annotations to set and clear system properties",
      "zh": "添加 @BeforeMethod 和 @AfterMethod 注解以设置和清除系统属性"
    }
  },
  {
    "type": "fix",
    "subtype": "I2",
    "change": "diff --git a/hazelcast/src/main/java/com/hazelcast/multimap/impl/operations/RemoveAllOperation.java b/hazelcast/src/main/java/com/hazelcast/multimap/impl/operations/RemoveAllOperation.java\nindex 748f2349c5..c1aadbaa24 100644\n--- a/hazelcast/src/main/java/com/hazelcast/multimap/impl/operations/RemoveAllOperation.java\n+++ b/hazelcast/src/main/java/com/hazelcast/multimap/impl/operations/RemoveAllOperation.java\n@@ -60,7 +60,8 @@ public class RemoveAllOperation extends MultiMapBackupAwareOperation {\n     }\n \n     public void onWaitExpire() {\n-        getResponseHandler().sendResponse(new MultiMapResponse(null, null));\n+        MultiMapContainer container = getOrCreateContainer();\n+        getResponseHandler().sendResponse(new MultiMapResponse(null, getValueCollectionType(container)));\n     }\n \n     public int getId() {\n",
    "summaries": {
      "en": "Pass the correct value set type to the constructor",
      "zh": "将正确的值集合类型传递给构造函数"
    }
  },
  {
    "type": "refactor",
    "subtype": "R1",
    "change": "diff --git a/jme3-examples/src/main/java/jme3test/games/RollingTheMonkey.java b/jme3-examples/src/main/java/jme3test/games/RollingTheMonkey.java\nindex 22612b5a0..1fd474cf2 100644\n--- a/jme3-examples/src/main/java/jme3test/games/RollingTheMonkey.java\n+++ b/jme3-examples/src/main/java/jme3test/games/RollingTheMonkey.java\n@@ -328,9 +328,7 @@ public class RollingTheMonkey extends SimpleApplication implements ActionListene\n             pickUp.rotate(pickUpSpeed, pickUpSpeed, pickUpSpeed);\n         }\n         \n-        TempVars tempVars = TempVars.get();\n-        \n-        Vector3f centralForce = tempVars.vect1.set(Vector3f.ZERO);\n+        Vector3f centralForce = new Vector3f();\n         \n         if(keyForward) centralForce.addLocal(cam.getDirection());\n         if(keyBackward) centralForce.addLocal(cam.getDirection().negate());\n@@ -344,7 +342,6 @@ public class RollingTheMonkey extends SimpleApplication implements ActionListene\n \n             player.applyCentralForce(centralForce); // apply force to player\n         }\n-        tempVars.release();\n         \n         cam.lookAt(player.getPhysicsLocation(), Vector3f.UNIT_Y);\n     }\n",
    "summaries": {
      "en": "Delete unnecessary variable declarations",
      "zh": "删除无用的变量声明"
    }
  },
  {
    "type": "refactor",
    "subtype": "R10",
    "change": "diff --git a/packages/SystemUI/src/com/android/systemui/ImageWallpaper.java b/packages/SystemUI/src/com/android/systemui/ImageWallpaper.java\nindex 79f9650..8d949a5 100644\n--- a/packages/SystemUI/src/com/android/systemui/ImageWallpaper.java\n+++ b/packages/SystemUI/src/com/android/systemui/ImageWallpaper.java\n@@ -485,14 +485,12 @@ public class ImageWallpaper extends WallpaperService {\n \n             glDrawArrays(GL_TRIANGLE_STRIP, 0, 4);\n \n-            if (!mEgl.eglSwapBuffers(mEglDisplay, mEglSurface)) {\n-                throw new RuntimeException(\"Cannot swap buffers\");\n-            }\n+            boolean status = mEgl.eglSwapBuffers(mEglDisplay, mEglSurface);\n             checkEglError();\n \n             finishGL();\n \n-            return true;\n+            return status;\n         }\n \n         private FloatBuffer createMesh(int left, int top, float right, float bottom) {\n",
    "summaries": {
      "en": "Cancel the check for failed calls",
      "zh": "取消调用失败的判断"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/webserver/src/main/java/fi/iki/elonen/SimpleWebServer.java b/webserver/src/main/java/fi/iki/elonen/SimpleWebServer.java\nindex ba6ac6c..26c4438 100644\n--- a/webserver/src/main/java/fi/iki/elonen/SimpleWebServer.java\n+++ b/webserver/src/main/java/fi/iki/elonen/SimpleWebServer.java\n@@ -90,6 +90,7 @@ public class SimpleWebServer extends NanoHTTPD {\n             put(\"jpg\", \"image/jpeg\");\n             put(\"jpeg\", \"image/jpeg\");\n             put(\"png\", \"image/png\");\n+            put(\"svg\", \"image/svg+xml\");\n             put(\"mp3\", \"audio/mpeg\");\n             put(\"m3u\", \"audio/mpeg-url\");\n             put(\"mp4\", \"video/mp4\");\n",
    "summaries": {
      "en": "Add MIME type: image/svg+xml",
      "zh": "添加MIME类型:image/svg+xml"
    }
  },
  {
    "type": "refactor",
    "subtype": "R4",
    "change": "diff --git a/subprojects/tooling-api/src/main/java/org/gradle/tooling/internal/gradle/ConsumerProvidedTask.java b/subprojects/tooling-api/src/main/java/org/gradle/tooling/internal/gradle/ConsumerProvidedTask.java\nindex adeb76f..53ebd87 100644\n--- a/subprojects/tooling-api/src/main/java/org/gradle/tooling/internal/gradle/ConsumerProvidedTask.java\n+++ b/subprojects/tooling-api/src/main/java/org/gradle/tooling/internal/gradle/ConsumerProvidedTask.java\n@@ -69,7 +69,7 @@ public class ConsumerProvidedTask implements TaskListingLaunchable {\n \n     public SortedSet<String> getTaskNames() {\n         // TODO use comparator\n-        SortedSet result = Sets.newTreeSet(new TaskNameComparator());\n+        SortedSet<String> result = Sets.newTreeSet(new TaskNameComparator());\n         result.add(getPath());\n         return result;\n     }\n",
    "summaries": {
      "en": "Change SortedSet to String type",
      "zh": "指定SortedSet为String类型"
    }
  },
  {
    "type": "test",
    "subtype": "T1",
    "change": "diff --git a/tests/src/test/java/alluxio/master/file/FileSystemMasterIntegrationTest.java b/tests/src/test/java/alluxio/master/file/FileSystemMasterIntegrationTest.java\nindex 246690d..18a582e 100644\n--- a/tests/src/test/java/alluxio/master/file/FileSystemMasterIntegrationTest.java\n+++ b/tests/src/test/java/alluxio/master/file/FileSystemMasterIntegrationTest.java\n@@ -27,6 +27,7 @@ import alluxio.master.block.BlockMaster;\n import alluxio.master.file.meta.InodePathPair;\n import alluxio.master.file.meta.InodeTree;\n import alluxio.master.file.meta.LockedInodePath;\n+import alluxio.master.file.meta.TtlIntervalRule;\n import alluxio.master.file.options.CompleteFileOptions;\n import alluxio.master.file.options.CreateDirectoryOptions;\n import alluxio.master.file.options.CreateFileOptions;\n@@ -317,6 +318,9 @@ public class FileSystemMasterIntegrationTest {\n   public static ManuallyScheduleHeartbeat sManuallySchedule =\n       new ManuallyScheduleHeartbeat(HeartbeatContext.MASTER_TTL_CHECK);\n \n+  @ClassRule\n+  public static TtlIntervalRule sTtlIntervalRule = new TtlIntervalRule(TTL_CHECKER_INTERVAL_MS);\n+\n   @Rule\n   public Timeout mGlobalTimeout = Timeout.seconds(60);\n \n",
    "summaries": {
      "en": "Add TtlIntervalRule class rule",
      "zh": "添加 TtlIntervalRule 类规则"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/packages/SettingsProvider/src/com/android/providers/settings/DatabaseHelper.java b/packages/SettingsProvider/src/com/android/providers/settings/DatabaseHelper.java\nindex 381f821..8b1da1f 100644\n--- a/packages/SettingsProvider/src/com/android/providers/settings/DatabaseHelper.java\n+++ b/packages/SettingsProvider/src/com/android/providers/settings/DatabaseHelper.java\n@@ -1593,6 +1593,9 @@ public class DatabaseHelper extends SQLiteOpenHelper {\n \n             loadStringSetting(stmt, Settings.Secure.ACCESSIBILITY_SCREEN_READER_URL,\n                     R.string.def_accessibility_screen_reader_url);\n+\n+            loadBooleanSetting(stmt, Settings.System.LOCKSCREEN_DISABLED,\n+                    R.bool.def_lockscreen_disabled);\n         } finally {\n             if (stmt != null) stmt.close();\n         }\n",
    "summaries": {
      "en": "Load boolean settings",
      "zh": "加载布尔设置"
    }
  },
  {
    "type": "fix",
    "subtype": "I7",
    "change": "diff --git a/deeplearning4j-core/src/main/java/org/deeplearning4j/datasets/fetchers/CSVDataFetcher.java b/deeplearning4j-core/src/main/java/org/deeplearning4j/datasets/fetchers/CSVDataFetcher.java\nindex cf4aa61..ae18e12 100644\n--- a/deeplearning4j-core/src/main/java/org/deeplearning4j/datasets/fetchers/CSVDataFetcher.java\n+++ b/deeplearning4j-core/src/main/java/org/deeplearning4j/datasets/fetchers/CSVDataFetcher.java\n@@ -118,9 +118,9 @@ public class CSVDataFetcher extends BaseDataFetcher {\n         }\n \n         this.numOutcomes = labels.size();\n+        this.totalExamples = l.size();\n+        \n         all = DataSet.merge(l);\n-\n-\n     }\n \n \n",
    "summaries": {
      "en": "Added totalExamples variable",
      "zh": "增加 totalExamples 变量"
    }
  },
  {
    "type": "test",
    "subtype": "T1",
    "change": "diff --git a/components/camel-atom/src/test/java/org/apache/camel/component/atom/AtomEntryPollingConsumerTest.java b/components/camel-atom/src/test/java/org/apache/camel/component/atom/AtomEntryPollingConsumerTest.java\nindex 7f4cadbf3e..13c9268700 100644\n--- a/components/camel-atom/src/test/java/org/apache/camel/component/atom/AtomEntryPollingConsumerTest.java\n+++ b/components/camel-atom/src/test/java/org/apache/camel/component/atom/AtomEntryPollingConsumerTest.java\n@@ -39,7 +39,7 @@ public class AtomEntryPollingConsumerTest extends ContextTestSupport {\n \r\n     public void testResult3() throws Exception {\r\n         MockEndpoint mock = getMockEndpoint(\"mock:result3\");\r\n-        mock.expectedMessageCount(4);\r\n+        mock.expectedMessageCount(2);\r\n         mock.assertIsSatisfied();\r\n     }\r\n \r\n@@ -50,7 +50,7 @@ public class AtomEntryPollingConsumerTest extends ContextTestSupport {\n \r\n                 from(\"atom:file:src/test/data/feed.atom?splitEntries=true&filter=false\").to(\"mock:result2\");\r\n \r\n-                from(\"atom:file:src/test/data/feed.atom?splitEntries=true&filter=true&lastUpdate=2007-11-13T14:35:00\").to(\"mock:result3\");\r\n+                from(\"atom:file:src/test/data/feed.atom?splitEntries=true&filter=true&lastUpdate=2007-11-13T23:59:00\").to(\"mock:result3\");\r\n             }\r\n         };\r\n     }\r\n",
    "summaries": {
      "en": "Modified the expected message count and filtering criteria in the test case",
      "zh": "修改测试用例中的期望消息数量和过滤条件"
    }
  },
  {
    "type": "refactor",
    "subtype": "R3",
    "change": "diff --git a/src/java/org/apache/cassandra/db/SystemTable.java b/src/java/org/apache/cassandra/db/SystemTable.java\nindex 93a0d05..19e9f15 100644\n--- a/src/java/org/apache/cassandra/db/SystemTable.java\n+++ b/src/java/org/apache/cassandra/db/SystemTable.java\n@@ -223,7 +223,7 @@ public class SystemTable\n         IPartitioner p = StorageService.getPartitioner();\n         Table table = Table.open(Table.SYSTEM_TABLE);\n         QueryFilter filter = QueryFilter.getIdentityFilter(decorate(RING_KEY), new QueryPath(STATUS_CF));\n-        ColumnFamily cf = table.getColumnFamilyStore(STATUS_CF).getColumnFamily(filter);\n+        ColumnFamily cf = ColumnFamilyStore.removeDeleted(table.getColumnFamilyStore(STATUS_CF).getColumnFamily(filter), Integer.MAX_VALUE);\n         if (cf != null)\n         {\n             for (IColumn column : cf.getSortedColumns())\n",
    "summaries": {
      "en": "Clear all columns",
      "zh": "清除所以列族"
    }
  },
  {
    "type": "refactor",
    "subtype": "R5",
    "change": "diff --git a/bundles/binding/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/OneWireGenericBindingProvider.java b/bundles/binding/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/OneWireGenericBindingProvider.java\nindex fc66c88..d721a57 100644\n--- a/bundles/binding/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/OneWireGenericBindingProvider.java\n+++ b/bundles/binding/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/OneWireGenericBindingProvider.java\n@@ -112,7 +112,7 @@ public class OneWireGenericBindingProvider extends AbstractGenericBindingProvide\n \t * correctly and <code>false</code> otherwise\n \t */\n \tprotected boolean checkSensorId(String sensorIdString) {\n-\t\treturn sensorIdString.matches(\"\\\\[A-F0-9]{2}\\\\.[A-F0-9]{12}\");\n+\t\treturn sensorIdString.matches(\"[A-F0-9]{2}\\\\.[A-F0-9]{12}\");\n \t}\n \t\n \t\n",
    "summaries": {
      "en": "Remove escape characters before letters",
      "zh": "删除字母前的转义字符"
    }
  },
  {
    "type": "docs",
    "subtype": "D2",
    "change": "diff --git a/guava/src/com/google/common/hash/Hashing.java b/guava/src/com/google/common/hash/Hashing.java\nindex 689f182..32bd069 100644\n--- a/guava/src/com/google/common/hash/Hashing.java\n+++ b/guava/src/com/google/common/hash/Hashing.java\n@@ -31,6 +31,9 @@ import java.util.zip.Checksum;\n  * Static methods to obtain {@link HashFunction} instances, and other static hashing-related\n  * utilities.\n  *\n+ * <p>A comparison of the various hash functions can be found\n+ * <a href=\"http://goo.gl/jS7HH\">here</a>.\n+ *\n  * @author Kevin Bourrillion\n  * @author Dimitris Andreou\n  * @author Kurt Alfred Kluever\n",
    "summaries": {
      "en": "Add a link to a hash function comparison",
      "zh": "添加一个指向哈希函数比较的链接"
    }
  },
  {
    "type": "test",
    "subtype": "T1",
    "change": "diff --git a/plugins/testng/src/com/theoryinpractice/testng/configuration/SearchingForTestsTask.java b/plugins/testng/src/com/theoryinpractice/testng/configuration/SearchingForTestsTask.java\nindex 626bc0c..2ee1c4a 100644\n--- a/plugins/testng/src/com/theoryinpractice/testng/configuration/SearchingForTestsTask.java\n+++ b/plugins/testng/src/com/theoryinpractice/testng/configuration/SearchingForTestsTask.java\n@@ -450,9 +450,7 @@ public class SearchingForTestsTask extends Task.Backgroundable {\n \n       if (methods == null) {\n         for (PsiClass c : classes) {\n-          if (!results.containsKey(c)) {\n-            results.put(c, new LinkedHashSet<PsiMethod>());\n-          }\n+          results.put(c, new LinkedHashSet<PsiMethod>());\n         }\n       }\n       for (PsiMember psiMember : membersToCheckNow) {\n",
    "summaries": {
      "en": "Remove unnecessary if check statements",
      "zh": "删除不必要的if检查语句"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/platform/platform-api/src/com/intellij/execution/process/BinaryOSProcessHandler.java b/platform/platform-api/src/com/intellij/execution/process/BinaryOSProcessHandler.java\nindex 88ab706..220a252 100644\n--- a/platform/platform-api/src/com/intellij/execution/process/BinaryOSProcessHandler.java\n+++ b/platform/platform-api/src/com/intellij/execution/process/BinaryOSProcessHandler.java\n@@ -46,6 +46,7 @@ public class BinaryOSProcessHandler extends OSProcessHandler {\n   private class SimpleBinaryReader extends BinaryOutputReader {\n     private SimpleBinaryReader(InputStream stream, SleepingPolicy policy) {\n       super(stream, policy);\n+      start(\"output stream of \" + myPresentableName);\n     }\n \n     @Override\n",
    "summaries": {
      "en": "Added start() method call",
      "zh": "添加 start()方法调用"
    }
  },
  {
    "type": "fix",
    "subtype": "I3",
    "change": "diff --git a/components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsProducer.java b/components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsProducer.java\nindex 8329372811..f3427b3d1a 100644\n--- a/components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsProducer.java\n+++ b/components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsProducer.java\n@@ -382,7 +382,7 @@ public class JmsProducer extends DefaultProducer {\n         if (exchange.hasOut()) {\n             JmsMessage out = (JmsMessage) exchange.getOut();\n             try {\n-                if (out != null) {\n+                if (out != null && out.getJmsMessage() != null) {\n                     out.setMessageId(out.getJmsMessage().getJMSMessageID());\n                 }\n             } catch (JMSException e) {\n",
    "summaries": {
      "en": "Added non-null check for JmsMessage",
      "zh": "增加对 JmsMessage 的非空判断"
    }
  },
  {
    "type": "docs",
    "subtype": "D2",
    "change": "diff --git a/core/java/android/os/ParcelFileDescriptor.java b/core/java/android/os/ParcelFileDescriptor.java\nindex 579971d..d4cadd3 100644\n--- a/core/java/android/os/ParcelFileDescriptor.java\n+++ b/core/java/android/os/ParcelFileDescriptor.java\n@@ -821,6 +821,8 @@ public class ParcelFileDescriptor implements Parcelable, Closeable {\n      */\n     @Override\n     public void writeToParcel(Parcel out, int flags) {\n+        // WARNING: This must stay in sync with Parcel::readParcelFileDescriptor()\n+        // in frameworks/native/libs/binder/Parcel.cpp\n         if (mWrapped != null) {\n             mWrapped.writeToParcel(out, flags);\n         } else {\n@@ -845,6 +847,8 @@ public class ParcelFileDescriptor implements Parcelable, Closeable {\n             = new Parcelable.Creator<ParcelFileDescriptor>() {\n         @Override\n         public ParcelFileDescriptor createFromParcel(Parcel in) {\n+            // WARNING: This must stay in sync with Parcel::writeParcelFileDescriptor()\n+            // in frameworks/native/libs/binder/Parcel.cpp\n             final FileDescriptor fd = in.readRawFileDescriptor();\n             FileDescriptor commChannel = null;\n             if (in.readInt() != 0) {\n",
    "summaries": {
      "en": "Add comments to warn that the code splitting must be kept in sync with the Parcel.cpp implementation",
      "zh": "添加注释以警告分包必须与Parcel.cpp实现保持同步"
    }
  },
  {
    "type": "fix",
    "subtype": "I3",
    "change": "diff --git a/core/src/main/java/io/undertow/protocols/http2/HpackEncoder.java b/core/src/main/java/io/undertow/protocols/http2/HpackEncoder.java\nindex c51bdbb91..95f995525 100644\n--- a/core/src/main/java/io/undertow/protocols/http2/HpackEncoder.java\n+++ b/core/src/main/java/io/undertow/protocols/http2/HpackEncoder.java\n@@ -144,7 +144,7 @@ public class HpackEncoder extends Hpack {\n                         this.headersIterator = it;\n                         return State.UNDERFLOW;\n                     }\n-                    boolean canIndex = indexFunction.shouldUseIndexing(headerName, val);\n+                    boolean canIndex = indexFunction.shouldUseIndexing(headerName, val) && (headerName.length() + val.length() + 32) < maxTableSize; //only index if it will fit\n                     if (tableEntry == null && canIndex) {\n                         //add the entry to the dynamic table\n                         target.put((byte) (1 << 6));\n",
    "summaries": {
      "en": "Added check for header name and value length when checking shouldUseIndexing()",
      "zh": "在检查shouldUseIndexing()时，增加了对头部名和值长度的检查"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/j2k/src/org/jetbrains/jet/j2k/JavaToKotlinTranslator.java b/j2k/src/org/jetbrains/jet/j2k/JavaToKotlinTranslator.java\nindex 04b30a9..c1d6d4f 100644\n--- a/j2k/src/org/jetbrains/jet/j2k/JavaToKotlinTranslator.java\n+++ b/j2k/src/org/jetbrains/jet/j2k/JavaToKotlinTranslator.java\n@@ -20,6 +20,7 @@ import com.intellij.core.JavaCoreProjectEnvironment;\n import com.intellij.lang.java.JavaLanguage;\n import com.intellij.openapi.Disposable;\n import com.intellij.openapi.project.Project;\n+import com.intellij.openapi.roots.ProjectRootModificationTracker;\n import com.intellij.psi.PsiElement;\n import com.intellij.psi.PsiFile;\n import com.intellij.psi.PsiFileFactory;\n@@ -43,6 +44,13 @@ public class JavaToKotlinTranslator {\n         }\n     };\n \n+    private static final ProjectRootModificationTracker NEVER_CHANGED = new ProjectRootModificationTracker() {\n+        @Override\n+        public long getModificationCount() {\n+            return 0;\n+        }\n+    };\n+\n     private JavaToKotlinTranslator() {\n     }\n \n@@ -66,6 +74,8 @@ public class JavaToKotlinTranslator {\n         JavaCoreApplicationEnvironment applicationEnvironment = new JavaCoreApplicationEnvironment(DISPOSABLE);\n         JavaCoreProjectEnvironment javaCoreEnvironment = new JavaCoreProjectEnvironment(DISPOSABLE, applicationEnvironment);\n \n+        javaCoreEnvironment.getProject().registerService(ProjectRootModificationTracker.class, NEVER_CHANGED);\n+\n         javaCoreEnvironment.addJarToClassPath(PathUtil.findRtJar());\n         File annotations = findAnnotations();\n         if (annotations != null && annotations.exists()) {\n",
    "summaries": {
      "en": "Registered the NEVER_CHANGED service",
      "zh": "注册NEVER_CHANGED服务"
    }
  },
  {
    "type": "fix",
    "subtype": "I3",
    "change": "diff --git a/UsageView/src/com/intellij/usages/UsageInfo2UsageAdapter.java b/UsageView/src/com/intellij/usages/UsageInfo2UsageAdapter.java\nindex dc6fdc6..151a9fb 100644\n--- a/UsageView/src/com/intellij/usages/UsageInfo2UsageAdapter.java\n+++ b/UsageView/src/com/intellij/usages/UsageInfo2UsageAdapter.java\n@@ -242,8 +242,7 @@ public class UsageInfo2UsageAdapter implements Usage, UsageInModule, UsageInLibr\n     }\n \n     public TextChunk[] getText() {\n-      final PsiElement element = getElement();\n-      if (element != null && element.isValid()) {\n+      if (isValid()) {\n         // the check below makes sence only for valid PsiElement\n         final long currentModificationStamp = getCurrentModificationStamp();\n         if (currentModificationStamp != myModificationStamp) {\n",
    "summaries": {
      "en": "Fix valid judgment condition",
      "zh": "修复valid判断条件"
    }
  },
  {
    "type": "fix",
    "subtype": "I4",
    "change": "diff --git a/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/simulation/Simulation.java b/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/simulation/Simulation.java\nindex 17d71a9..a191e90 100644\n--- a/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/simulation/Simulation.java\n+++ b/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/simulation/Simulation.java\n@@ -121,7 +121,7 @@ public class Simulation implements Disposable {\n \t\t\t\tvertices[idx++] = 0.25f + column * 0.25f;\r\n \t\t\t\tvertices[idx++] = 0.25f + row * 0.25f;\r\n \t\t\t\t\r\n-\t\t\t\tfinal int t = row*column*4;\r\n+\t\t\t\tfinal int t = (4*row+column)*4;\r\n \t\t\t\tindices[index++] = (short)(t);\r\n \t\t\t\tindices[index++] = (short)(t+1);\r\n \t\t\t\tindices[index++] = (short)(t+2);\r\n",
    "summaries": {
      "en": "Corrected row and column counting error",
      "zh": "更正行列计数错误"
    }
  },
  {
    "type": "refactor",
    "subtype": "Rx",
    "change": "diff --git a/querydsl-sql/src/test/java/com/querydsl/sql/UpdateBase.java b/querydsl-sql/src/test/java/com/querydsl/sql/UpdateBase.java\nindex 6d82d8e15..17e0c33f8 100644\n--- a/querydsl-sql/src/test/java/com/querydsl/sql/UpdateBase.java\n+++ b/querydsl-sql/src/test/java/com/querydsl/sql/UpdateBase.java\n@@ -190,7 +190,7 @@ public class UpdateBase extends AbstractBaseTest {\n     }\n \n     @Test\n-    public void Update_With_TempateExpression_In_Batch() {\n+    public void Update_With_TemplateExpression_In_Batch() {\n         update(survey)\n             .set(survey.id, 3)\n             .set(survey.name, Expressions.stringTemplate(\"'Hello'\"))\n",
    "summaries": {
      "en": "Fix spelling errors in test method names",
      "zh": "修复测试方法名称中的拼写错误"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/platform/lang-impl/src/com/intellij/codeInspection/actions/CleanupInspectionIntention.java b/platform/lang-impl/src/com/intellij/codeInspection/actions/CleanupInspectionIntention.java\nindex ddb4a20..7b7fa65 100644\n--- a/platform/lang-impl/src/com/intellij/codeInspection/actions/CleanupInspectionIntention.java\n+++ b/platform/lang-impl/src/com/intellij/codeInspection/actions/CleanupInspectionIntention.java\n@@ -21,12 +21,15 @@ import com.intellij.codeInsight.intention.EmptyIntentionAction;\n import com.intellij.codeInsight.intention.HighPriorityAction;\n import com.intellij.codeInsight.intention.IntentionAction;\n import com.intellij.codeInspection.*;\n-import com.intellij.codeInspection.ex.*;\n+import com.intellij.codeInspection.ex.LocalInspectionToolWrapper;\n+import com.intellij.codeInspection.ex.ProblemDescriptorImpl;\n+import com.intellij.codeInspection.ex.UnfairLocalInspectionTool;\n import com.intellij.openapi.editor.Editor;\n import com.intellij.openapi.progress.EmptyProgressIndicator;\n import com.intellij.openapi.progress.ProgressManager;\n import com.intellij.openapi.project.Project;\n import com.intellij.openapi.util.Computable;\n+import com.intellij.psi.PsiDocumentManager;\n import com.intellij.psi.PsiElement;\n import com.intellij.psi.PsiFile;\n import com.intellij.util.IncorrectOperationException;\n@@ -83,6 +86,7 @@ public class CleanupInspectionIntention implements IntentionAction, HighPriority\n             final PsiElement element = ((ProblemDescriptor)descriptor).getPsiElement();\n             if (element != null && element.isValid()) {\n               fix.applyFix(project, descriptor);\n+              PsiDocumentManager.getInstance(project).commitDocument(editor.getDocument());\n             }\n             break;\n           }\n",
    "summaries": {
      "en": "Following the Fix guidelines, the changes were submitted to the Editor documentation",
      "zh": "参考Fix规范，将变更提交到Editor文档中"
    }
  },
  {
    "type": "fix",
    "subtype": "I3",
    "change": "diff --git a/platform/core-api/src/com/intellij/psi/search/LocalSearchScope.java b/platform/core-api/src/com/intellij/psi/search/LocalSearchScope.java\nindex 504e2609..a05cfce 100644\n--- a/platform/core-api/src/com/intellij/psi/search/LocalSearchScope.java\n+++ b/platform/core-api/src/com/intellij/psi/search/LocalSearchScope.java\n@@ -183,7 +183,7 @@ public class LocalSearchScope extends SearchScope {\n       for (int j = 0; j < elements2.length; j++) {\n         final PsiElement element2 = elements2[j];\n         final PsiElement unionElement = scopeElementsUnion(element1, element2);\n-        if (unionElement != null) {\n+        if (unionElement != null && unionElement.getContainingFile() != null) {\n           result.add(unionElement);\n           united[j] = true;\n           break loop1;\n",
    "summaries": {
      "en": "Check if the file to be added to the result list is empty before adding the element",
      "zh": "在添加元素到结果列表之前，检查其包含文件是否为空"
    }
  },
  {
    "type": "docs",
    "subtype": "D2",
    "change": "diff --git a/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java b/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java\nindex 38bf43e..b916f5e 100644\n--- a/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java\n+++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java\n@@ -882,6 +882,13 @@ public class IndexShard extends AbstractIndexShardComponent {\n         }\n         recoveryState.setStage(RecoveryState.Stage.TRANSLOG);\n         final EngineConfig.OpenMode openMode;\n+        /* by default we recover and index and replay the translog but if the index\n+         * doesn't exist we create everything from the scratch. Yet, if the index\n+         * doesn't exist we don't need to worry about the skipTranslogRecovery since\n+         * there is no translog on a non-existing index.\n+         * The skipTranslogRecovery invariant is used if we do remote recovery since\n+         * there the translog isn't local but on the remote host, hence we can skip it.\n+         */\n         if (indexExists == false) {\n             openMode = EngineConfig.OpenMode.CREATE_INDEX_AND_TRANSLOG;\n         } else if (skipTranslogRecovery) {\n",
    "summaries": {
      "en": "Add comments to explain when and why Translog recovery can be skipped in IndexShard",
      "zh": "添加注释，说明何时和为什么可以忽略在IndexShard中跳过Translog恢复"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/fml/client/net/minecraft/src/BaseMod.java b/fml/client/net/minecraft/src/BaseMod.java\nindex 41c3cff50..3755c9036 100644\n--- a/fml/client/net/minecraft/src/BaseMod.java\n+++ b/fml/client/net/minecraft/src/BaseMod.java\n@@ -448,6 +448,7 @@ public abstract class BaseMod implements cpw.mods.fml.common.modloader.BaseModPr\n         return null;\n     }\n \n+    @SideOnly(CLIENT)\n     public void clientCustomPayload(NetClientHandler handler, Packet250CustomPayload packet)\n     {\n \n",
    "summaries": {
      "en": "Specify method to run only on client-side",
      "zh": "指明方法在只客户端运行"
    }
  },
  {
    "type": "refactor",
    "subtype": "R3",
    "change": "diff --git a/wire-runtime/src/main/java/com/squareup/wire/ProtoAdapter.java b/wire-runtime/src/main/java/com/squareup/wire/ProtoAdapter.java\nindex 35d171b9..bb2be00f 100644\n--- a/wire-runtime/src/main/java/com/squareup/wire/ProtoAdapter.java\n+++ b/wire-runtime/src/main/java/com/squareup/wire/ProtoAdapter.java\n@@ -93,8 +93,13 @@ public abstract class ProtoAdapter<E> {\n     }\n   }\n \n+  /**\n+   * Returns the adapter for a given {@code adapterString}. {@code adapterString} is specified on a\n+   * proto message field's {@link WireField} annotation in the form\n+   * {@code com.squareup.wire.protos.person.Person#ADAPTER}.\n+   */\n   @SuppressWarnings(\"unchecked\")\n-  static ProtoAdapter<?> get(String adapterString) {\n+  public static ProtoAdapter<?> get(String adapterString) {\n     try {\n       int hash = adapterString.indexOf('#');\n       String className = adapterString.substring(0, hash);\n",
    "summaries": {
      "en": "Change get() function to public function",
      "zh": "将get()函数更改为公共函数"
    }
  },
  {
    "type": "docs",
    "subtype": "D2",
    "change": "diff --git a/java/org/apache/catalina/servlets/CGIServlet.java b/java/org/apache/catalina/servlets/CGIServlet.java\nindex 0a01f6620..1669f3471 100644\n--- a/java/org/apache/catalina/servlets/CGIServlet.java\n+++ b/java/org/apache/catalina/servlets/CGIServlet.java\n@@ -576,7 +576,6 @@ public final class CGIServlet extends HttpServlet {\n                                           cgiEnv.getEnvironment(),\n                                           cgiEnv.getWorkingDirectory(),\n                                           cgiEnv.getParameters());\n-            // If POST, we need to cgi.setInput\n             // REMIND: how does this interact with Servlet API 2.3's Filters?!\n             if (\"POST\".equals(req.getMethod())) {\n                 cgi.setInput(req.getInputStream());\n",
    "summaries": {
      "en": "Remove obvious declarations",
      "zh": "删除显而易见的声明"
    }
  },
  {
    "type": "feat",
    "subtype": "E1",
    "change": "diff --git a/jodd-http/src/main/java/jodd/http/HttpBrowser.java b/jodd-http/src/main/java/jodd/http/HttpBrowser.java\nindex 7625e5db..ca05d2ff 100644\n--- a/jodd-http/src/main/java/jodd/http/HttpBrowser.java\n+++ b/jodd-http/src/main/java/jodd/http/HttpBrowser.java\n@@ -176,7 +176,6 @@ public class HttpBrowser {\n \t\tif (newCookies != null) {\n \t\t\tfor (String cookieValue : newCookies) {\n \t\t\t\tCookie cookie = new Cookie(cookieValue);\n-\n \t\t\t\tcookies.put(cookie.getName(), cookie);\n \t\t\t}\n \t\t}\n@@ -193,6 +192,12 @@ public class HttpBrowser {\n \n \t\tif (!cookies.isEmpty()) {\n \t\t\tfor (Cookie cookie: cookies.values()) {\n+                \n+\t\t\t    Integer maxAge = cookie.getMaxAge();\n+\t\t\t\tif (maxAge != null && maxAge.intValue() == 0) {\n+\t\t\t\t    continue;\n+\t\t\t\t}\n+\n \t\t\t\tif (!first) {\n \t\t\t\t\tcookieString.append(\"; \");\n \t\t\t\t}\n@@ -205,4 +210,4 @@ public class HttpBrowser {\n \t\t\thttpRequest.header(\"cookie\", cookieString.toString(), true);\n \t\t}\n \t}\n-}\n\\ No newline at end of file\n+}\n",
    "summaries": {
      "en": "Added a check to ignore cookies with MaxAge=0 to prevent them from being added to the HTTP request header",
      "zh": "添加忽略MaxAge为0的Cookie，以避免将之添加到HTTP请求头中"
    }
  },
  {
    "type": "fix",
    "subtype": "I3",
    "change": "diff --git a/java/debugger/impl/src/com/intellij/debugger/engine/DebugProcessImpl.java b/java/debugger/impl/src/com/intellij/debugger/engine/DebugProcessImpl.java\nindex 9f0aaed..654642c 100644\n--- a/java/debugger/impl/src/com/intellij/debugger/engine/DebugProcessImpl.java\n+++ b/java/debugger/impl/src/com/intellij/debugger/engine/DebugProcessImpl.java\n@@ -53,6 +53,7 @@ import com.intellij.openapi.application.ApplicationNamesInfo;\n import com.intellij.openapi.diagnostic.Logger;\n import com.intellij.openapi.extensions.Extensions;\n import com.intellij.openapi.project.Project;\n+import com.intellij.openapi.projectRoots.JavaSdk;\n import com.intellij.openapi.projectRoots.ProjectJdkTable;\n import com.intellij.openapi.projectRoots.Sdk;\n import com.intellij.openapi.roots.ProjectRootManager;\n@@ -631,7 +632,7 @@ public abstract class DebugProcessImpl extends UserDataHolderBase implements Deb\n   }\n \n   private static boolean versionMatch(@Nullable Sdk sdk, String version) {\n-    if (sdk != null) {\n+    if (sdk != null && sdk.getSdkType() instanceof JavaSdk) {\n       String versionString = sdk.getVersionString();\n       return versionString != null && versionString.contains(version);\n     }\n",
    "summaries": {
      "en": "Add SDK type checking",
      "zh": "添加 SDK 类型检查"
    }
  },
  {
    "type": "feat",
    "subtype": "E2",
    "change": "diff --git a/fml/common/cpw/mods/fml/common/Loader.java b/fml/common/cpw/mods/fml/common/Loader.java\nindex 2a1036833..ff53b2932 100644\n--- a/fml/common/cpw/mods/fml/common/Loader.java\n+++ b/fml/common/cpw/mods/fml/common/Loader.java\n@@ -427,7 +427,7 @@ public class Loader\n \n     public List<ModContainer> getModList()\n     {\n-        return ImmutableList.copyOf(instance().mods);\n+        return instance().mods != null ? ImmutableList.copyOf(instance().mods) : ImmutableList.<ModContainer>of();\n     }\n \n     /**\n@@ -663,7 +663,7 @@ public class Loader\n \n     public List<ModContainer> getActiveModList()\n     {\n-        return modController.getActiveModList();\n+        return modController != null ? modController.getActiveModList() : ImmutableList.<ModContainer>of();\n     }\n \n     public ModState getModState(ModContainer selectedMod)\n",
    "summaries": {
      "en": "Add null check for getModList() and getActiveModList() methods",
      "zh": "为getModList()和getActiveModList()方法添加null检查"
    }
  },
  {
    "type": "fix",
    "subtype": "I11",
    "change": "diff --git a/services/core/java/com/android/server/pm/PackageManagerService.java b/services/core/java/com/android/server/pm/PackageManagerService.java\nindex 27ca62af..a7bd4ab 100644\n--- a/services/core/java/com/android/server/pm/PackageManagerService.java\n+++ b/services/core/java/com/android/server/pm/PackageManagerService.java\n@@ -16341,8 +16341,9 @@ public class PackageManagerService extends IPackageManager.Stub {\n                 for (int curUser : users) {\n                     long timeout = SystemClock.uptimeMillis() + 5000;\n                     synchronized (conn) {\n-                        long now = SystemClock.uptimeMillis();\n-                        while (conn.mContainerService == null && now < timeout) {\n+                        long now;\n+                        while (conn.mContainerService == null &&\n+                                (now = SystemClock.uptimeMillis()) < timeout) {\n                             try {\n                                 conn.wait(timeout - now);\n                             } catch (InterruptedException e) {\n",
    "summaries": {
      "en": "Fix infinite loop issue during sync of external storage data clearing",
      "zh": "解决清除外部存储数据同步时的无限循环问题"
    }
  },
  {
    "type": "test",
    "subtype": "T1",
    "change": "diff --git a/platform/platform-tests/testSrc/com/intellij/openapi/keymap/impl/IdeMouseEventDispatcherTest.java b/platform/platform-tests/testSrc/com/intellij/openapi/keymap/impl/IdeMouseEventDispatcherTest.java\nindex 352fa5a..92ef56e 100644\n--- a/platform/platform-tests/testSrc/com/intellij/openapi/keymap/impl/IdeMouseEventDispatcherTest.java\n+++ b/platform/platform-tests/testSrc/com/intellij/openapi/keymap/impl/IdeMouseEventDispatcherTest.java\n@@ -25,8 +25,11 @@ import com.intellij.openapi.keymap.ex.KeymapManagerEx;\n import com.intellij.testFramework.LightPlatformTestCase;\n \n import javax.swing.*;\n+import java.awt.*;\n import java.awt.event.MouseEvent;\n \n+import static org.junit.Assume.assumeFalse;\n+\n public class IdeMouseEventDispatcherTest extends LightPlatformTestCase {\n   private static final String OUR_KEYMAP_NAME = \"IdeMouseEventDispatcherTestKeymap\";\n   private static final String OUR_TEST_ACTION = \"IdeMouseEventDispatcherTestAction\";\n@@ -38,6 +41,8 @@ public class IdeMouseEventDispatcherTest extends LightPlatformTestCase {\n   private int myActionExecutionCount;\n \n   public void setUp() throws Exception {\n+    assumeFalse(GraphicsEnvironment.isHeadless());\n+\n     super.setUp();\n \n     ActionManager.getInstance().registerAction(OUR_TEST_ACTION, new EmptyAction());\n",
    "summaries": {
      "en": "Added check for headless assumption",
      "zh": "增加假设是否无头的判断"
    }
  },
  {
    "type": "test",
    "subtype": "T1",
    "change": "diff --git a/presto-tests/src/main/java/com/facebook/presto/tests/AbstractTestQueries.java b/presto-tests/src/main/java/com/facebook/presto/tests/AbstractTestQueries.java\nindex 74827ac..72770d6 100644\n--- a/presto-tests/src/main/java/com/facebook/presto/tests/AbstractTestQueries.java\n+++ b/presto-tests/src/main/java/com/facebook/presto/tests/AbstractTestQueries.java\n@@ -1785,21 +1785,25 @@ public abstract class AbstractTestQueries\n     {\n         assertQuery(\n                 \"SELECT DISTINCT a.orderkey FROM \" +\n-                        \"(SELECT CASE WHEN orderkey > 10 THEN orderkey END orderkey FROM orders) a \" +\n-                        \"RIGHT OUTER JOIN orders b ON a.orderkey = b.orderkey\");\n+                        \"(SELECT CASE WHEN orderkey > 10 THEN orderkey END orderkey FROM orders WHERE orderkey < 100) a \" +\n+                        \"RIGHT OUTER JOIN \" +\n+                        \"(SELECT * FROM orders WHERE orderkey < 100) b ON a.orderkey = b.orderkey\");\n \n         assertQuery(\n                 \"SELECT DISTINCT a.orderkey FROM \" +\n-                        \"(SELECT CASE WHEN orderkey > 2 THEN orderkey END orderkey FROM orders) a \" +\n-                        \"FULL OUTER JOIN orders b ON a.orderkey = b.orderkey\",\n+                        \"(SELECT CASE WHEN orderkey > 2 THEN orderkey END orderkey FROM orders WHERE orderkey < 100) a \" +\n+                        \"FULL OUTER JOIN \" +\n+                        \"(SELECT * FROM orders WHERE orderkey < 100) b ON a.orderkey = b.orderkey\",\n                 \"SELECT DISTINCT orderkey FROM (\" +\n                         \"SELECT a.orderkey FROM \" +\n-                        \"(SELECT CASE WHEN orderkey > 2 THEN orderkey END orderkey FROM orders) a \" +\n-                        \"RIGHT OUTER JOIN orders b ON a.orderkey = b.orderkey \" +\n+                        \"(SELECT CASE WHEN orderkey > 2 THEN orderkey END orderkey FROM orders WHERE orderkey < 100) a \" +\n+                        \"RIGHT OUTER JOIN \" +\n+                        \"(SELECT * FROM orders WHERE orderkey < 100) b ON a.orderkey = b.orderkey \" +\n                         \"UNION ALL \" +\n                         \"SELECT a.orderkey FROM\" +\n-                        \"(SELECT CASE WHEN orderkey > 2 THEN orderkey END orderkey FROM orders) a \" +\n-                        \"LEFT OUTER JOIN orders b ON a.orderkey = b.orderkey \" +\n+                        \"(SELECT CASE WHEN orderkey > 2 THEN orderkey END orderkey FROM orders WHERE orderkey < 100) a \" +\n+                        \"LEFT OUTER JOIN \" +\n+                        \"(SELECT * FROM orders WHERE orderkey < 100) b ON a.orderkey = b.orderkey \" +\n                         \"WHERE a.orderkey IS NULL)\");\n     }\n \n",
    "summaries": {
      "en": "Reduce the size of data for test queries",
      "zh": "减少测试查询的数据大小"
    }
  },
  {
    "type": "refactor",
    "subtype": "R3",
    "change": "diff --git a/robolectric-resources/src/main/java/org/robolectric/res/builder/RobolectricPackageManager.java b/robolectric-resources/src/main/java/org/robolectric/res/builder/RobolectricPackageManager.java\nindex f041fe0..62f3929 100644\n--- a/robolectric-resources/src/main/java/org/robolectric/res/builder/RobolectricPackageManager.java\n+++ b/robolectric-resources/src/main/java/org/robolectric/res/builder/RobolectricPackageManager.java\n@@ -88,9 +88,9 @@ public interface RobolectricPackageManager {\n \n   void setNameForUid(int uid, String name);\n \n-  void setPackagesForCallingUid(String[] packagesForCallingUid);\n+  void setPackagesForCallingUid(String... packagesForCallingUid);\n \n-  void setPackagesForUid(int uid, String[] packagesForCallingUid);\n+  void setPackagesForUid(int uid, String... packagesForCallingUid);\n \n   class ComponentState {\n     public int newState;\n",
    "summaries": {
      "en": "Modified method parameter type",
      "zh": "修改方法参数类型"
    }
  },
  {
    "type": "docs",
    "subtype": "D2",
    "change": "diff --git a/common/src/main/java/tachyon/master/block/BlockId.java b/common/src/main/java/tachyon/master/block/BlockId.java\nindex fe21c3f..6b1995a 100644\n--- a/common/src/main/java/tachyon/master/block/BlockId.java\n+++ b/common/src/main/java/tachyon/master/block/BlockId.java\n@@ -15,6 +15,15 @@\n \n package tachyon.master.block;\n \n+/**\n+ * This class provides a set of methods related to block Ids. Each block Id is a value of long with\n+ * the following two parts:\n+ * <ul>\n+ * <li>The most significant 5 bytes (40 bits) represent the container Id of this block and</li>\n+ * <li>The least significant 3 bytes (24 bits) represent the sequence number of this block in the\n+ * container.</li>\n+ * </ul>\n+ */\n public final class BlockId {\n \n   private static final int CONTAINER_ID_BITS = 40;\n",
    "summaries": {
      "en": "Added Javadoc for BlockId.java",
      "zh": "添加BlockId.java的javadoc"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/src/com/facebook/buck/rules/KnownBuildRuleTypes.java b/src/com/facebook/buck/rules/KnownBuildRuleTypes.java\nindex bf18a3c..287b2fa 100644\n--- a/src/com/facebook/buck/rules/KnownBuildRuleTypes.java\n+++ b/src/com/facebook/buck/rules/KnownBuildRuleTypes.java\n@@ -606,7 +606,8 @@ public class KnownBuildRuleTypes {\n                     cxxLibraryDescription,\n                     /* cpp2 */ true),\n                 new ThriftPythonEnhancer(thriftBuckConfig, ThriftPythonEnhancer.Type.NORMAL),\n-                new ThriftPythonEnhancer(thriftBuckConfig, ThriftPythonEnhancer.Type.TWISTED))));\n+                new ThriftPythonEnhancer(thriftBuckConfig, ThriftPythonEnhancer.Type.TWISTED),\n+                new ThriftPythonEnhancer(thriftBuckConfig, ThriftPythonEnhancer.Type.ASYNCIO))));\n     builder.register(new XcodePostbuildScriptDescription());\n     builder.register(new XcodePrebuildScriptDescription());\n     builder.register(new XcodeWorkspaceConfigDescription());\n",
    "summaries": {
      "en": "Added new type ThriftPythonEnhancer(Type.ASYNCIO)",
      "zh": "添加新的类型 ThriftPythonEnhancer(Type.ASYNCIO)"
    }
  },
  {
    "type": "docs",
    "subtype": "D2",
    "change": "diff --git a/sonar-plugin-api/src/main/java/org/sonar/api/batch/ResourceFilter.java b/sonar-plugin-api/src/main/java/org/sonar/api/batch/ResourceFilter.java\nindex 590a484417..fa829ee8c2 100644\n--- a/sonar-plugin-api/src/main/java/org/sonar/api/batch/ResourceFilter.java\n+++ b/sonar-plugin-api/src/main/java/org/sonar/api/batch/ResourceFilter.java\n@@ -23,7 +23,8 @@ import org.sonar.api.BatchExtension;\n import org.sonar.api.resources.Resource;\n \n /**\n- * Filter resources to save. For example, ignore a resource if its path matches an exclusion pattern (defined on the project)\n+ * Filter resources to save. For example, ignore a resource if its path matches an exclusion pattern (defined on the project).\n+ * Filters are applied to files, directories and packages only.\n  *\n  * If the method start(), without parameters, exists, then it is executed at startup.\n  *\n",
    "summaries": {
      "en": "Add comments for explanation",
      "zh": "添加注释说明"
    }
  },
  {
    "type": "docs",
    "subtype": "D2",
    "change": "diff --git a/subprojects/migration/src/main/groovy/org/gradle/api/plugins/migration/CompareGradleBuilds.java b/subprojects/migration/src/main/groovy/org/gradle/api/plugins/migration/CompareGradleBuilds.java\nindex 3c73d53..21aab88 100644\n--- a/subprojects/migration/src/main/groovy/org/gradle/api/plugins/migration/CompareGradleBuilds.java\n+++ b/subprojects/migration/src/main/groovy/org/gradle/api/plugins/migration/CompareGradleBuilds.java\n@@ -49,6 +49,9 @@ import java.io.*;\n import java.nio.charset.Charset;\n import java.util.Set;\n \n+/**\n+ * Executes two Gradle builds (that can be the same build) with specified versions and compares the outputs.\n+ */\n public class CompareGradleBuilds extends DefaultTask {\n \n     private String sourceVersion = GradleVersion.current().getVersion();\n",
    "summaries": {
      "en": "Add comments",
      "zh": "添加注释"
    }
  },
  {
    "type": "feat",
    "subtype": "E1",
    "change": "diff --git a/WordPress/src/main/java/org/wordpress/android/ui/people/PeopleInviteFragment.java b/WordPress/src/main/java/org/wordpress/android/ui/people/PeopleInviteFragment.java\nindex fbc8c2e91..bb5cdedcf 100644\n--- a/WordPress/src/main/java/org/wordpress/android/ui/people/PeopleInviteFragment.java\n+++ b/WordPress/src/main/java/org/wordpress/android/ui/people/PeopleInviteFragment.java\n@@ -528,6 +528,8 @@ public class PeopleInviteFragment extends Fragment implements\n \n     private void enableSendButton(boolean enable){\n         mInviteOperationInProgress = !enable;\n-        getActivity().invalidateOptionsMenu();\n+        if (getActivity() != null) {\n+            getActivity().invalidateOptionsMenu();\n+        }\n     }\n }\n",
    "summaries": {
      "en": "Check for null before calling getActivity()",
      "zh": "在调用 getActivity()之前进行非空检查"
    }
  },
  {
    "type": "fix",
    "subtype": "I1",
    "change": "diff --git a/src/com/google/javascript/jscomp/Es6ToEs3Converter.java b/src/com/google/javascript/jscomp/Es6ToEs3Converter.java\nindex 9f3c0d7..b9571f7 100644\n--- a/src/com/google/javascript/jscomp/Es6ToEs3Converter.java\n+++ b/src/com/google/javascript/jscomp/Es6ToEs3Converter.java\n@@ -786,7 +786,7 @@ public final class Es6ToEs3Converter implements NodeTraversal.Callback, HotSwapC\n \n     Preconditions.checkNotNull(constructor);\n \n-    JSDocInfo classJSDoc = classNode.getJSDocInfo();\n+    JSDocInfo classJSDoc = NodeUtil.getBestJSDocInfo(classNode);\n     JSDocInfoBuilder newInfo = JSDocInfoBuilder.maybeCopyFrom(classJSDoc);\n \n     newInfo.recordConstructor();\n",
    "summaries": {
      "en": "Replace classNode.getJSDocInfo() with NodeUtil.getBestJSDocInfo()",
      "zh": "使用 NodeUtil.getBestJSDocInfo()代替 classNode.getJSDocInfo()"
    }
  },
  {
    "type": "fix",
    "subtype": "I3",
    "change": "diff --git a/storm-core/src/jvm/backtype/storm/tuple/TupleImpl.java b/storm-core/src/jvm/backtype/storm/tuple/TupleImpl.java\nindex 7ff2c8c..40ad11c 100644\n--- a/storm-core/src/jvm/backtype/storm/tuple/TupleImpl.java\n+++ b/storm-core/src/jvm/backtype/storm/tuple/TupleImpl.java\n@@ -215,8 +215,8 @@ public class TupleImpl extends IndifferentAccessMap implements Seqable, Indexed,\n     }\n \n     public boolean isTick() {\n-        return this.getSourceComponent().equals(Constants.SYSTEM_COMPONENT_ID) &&\n-               this.getSourceStreamId().equals(Constants.SYSTEM_TICK_STREAM_ID);\n+        return Constants.SYSTEM_COMPONENT_ID.equals(this.getSourceComponent()) &&\n+               Constants.SYSTEM_TICK_STREAM_ID.equals(this.getSourceStreamId());\n     }\n \n     public MessageId getMessageId() {\n",
    "summaries": {
      "en": "Avoid potential NPE",
      "zh": "避免可能出现的 NPE"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/src/main/java/org/elasticsearch/action/support/master/MasterNodeOperationRequest.java b/src/main/java/org/elasticsearch/action/support/master/MasterNodeOperationRequest.java\nindex 5be65a3..84509d2 100644\n--- a/src/main/java/org/elasticsearch/action/support/master/MasterNodeOperationRequest.java\n+++ b/src/main/java/org/elasticsearch/action/support/master/MasterNodeOperationRequest.java\n@@ -28,12 +28,12 @@ import java.io.IOException;\n \n /**\n  * A based request for master based operation.\n- *\n- *\n  */\n public abstract class MasterNodeOperationRequest implements ActionRequest {\n \n-    private TimeValue masterNodeTimeout = TimeValue.timeValueSeconds(30);\n+    public static TimeValue DEFAULT_MASTER_NODE_TIMEOUT = TimeValue.timeValueSeconds(30);\n+\n+    private TimeValue masterNodeTimeout = DEFAULT_MASTER_NODE_TIMEOUT;\n \n     @Override\n     public boolean listenerThreaded() {\n",
    "summaries": {
      "en": "Add static variable DEFAULT_MASTER_NODE_TIMEOUT",
      "zh": "添加静态变量DEFAULT_MASTER_NODE_TIMEOUT"
    }
  },
  {
    "type": "fix",
    "subtype": "I4",
    "change": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/Renderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/Renderer.java\nindex 29aaa1b..4e1cd46 100644\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/Renderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/Renderer.java\n@@ -55,6 +55,6 @@ public abstract class Renderer {\n         if (!Double.isInfinite(minx))\n             mMinX = (int) minx;\n         if (!Double.isInfinite(maxx))\n-            mMaxX = (int) maxx; \n+            mMaxX = (int) Math.ceil(maxx);\n     }\n }\n",
    "summaries": {
      "en": "Modified the assignment of mMaxX to use ceiling instead",
      "zh": "修改 mMaxX 的赋值方式为向上取整"
    }
  },
  {
    "type": "fix",
    "subtype": "I2",
    "change": "diff --git a/engine/src/bullet/com/jme3/bullet/PhysicsSpace.java b/engine/src/bullet/com/jme3/bullet/PhysicsSpace.java\nindex 2b6271aa1..623f8e06f 100644\n--- a/engine/src/bullet/com/jme3/bullet/PhysicsSpace.java\n+++ b/engine/src/bullet/com/jme3/bullet/PhysicsSpace.java\n@@ -150,8 +150,7 @@ public class PhysicsSpace {\n      * Has to be called from the (designated) physics thread\n      */\n     public void create() {\n-        //TODO: boroadphase!\n-        physicsSpaceId = createPhysicsSpace(worldMin.x, worldMin.y, worldMin.z, worldMax.x, worldMax.y, worldMax.z, 3, false);\n+        physicsSpaceId = createPhysicsSpace(worldMin.x, worldMin.y, worldMin.z, worldMax.x, worldMax.y, worldMax.z, broadphaseType.ordinal(), false);\n         pQueueTL.set(pQueue);\n         physicsSpaceTL.set(this);\n \n",
    "summaries": {
      "en": "Modified the parameter of the broadphaseType() function",
      "zh": "修改broadphaseType()函数的参数"
    }
  },
  {
    "type": "fix",
    "subtype": "I3",
    "change": "diff --git a/volley/src/com/android/volley/toolbox/ImageRequest.java b/volley/src/com/android/volley/toolbox/ImageRequest.java\nindex 0df9e6a37..cf18db775 100644\n--- a/volley/src/com/android/volley/toolbox/ImageRequest.java\n+++ b/volley/src/com/android/volley/toolbox/ImageRequest.java\n@@ -22,7 +22,6 @@ import com.android.volley.ParseError;\n import com.android.volley.Request;\n import com.android.volley.Response;\n import com.android.volley.VolleyLog;\n-\n import android.graphics.Bitmap;\n import android.graphics.Bitmap.Config;\n import android.graphics.BitmapFactory;\n@@ -163,9 +162,9 @@ public class ImageRequest extends Request<Bitmap> {\n             Bitmap tempBitmap =\n                 BitmapFactory.decodeByteArray(data, 0, data.length, decodeOptions);\n \n-            // Then scale to the exact desired size, if necessary.\n-            if (tempBitmap != null && (tempBitmap.getWidth() != desiredWidth ||\n-                    tempBitmap.getHeight() != desiredHeight)) {\n+            // If necessary, scale down to the maximal acceptable size.\n+            if (tempBitmap != null && (tempBitmap.getWidth() > desiredWidth ||\n+                    tempBitmap.getHeight() > desiredHeight)) {\n                 bitmap = Bitmap.createScaledBitmap(tempBitmap,\n                         desiredWidth, desiredHeight, true);\n                 tempBitmap.recycle();\n",
    "summaries": {
      "en": "Modified comparison condition for temporary bitmap",
      "zh": "修改临时位图的比较条件"
    }
  },
  {
    "type": "fix",
    "subtype": "I4",
    "change": "diff --git a/services/java/com/android/server/AlarmManagerService.java b/services/java/com/android/server/AlarmManagerService.java\nindex 9c4ace1..8d86219 100644\n--- a/services/java/com/android/server/AlarmManagerService.java\n+++ b/services/java/com/android/server/AlarmManagerService.java\n@@ -44,6 +44,7 @@ import java.util.ArrayList;\n import java.util.Calendar;\n import java.util.Collections;\n import java.util.Comparator;\n+import java.util.Date;\n import java.util.HashMap;\n import java.util.Iterator;\n import java.util.Map;\n@@ -260,8 +261,11 @@ class AlarmManagerService extends IAlarmManager.Stub {\n             \n             // Update the kernel timezone information\n             // Kernel tracks time offsets as 'minutes west of GMT'\n-            int gmtOffset = (zone.getRawOffset() + zone.getDSTSavings()) / 60000;\n-            setKernelTimezone(mDescriptor, -(gmtOffset));\n+            int gmtOffset = zone.getRawOffset();\n+            if (zone.inDaylightTime(new Date(System.currentTimeMillis()))) {\n+                gmtOffset += zone.getDSTSavings();\n+            }\n+            setKernelTimezone(mDescriptor, -(gmtOffset / 60000));\n         }\n \n         TimeZone.setDefault(null);\n",
    "summaries": {
      "en": "Rebalance gmtOffset to update kernel timezone information",
      "zh": "重新计算gmtOffset来更新内核时区信息"
    }
  },
  {
    "type": "refactor",
    "subtype": "R3",
    "change": "diff --git a/src/com/facebook/buck/cli/MissingSymbolsHandler.java b/src/com/facebook/buck/cli/MissingSymbolsHandler.java\nindex a3aa857..cac2752 100644\n--- a/src/com/facebook/buck/cli/MissingSymbolsHandler.java\n+++ b/src/com/facebook/buck/cli/MissingSymbolsHandler.java\n@@ -144,12 +144,17 @@ public class MissingSymbolsHandler {\n       }\n \n       @Subscribe\n-      public void onBuildFinished(BuildEvent.Finished event) throws InterruptedException {\n+      public void onBuildFinished(BuildEvent.Finished event) {\n         // Shortcircuit if there aren't any failures.\n         if (missingSymbolEvents.get(event.getBuildId()).isEmpty()) {\n           return;\n         }\n-        missingSymbolsHandler.printNeededDependencies(missingSymbolEvents.get(event.getBuildId()));\n+        try {\n+          missingSymbolsHandler.printNeededDependencies(\n+              missingSymbolEvents.get(event.getBuildId()));\n+        } catch (InterruptedException e) {\n+          LOG.error(e, \"Missing symbols handler did not complete in time.\");\n+        }\n         missingSymbolEvents.removeAll(event.getBuildId());\n       }\n     };\n",
    "summaries": {
      "en": "When the missing symbol handler times out, do not throw an exception",
      "zh": "当缺失的符号处理程序超时时，不要抛出异常"
    }
  },
  {
    "type": "refactor",
    "subtype": "Rx",
    "change": "diff --git a/src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java b/src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java\nindex f9b4189..962a305 100644\n--- a/src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java\n+++ b/src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java\n@@ -57,12 +57,12 @@ import org.junit.runners.model.Statement;\n public class BlockJUnit4ClassRunner extends ParentRunner<FrameworkMethod> {\n     private final ConcurrentHashMap<FrameworkMethod, Description> methodDescriptions = new ConcurrentHashMap<FrameworkMethod, Description>();\n     /**\n-     * Creates a BlockJUnit4ClassRunner to run {@code klass}\n+     * Creates a BlockJUnit4ClassRunner to run {@code testClass}\n      *\n      * @throws InitializationError if the test class is malformed.\n      */\n-    public BlockJUnit4ClassRunner(Class<?> klass) throws InitializationError {\n-        super(klass);\n+    public BlockJUnit4ClassRunner(Class<?> testClass) throws InitializationError {\n+        super(testClass);\n     }\n \n     //\n",
    "summaries": {
      "en": "Modified the parameter name of BlockJUnit4ClassRunner constructor",
      "zh": "修改 BlockJUnit4ClassRunner 构造函数参数名称"
    }
  },
  {
    "type": "cicd",
    "subtype": "Cx",
    "change": "diff --git a/jenkins/Jenkinsfile b/jenkins/Jenkinsfile\nindex 0a1b2c3..4d5e6f7 100644\n--- a/jenkins/Jenkinsfile\n+++ b/jenkins/Jenkinsfile\n@@ -16,8 +16,12 @@ node {\n    stage('Checkout') {\n       checkout scm\n    }\n\n-   stage('Build') {\n+   stage('Pre-Build') {\n+      sh 'npm ci'\n+   }\n+\n+   stage('Build & Test') {\n       sh 'npx ng build --prod'\n       sh 'npx ng test'\n    }\n@@ -25,8 +28,12 @@ node {\n    stage('Deploy to Staging') {\n       sh 'sh ./scripts/staging-deploy.sh'\n    }\n\n-   stage('Deploy to Production') {\n+   stage('Smoke Tests') {\n+      sh 'npm run e2e'\n    }\n+\n+   stage('Deploy to Production') {\n        when { branch 'master' }\n+       sh 'sh ./scripts/production-deploy.sh'\n     }\n }",
    "summaries": {
      "en": "Added pre-build, smoke testing, and deployment scripts",
      "zh": "添加预构建、smoke测试和部署脚本"
    }
  },
  {
    "type": "refactor",
    "subtype": "R5",
    "change": "diff --git a/demo/src/main/java/com/liulishuo/filedownloader/demo/Constant.java b/demo/src/main/java/com/liulishuo/filedownloader/demo/Constant.java\nindex 39dd451..3fbb4fa 100644\n--- a/demo/src/main/java/com/liulishuo/filedownloader/demo/Constant.java\n+++ b/demo/src/main/java/com/liulishuo/filedownloader/demo/Constant.java\n@@ -9,8 +9,8 @@ public interface Constant {\n             \"http://www.httpwatch.com/httpgallery/chunked/chunkedimage.aspx?0.04400023248109086\",\n     };\n \n-    String LIULISHUO_APK_URL = \"http://cdn.llsapp.com/android/LLS-v3.6.2-584-20160808-111006.apk\";\n-    String LIULISHUO_CONTENT_DISPOSITION_FILENAME = \"LLS-v3.6.2-584-20160808-111006.apk\";\n+    String LIULISHUO_APK_URL = \"http://cdn.llsapp.com/android/LLS-v4.0-595-20160908-143200.apk\";\n+    String LIULISHUO_CONTENT_DISPOSITION_FILENAME = \"LLS-v4.0-595-20160908-143200.apk\";\n \n     String[] BIG_FILE_URLS = {\n             // 5m\n",
    "summaries": {
      "en": "Update LIULISHUO_APK_URL and LIULISHUO_CONTENT_DISPOSITION_FILENAME",
      "zh": "更新LIULISHUO_APK_URL和LIULISHUO_CONTENT_DISPOSITION_FILENAME"
    }
  },
  {
    "type": "fix",
    "subtype": "I1",
    "change": "diff --git a/plugins/svn4idea/src/org/jetbrains/idea/svn/commandLine/CmdStatusClient.java b/plugins/svn4idea/src/org/jetbrains/idea/svn/commandLine/CmdStatusClient.java\nindex 3ff1015..c6e41fc 100644\n--- a/plugins/svn4idea/src/org/jetbrains/idea/svn/commandLine/CmdStatusClient.java\n+++ b/plugins/svn4idea/src/org/jetbrains/idea/svn/commandLine/CmdStatusClient.java\n@@ -26,8 +26,8 @@ import org.jetbrains.annotations.Nullable;\n import org.jetbrains.idea.svn.SvnUtil;\n import org.jetbrains.idea.svn.api.BaseSvnClient;\n import org.jetbrains.idea.svn.portable.PortableStatus;\n-import org.jetbrains.idea.svn.portable.SvnExceptionWrapper;\n import org.jetbrains.idea.svn.portable.StatusClient;\n+import org.jetbrains.idea.svn.portable.SvnExceptionWrapper;\n import org.tmatesoft.svn.core.*;\n import org.tmatesoft.svn.core.internal.util.SVNPathUtil;\n import org.tmatesoft.svn.core.wc.*;\n@@ -119,7 +119,7 @@ public class CmdStatusClient extends BaseSvnClient implements StatusClient {\n \n     if (StringUtil.isEmptyOrSpaces(result)) {\n       throw new SVNException(SVNErrorMessage.create(SVNErrorCode.FS_GENERAL, \"Status request returned nothing for command: \" +\n-                                                                             command.myCommandLine.getCommandLineString()));\n+                                                                             command.getCommandText()));\n     }\n \n     try {\n",
    "summaries": {
      "en": "Replace getCommandLineString() method with getCommandText() method",
      "zh": "使用getCommandText()方法替代getCommandLineString()方法"
    }
  },
  {
    "type": "refactor",
    "subtype": "R3",
    "change": "diff --git a/eureka-client/src/main/java/com/netflix/discovery/DiscoveryClient.java b/eureka-client/src/main/java/com/netflix/discovery/DiscoveryClient.java\nindex fa0822f..d86d3ef 100644\n--- a/eureka-client/src/main/java/com/netflix/discovery/DiscoveryClient.java\n+++ b/eureka-client/src/main/java/com/netflix/discovery/DiscoveryClient.java\n@@ -161,7 +161,7 @@ public class DiscoveryClient implements LookupService {\n     @Inject(optional=true)\n     private EventBus eventBus;\n     \n-    DiscoveryClient(InstanceInfo myInfo, EurekaClientConfig config, EventBus eventBus) {\n+    public DiscoveryClient(InstanceInfo myInfo, EurekaClientConfig config, EventBus eventBus) {\n         this(myInfo, config);\n         this.eventBus = eventBus;\n     }\n",
    "summaries": {
      "en": "Change the access modifier of the constructor from default to public",
      "zh": "将构造函数的访问权限从default改为public"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/services/java/com/android/server/updates/SELinuxPolicyInstallReceiver.java b/services/java/com/android/server/updates/SELinuxPolicyInstallReceiver.java\nindex e8337f6..0ab86e4 100644\n--- a/services/java/com/android/server/updates/SELinuxPolicyInstallReceiver.java\n+++ b/services/java/com/android/server/updates/SELinuxPolicyInstallReceiver.java\n@@ -122,9 +122,16 @@ public class SELinuxPolicyInstallReceiver extends ConfigUpdateInstallReceiver {\n     }\n \n     private void setEnforcingMode(Context context) {\n-        boolean mode = Settings.Global.getInt(context.getContentResolver(),\n-            Settings.Global.SELINUX_STATUS, 0) == 1;\n-        SELinux.setSELinuxEnforce(mode);\n+        String mode = Settings.Global.getString(context.getContentResolver(),\n+            Settings.Global.SELINUX_STATUS);\n+        if (mode.equals(\"1\")) {\n+            Slog.i(TAG, \"Setting enforcing mode\");\n+            SystemProperties.set(\"persist.selinux.enforcing\", mode);\n+        } else if (mode.equals(\"0\")) {\n+            Slog.i(TAG, \"Tried to set permissive mode, ignoring\");\n+        } else {\n+            Slog.e(TAG, \"Got invalid enforcing mode: \" + mode);\n+        }\n     }\n \n     @Override\n",
    "summaries": {
      "en": "Set the enforcing mode based on the value of Settings.Global.SELINUX_STATUS. If the mode is invalid, throw an exception",
      "zh": "根据Settings.Global.SELINUX_STATUS设置enforcing模式，如果模式无效则抛出异常"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/src/edu/stanford/nlp/pipeline/PTBTokenizerAnnotator.java b/src/edu/stanford/nlp/pipeline/PTBTokenizerAnnotator.java\nindex e69ea16..b273e36 100644\n--- a/src/edu/stanford/nlp/pipeline/PTBTokenizerAnnotator.java\n+++ b/src/edu/stanford/nlp/pipeline/PTBTokenizerAnnotator.java\n@@ -10,6 +10,7 @@ import edu.stanford.nlp.process.PTBTokenizer;\n import edu.stanford.nlp.process.Tokenizer;\n import edu.stanford.nlp.process.WhitespaceTokenizer;\n \n+import edu.stanford.nlp.util.PropertiesUtils;\n import edu.stanford.nlp.international.spanish.process.SpanishTokenizer;\n import edu.stanford.nlp.international.french.process.FrenchTokenizer;\n \n@@ -50,6 +51,10 @@ public class PTBTokenizerAnnotator extends TokenizerAnnotator {\n \t\tthis(verbose, new Properties());\n   }\n \n+\tpublic PTBTokenizerAnnotator(boolean verbose, String propString) {\n+\t\tthis(verbose, PropertiesUtils.fromString(propString));\n+\t}\n+\n \tpublic PTBTokenizerAnnotator(boolean verbose, Properties props) {\n \t\tsuper(verbose);\n \t\tLanguage type = getLangType(props);\n",
    "summaries": {
      "en": "Added a new constructor",
      "zh": "添加新的构造函数"
    }
  },
  {
    "type": "fix",
    "subtype": "I9",
    "change": "diff --git a/core/java/com/android/internal/os/ZygoteInit.java b/core/java/com/android/internal/os/ZygoteInit.java\nindex 48092f6..9dc9116 100644\n--- a/core/java/com/android/internal/os/ZygoteInit.java\n+++ b/core/java/com/android/internal/os/ZygoteInit.java\n@@ -192,10 +192,16 @@ public class ZygoteInit {\n     static void closeServerSocket() {\n         try {\n             if (sServerSocket != null) {\n+                FileDescriptor fd = sServerSocket.getFileDescriptor();\n                 sServerSocket.close();\n+                if (fd != null) {\n+                    Libcore.os.close(fd);\n+                }\n             }\n         } catch (IOException ex) {\n             Log.e(TAG, \"Zygote:  error closing sockets\", ex);\n+        } catch (libcore.io.ErrnoException ex) {\n+            Log.e(TAG, \"Zygote:  error closing descriptor\", ex);\n         }\n \n         sServerSocket = null;\n",
    "summaries": {
      "en": "Add exception handling when closing server socket",
      "zh": "在关闭服务器套接字时，添加异常处理"
    }
  },
  {
    "type": "build",
    "subtype": "B1",
    "change": "diff --git a/build.gradle b/build.gradle\nindex 8ee4d6c..564123e 100644\n--- a/build.gradle\n+++ b/build.gradle\n@@ -3,7 +3,9 @@ plugins {\n     id 'java'\n }\n \n-dependencies {\n+// Adding new libraries\n+dependencies {\n+    compile 'com.google.guava:guava:23.0'\n     testCompile group: 'junit', name: 'junit', version: '4.13.1'\n     compile 'org.projectlombok:lombok:1.18.12'\n     annotationProcessor 'org.projectlombok:lombok:1.18.12'\n@@ -14,6 +16,6 @@ dependencies {\n }\n \n java {\n-    sourceCompatibility = JavaVersion.VERSION_1_8\n+    sourceCompatibility = JavaVersion.VERSION_1_11\n     targetCompatibility = JavaVersion.VERSION_1_8\n }",
    "summaries": {
      "en": "Add GUAVA dependency",
      "zh": "添加GUAVA依赖"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/tools/layoutlib/bridge/src/com/android/layoutlib/bridge/android/BridgeWindow.java b/tools/layoutlib/bridge/src/com/android/layoutlib/bridge/android/BridgeWindow.java\nindex 379fb81..e28375d 100644\n--- a/tools/layoutlib/bridge/src/com/android/layoutlib/bridge/android/BridgeWindow.java\n+++ b/tools/layoutlib/bridge/src/com/android/layoutlib/bridge/android/BridgeWindow.java\n@@ -53,6 +53,11 @@ public final class BridgeWindow implements IWindow {\n     }\n \n     @Override\n+    public void moved(int arg0, int arg1) throws RemoteException {\n+        // pass for now.\n+    }\n+\n+    @Override\n     public void dispatchScreenState(boolean on) throws RemoteException {\n         // pass for now.\n     }\n",
    "summaries": {
      "en": "Add missing interface methods",
      "zh": "添加缺失的接口方法"
    }
  },
  {
    "type": "docs",
    "subtype": "D2",
    "change": "diff --git a/value-processor/src/org/immutables/value/processor/meta/TypeIntrospectionBase.java b/value-processor/src/org/immutables/value/processor/meta/TypeIntrospectionBase.java\nindex 36591e2c..85ce2d39 100644\n--- a/value-processor/src/org/immutables/value/processor/meta/TypeIntrospectionBase.java\n+++ b/value-processor/src/org/immutables/value/processor/meta/TypeIntrospectionBase.java\n@@ -70,7 +70,6 @@ public abstract class TypeIntrospectionBase {\n   private volatile boolean introspected;\n   protected ImmutableList<String> extendedClassesNames;\n   protected ImmutableSet<String> implementedInterfacesNames;\n-  protected ImmutableList<TypeElement> implementedInterfaceElements;\n \n   protected abstract TypeMirror internalTypeMirror();\n \n@@ -136,7 +135,7 @@ public abstract class TypeIntrospectionBase {\n     FluentIterable<DeclaredType> superIntefaceTypes =\n         FluentIterable.from(implementedInterfaces)\n             .filter(DeclaredType.class);\n-\n+/*\n     Iterable<TypeElement> superIntefaces =\n         superIntefaceTypes\n             .transform(ToDeclaredTypeElement.FUNCTION)\n@@ -146,7 +145,7 @@ public abstract class TypeIntrospectionBase {\n     superIntefaces = FluentIterable.from(superIntefaces).toSet();\n \n     implementedInterfaceElements = ImmutableList.copyOf(superIntefaces).reverse();\n-\n+*/\n     implementedInterfacesNames = superIntefaceTypes\n         .transform(ToNameOfTypeElement.FUNCTION)\n         .toSet();\n",
    "summaries": {
      "en": "Comment out unnecessary implementation code",
      "zh": "注释掉不必要的实现代码"
    }
  },
  {
    "type": "test",
    "subtype": "T1",
    "change": "diff --git a/picasso/src/test/java/com/squareup/picasso/DispatcherTest.java b/picasso/src/test/java/com/squareup/picasso/DispatcherTest.java\nindex c9643ed..4dbefbd 100644\n--- a/picasso/src/test/java/com/squareup/picasso/DispatcherTest.java\n+++ b/picasso/src/test/java/com/squareup/picasso/DispatcherTest.java\n@@ -68,6 +68,11 @@ public class DispatcherTest {\n     verify(service).shutdown();\n   }\n \n+  @Test public void shutdownUnregistersReceiver() throws Exception {\n+    dispatcher.shutdown();\n+    verify(context).unregisterReceiver(dispatcher.receiver);\n+  }\n+\n   @Test public void performSubmitWithNewRequestQueuesHunter() throws Exception {\n     Action action = TestUtils.mockAction(URI_KEY_1, URI_1);\n     dispatcher.performSubmit(action);\n",
    "summaries": {
      "en": "Add test to verify if receiver is logged out",
      "zh": "添加测试以验证接收器是否已注销"
    }
  },
  {
    "type": "refactor",
    "subtype": "R10",
    "change": "diff --git a/platform/platform-impl/src/com/intellij/ide/IdeEventQueue.java b/platform/platform-impl/src/com/intellij/ide/IdeEventQueue.java\nindex 1e38030..d4b1f4d 100644\n--- a/platform/platform-impl/src/com/intellij/ide/IdeEventQueue.java\n+++ b/platform/platform-impl/src/com/intellij/ide/IdeEventQueue.java\n@@ -1122,13 +1122,11 @@ public class IdeEventQueue extends EventQueue {\n                                                              component -> component instanceof JTable || component instanceof JTree);\n \n         if (owner instanceof JTable && ((JTable)owner).isEditing()) {\n-          //noinspection SSBasedInspection\n-          SwingUtilities.invokeLater(() -> {((JTable)owner).editingCanceled(null);});\n+          ((JTable)owner).editingCanceled(null);\n           return true;\n         }\n         if (owner instanceof JTree && ((JTree)owner).isEditing()) {\n-          //noinspection SSBasedInspection\n-          SwingUtilities.invokeLater(((JTree)owner)::cancelEditing);\n+          ((JTree)owner).cancelEditing();\n           return true;\n         }\n       }\n",
    "summaries": {
      "en": "Remove unnecessary calls to SwingUtilities.invokeLater() method",
      "zh": "删除无用的 SwingUtilities.invokeLater()方法调用"
    }
  },
  {
    "type": "docs",
    "subtype": "D2",
    "change": "diff --git a/OsmAnd-java/src/net/osmand/binary/BinaryInspector.java b/OsmAnd-java/src/net/osmand/binary/BinaryInspector.java\nindex 2e58961e6c..d19bf2734f 100644\n--- a/OsmAnd-java/src/net/osmand/binary/BinaryInspector.java\n+++ b/OsmAnd-java/src/net/osmand/binary/BinaryInspector.java\n@@ -55,11 +55,11 @@ public class BinaryInspector {\n \t\tBinaryInspector in = new BinaryInspector();\n \t\tin.inspector(args);\n \t\t// test cases show info\n-\t\tin.inspector(new String[]{\n+\t\t/*in.inspector(new String[]{\n \t\t\t\t\"-vpoi\",\n \t\t\t\t//\"-vmap\", \"-vmapobjects\", \n \t\t\t\t//\"-vstreets\", \"-bbox=14.4,50.1,14.5,50.01\", \n-\t\t\t\t\"/home/victor/projects/osmand/osm-gen/Map.obf\"});\n+\t\t\t\t\"/home/victor/projects/osmand/osm-gen/Map.obf\"});*/\n \t}\n \n \tprivate void printToFile(String s) throws IOException {\n",
    "summaries": {
      "en": "Comment out \"in.inspector()\"",
      "zh": "注释掉in.inspector()"
    }
  },
  {
    "type": "refactor",
    "subtype": "R3",
    "change": "diff --git a/hazelcast/src/main/java/com/hazelcast/nio/Address.java b/hazelcast/src/main/java/com/hazelcast/nio/Address.java\nindex 1a8c092243..604e686c06 100644\n--- a/hazelcast/src/main/java/com/hazelcast/nio/Address.java\n+++ b/hazelcast/src/main/java/com/hazelcast/nio/Address.java\n@@ -131,15 +131,9 @@ public final class Address implements IdentifiedDataSerializable {\n \n     @Override\n     public int hashCode() {\n-        return hash(host.getBytes()) * 29 + port;\n-    }\n-\n-    private int hash(byte[] bytes) {\n-        int hash = 0;\n-        for (byte b : bytes) {\n-            hash = (hash * 29) + b;\n-        }\n-        return hash;\n+        int result = port;\n+        result = 31 * result + host.hashCode();\n+        return result;\n     }\n \n     public boolean isIPv4() {\n",
    "summaries": {
      "en": "Change the implementation of hashCode() method",
      "zh": "更改 hashCode()方法的实现方式"
    }
  },
  {
    "type": "refactor",
    "subtype": "R10",
    "change": "diff --git a/app/src/main/java/com/github/pedrovgs/effectiveandroidui/ui/viewmodel/ChapterViewModel.java b/app/src/main/java/com/github/pedrovgs/effectiveandroidui/ui/viewmodel/ChapterViewModel.java\nindex 9e81b9c..39565bc 100644\n--- a/app/src/main/java/com/github/pedrovgs/effectiveandroidui/ui/viewmodel/ChapterViewModel.java\n+++ b/app/src/main/java/com/github/pedrovgs/effectiveandroidui/ui/viewmodel/ChapterViewModel.java\n@@ -83,7 +83,7 @@ public class ChapterViewModel {\n \n   public interface Listener {\n \n-    public void onRateChanged(final int rate);\n+    void onRateChanged(final int rate);\n   }\n \n   /**\n",
    "summaries": {
      "en": "Remove unnecessary public modifier",
      "zh": "删除无用的public修饰符"
    }
  },
  {
    "type": "fix",
    "subtype": "I3",
    "change": "diff --git a/h2o-core/src/main/java/water/api/SchemaMetadata.java b/h2o-core/src/main/java/water/api/SchemaMetadata.java\nindex 87a4e415e..624268d2e 100644\n--- a/h2o-core/src/main/java/water/api/SchemaMetadata.java\n+++ b/h2o-core/src/main/java/water/api/SchemaMetadata.java\n@@ -285,7 +285,7 @@ public final class SchemaMetadata extends Iced {\n           if ((schema instanceof FieldMetadataV3 || schema instanceof FieldMetadataBase) && \"value\".equals(field_name))\n             return \"Polymorphic\";\n \n-          if ((schema instanceof TwoDimTableV3 && \"data\".equals(field_name))) // IcedWrapper\n+          if (((schema instanceof TwoDimTableBase || schema instanceof TwoDimTableV3) && \"data\".equals(field_name))) // IcedWrapper\n             return \"Polymorphic\";\n \n           Log.warn(\"WARNING: found non-Schema Iced field: \" + clz.toString() + \" in Schema: \" + schema.getClass() + \" field: \" + field_name);\n",
    "summaries": {
      "en": "Modified the judgment criteria for Polymorphic",
      "zh": "修改Polymorphic的判断条件"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/java/org/apache/catalina/security/SecurityClassLoad.java b/java/org/apache/catalina/security/SecurityClassLoad.java\nindex 3c3a5cf54..483eac66b 100644\n--- a/java/org/apache/catalina/security/SecurityClassLoad.java\n+++ b/java/org/apache/catalina/security/SecurityClassLoad.java\n@@ -44,6 +44,7 @@ public final class SecurityClassLoad {\n         loadJavaxPackage(loader);\n         loadCoyotePackage(loader);        \n         loadHttp11Package(loader);        \n+        loadTomcatPackage(loader);\n     }\n     \n     \n@@ -209,5 +210,10 @@ public final class SecurityClassLoad {\n              \"Response$3\");\n     }\n \n+    private final static void loadTomcatPackage(ClassLoader loader)\n+        throws Exception {\n+        String basePackage = \"org.apache.tomcat.\";\n+        loader.loadClass(basePackage + \"util.net.SSLSupport$CipherData\");\n+    }\n }\n \n",
    "summaries": {
      "en": "Preload a class to obtain SSL key size when the application runs under a security manager",
      "zh": "预加载一个类，以便应用程序在安全管理器下运行时获取SSL密钥大小"
    }
  },
  {
    "type": "refactor",
    "subtype": "R3",
    "change": "diff --git a/server/src/main/java/io/druid/server/coordinator/CoordinatorDynamicConfig.java b/server/src/main/java/io/druid/server/coordinator/CoordinatorDynamicConfig.java\nindex 177ff2a..20cd594 100644\n--- a/server/src/main/java/io/druid/server/coordinator/CoordinatorDynamicConfig.java\n+++ b/server/src/main/java/io/druid/server/coordinator/CoordinatorDynamicConfig.java\n@@ -53,7 +53,7 @@ public class CoordinatorDynamicConfig\n     this.replicantLifetime = replicantLifetime;\n     this.replicationThrottleLimit = replicationThrottleLimit;\n     this.emitBalancingStats = emitBalancingStats;\n-    this.balancerComputeThreads = balancerComputeThreads;\n+    this.balancerComputeThreads = Math.min(balancerComputeThreads, Runtime.getRuntime().availableProcessors() - 1);\n   }\n \n   @JsonProperty\n",
    "summaries": {
      "en": "Set limit on the load balancer calculation thread",
      "zh": "在负载均衡器计算线程上设置限制"
    }
  },
  {
    "type": "test",
    "subtype": "T1",
    "change": "diff --git a/core/client/src/test/java/alluxio/client/block/UnderStoreBlockInStreamTest.java b/core/client/src/test/java/alluxio/client/block/UnderStoreBlockInStreamTest.java\nindex 7aa8b09..771aeee 100644\n--- a/core/client/src/test/java/alluxio/client/block/UnderStoreBlockInStreamTest.java\n+++ b/core/client/src/test/java/alluxio/client/block/UnderStoreBlockInStreamTest.java\n@@ -83,7 +83,7 @@ public class UnderStoreBlockInStreamTest {\n    */\n   private void singleByteReadInternal(UnderStoreBlockInStream inStream, int startIndex)\n       throws IOException {\n-    long remaining = mBlockStream.remaining();\n+    long remaining = inStream.remaining();\n     for (int i = startIndex; i < startIndex + BLOCK_LENGTH; i++) {\n       Assert.assertEquals(i, inStream.read());\n       remaining--;\n",
    "summaries": {
      "en": "Change mBlockStream to inStream variable",
      "zh": "将mBlockStream改为inStream变量"
    }
  },
  {
    "type": "refactor",
    "subtype": "R3",
    "change": "diff --git a/core/src/main/java/com/orientechnologies/orient/core/type/tree/OMVRBTreePersistent.java b/core/src/main/java/com/orientechnologies/orient/core/type/tree/OMVRBTreePersistent.java\nindex a90a796..e4c934c 100644\n--- a/core/src/main/java/com/orientechnologies/orient/core/type/tree/OMVRBTreePersistent.java\n+++ b/core/src/main/java/com/orientechnologies/orient/core/type/tree/OMVRBTreePersistent.java\n@@ -83,7 +83,7 @@ public abstract class OMVRBTreePersistent<K, V> extends OMVRBTree<K, V> implemen\n \r\n \tpublic OMVRBTreePersistent(String iClusterName, final OStreamSerializer iKeySerializer, final OStreamSerializer iValueSerializer) {\r\n \t\t// MINIMIZE I/O USING A LARGER PAGE THAN THE DEFAULT USED IN MEMORY\r\n-\t\tsuper(1024, 0.7f);\r\n+\t\tsuper(OGlobalConfiguration.MVRBTREE_NODE_PAGE_SIZE.getValueAsInteger(), 0.7f);\r\n \t\tconfig();\r\n \r\n \t\tclusterName = iClusterName;\r\n@@ -640,7 +640,7 @@ public abstract class OMVRBTreePersistent<K, V> extends OMVRBTree<K, V> implemen\n \r\n \t\tfinal V previous = super.put(key, value);\r\n \r\n-\t\tif (insertionCounter > optimizeThreshold) {\r\n+\t\tif (optimizeThreshold > -1 && insertionCounter > optimizeThreshold) {\r\n \t\t\tinsertionCounter = 0;\r\n \t\t\toptimize(false);\r\n \t\t} else\r\n",
    "summaries": {
      "en": "Adjust the node page size to OGlobalConfiguration.MVRBTREE_NODE_PAGE_SIZE",
      "zh": "将节点页大小调整为OGlobalConfiguration.MVRBTREE_NODE_PAGE_SIZE"
    }
  },
  {
    "type": "docs",
    "subtype": "D2",
    "change": "diff --git a/subprojects/maven/src/main/groovy/org/gradle/api/publish/maven/MavenPublication.java b/subprojects/maven/src/main/groovy/org/gradle/api/publish/maven/MavenPublication.java\nindex 16a289e..a3363fe 100644\n--- a/subprojects/maven/src/main/groovy/org/gradle/api/publish/maven/MavenPublication.java\n+++ b/subprojects/maven/src/main/groovy/org/gradle/api/publish/maven/MavenPublication.java\n@@ -61,15 +61,14 @@ import org.gradle.internal.HasInternalProtocol;\n  *\n  * task sourceJar(type: Jar) {\n  *   from sourceSets.main.allJava\n+ *   classifier \"sources\"\n  * }\n  *\n  * publishing {\n  *   publications {\n  *     myPublication(MavenPublication) {\n  *       from components.java\n- *       artifact(sourceJar) {\n- *         classifier \"sources\"\n- *       }\n+ *       artifact sourceJar\n  *       pom.withXml {\n  *         asNode().appendNode('description', 'A demonstration of Maven POM customization')\n  *       }\n",
    "summaries": {
      "en": "Fix javadoc examples",
      "zh": "修复 javadoc 示例"
    }
  },
  {
    "type": "fix",
    "subtype": "I11",
    "change": "diff --git a/h2o-core/src/main/java/water/JettyHTTPD.java b/h2o-core/src/main/java/water/JettyHTTPD.java\nindex b0ec27633..087176c8c 100644\n--- a/h2o-core/src/main/java/water/JettyHTTPD.java\n+++ b/h2o-core/src/main/java/water/JettyHTTPD.java\n@@ -573,7 +573,13 @@ public class JettyHTTPD {\n \n         // Handle shutdown if it was requested.\n         if (H2O.getShutdownRequested()) {\n-          H2O.shutdown(0);\n+          (new Thread() {\n+            public void run() {\n+              try { Thread.sleep(2000); }\n+              catch (Exception ignore) {}\n+              H2O.shutdown(0);\n+            }\n+          }).start();\n         }\n \n         endTransaction();\n",
    "summaries": {
      "en": "Added a new thread in JettyHTTPD class to delay 2 seconds before executing H2O.shutdown(0)",
      "zh": "在 JettyHTTPD 类中，增加了一个新的线程来延迟 2 秒后执行 H2O.shutdown(0)"
    }
  },
  {
    "type": "refactor",
    "subtype": "R4",
    "change": "diff --git a/src/main/java/com/jayway/maven/plugins/android/phase09package/ApkBuilder.java b/src/main/java/com/jayway/maven/plugins/android/phase09package/ApkBuilder.java\nindex 002b4a2c..0a9a192a 100644\n--- a/src/main/java/com/jayway/maven/plugins/android/phase09package/ApkBuilder.java\n+++ b/src/main/java/com/jayway/maven/plugins/android/phase09package/ApkBuilder.java\n@@ -265,9 +265,9 @@ public class ApkBuilder {\n         try {\n             addResourcesFromJarMethod.invoke(builder, new Object[] { jarFile });\n         } catch (InvocationTargetException e) {\n-            log.error(\"Cannot add resources from \" + jarFile.getAbsolutePath(), e.getCause());\n-            throw new MojoExecutionException(\"Cannot add resources from \" + jarFile.getAbsolutePath(),\n-                    e.getCause());\n+            final String message = \"Cannot add resources from \" + jarFile.getAbsolutePath();\n+            log.error(message, e.getCause());\n+            throw new MojoExecutionException(message, e.getCause());\n         } catch (Exception e) {\n             log.error(\"Cannot add source folder\", e);\n             throw new MojoExecutionException(\"Cannot add resources from jar\", e);\n",
    "summaries": {
      "en": "Put the error message into a local variable and throw an exception",
      "zh": "将错误信息放入本地变量并抛异常"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/local-cli/generator-android/templates/package/MainActivity.java b/local-cli/generator-android/templates/package/MainActivity.java\nindex ba1c766..a79b26c 100644\n--- a/local-cli/generator-android/templates/package/MainActivity.java\n+++ b/local-cli/generator-android/templates/package/MainActivity.java\n@@ -45,6 +45,15 @@ public class MainActivity extends Activity implements DefaultHardwareBackBtnHand\n     }\n \n     @Override\n+    public void onBackPressed() {\n+      if (mReactInstanceManager != null) {\n+        mReactInstanceManager.onBackPressed();\n+      } else {\n+        super.onBackPressed();\n+      }\n+    }\n+\n+    @Override\n     public void invokeDefaultOnBackPressed() {\n       super.onBackPressed();\n     }\n",
    "summaries": {
      "en": "Rewritten onBackPressed() method and added code",
      "zh": "重写onBackPressed()方法并添加代码"
    }
  },
  {
    "type": "docs",
    "subtype": "D2",
    "change": "diff --git a/java/org/apache/tomcat/util/file/Matcher.java b/java/org/apache/tomcat/util/file/Matcher.java\nindex c2ab0eb8b..1996907e5 100644\n--- a/java/org/apache/tomcat/util/file/Matcher.java\n+++ b/java/org/apache/tomcat/util/file/Matcher.java\n@@ -37,7 +37,7 @@ public final class Matcher {\n      *\n      * @param patternSet The pattern set to match against. Must not be\n      *                <code>null</code>.\n-     * @param str     The file name to match, as a String. Must not be\n+     * @param fileName The file name to match, as a String. Must not be\n      *                <code>null</code>. It must be just a file name, without\n      *                a path.\n      *\n",
    "summaries": {
      "en": "Change parameter name from 'str' to 'fileName'",
      "zh": "将参数名称从'str'更改为'fileName'"
    }
  },
  {
    "type": "refactor",
    "subtype": "R8",
    "change": "diff --git a/WordPress/src/main/java/org/wordpress/android/util/WPPrefUtils.java b/WordPress/src/main/java/org/wordpress/android/util/WPPrefUtils.java\nindex f7247665c..815137576 100644\n--- a/WordPress/src/main/java/org/wordpress/android/util/WPPrefUtils.java\n+++ b/WordPress/src/main/java/org/wordpress/android/util/WPPrefUtils.java\n@@ -13,9 +13,10 @@ import android.util.TypedValue;\n import android.widget.EditText;\n import android.widget.TextView;\n \n-import org.wordpress.android.R;\n import org.wordpress.android.widgets.TypefaceCache;\n \n+import org.wordpress.android.R;\n+\n import java.util.Arrays;\n import java.util.HashMap;\n import java.util.Locale;\n",
    "summaries": {
      "en": "Move import statement position",
      "zh": "移动导入语句位置"
    }
  },
  {
    "type": "refactor",
    "subtype": "R6",
    "change": "diff --git a/src/net/java/sip/communicator/impl/protocol/irc/ChatRoomIrcImpl.java b/src/net/java/sip/communicator/impl/protocol/irc/ChatRoomIrcImpl.java\nindex ab9c47f6e..5a2c84daa 100644\n--- a/src/net/java/sip/communicator/impl/protocol/irc/ChatRoomIrcImpl.java\n+++ b/src/net/java/sip/communicator/impl/protocol/irc/ChatRoomIrcImpl.java\n@@ -643,10 +643,14 @@ public class ChatRoomIrcImpl\n     public void setUserNickname(final String nickName)\n         throws OperationFailedException\n     {\n-        throw new OperationFailedException(\n-            \"Nick names are managed by the connection to the IRC server. They \"\n-                + \"cannot be changed on the level of an invididual chat room.\",\n-            OperationFailedException.NOT_SUPPORTED_OPERATION);\n+        // TODO Joining a chat room fails altogether if we throw an\n+        // OperationFailedException here.\n+        LOGGER.info(\"Setting a nick name for an individual chat room is not \"\n+            + \"supported for IRC.\");\n+        // throw new OperationFailedException(\n+        // \"Nick names are managed by the connection to the IRC server. They \"\n+        // + \"cannot be changed on the level of an invididual chat room.\",\n+        // OperationFailedException.NOT_SUPPORTED_OPERATION);\n     }\n \n     /**\n",
    "summaries": {
      "en": "Replace exception throwing with log logging",
      "zh": "使用log日志记录代替异常抛出"
    }
  },
  {
    "type": "fix",
    "subtype": "I7",
    "change": "diff --git a/src/org/editorconfig/configmanagement/CodeStyleManager.java b/src/org/editorconfig/configmanagement/CodeStyleManager.java\nindex 81195ca..879d560 100644\n--- a/src/org/editorconfig/configmanagement/CodeStyleManager.java\n+++ b/src/org/editorconfig/configmanagement/CodeStyleManager.java\n@@ -148,7 +148,9 @@ public class CodeStyleManager extends FileEditorManagerAdapter implements Window\n \n     private boolean applyIndentSize(final CommonCodeStyleSettings.IndentOptions indentOptions, final String indentSize) {\n         try {\n-            indentOptions.INDENT_SIZE = Integer.parseInt(indentSize);\n+            int indent = Integer.parseInt(indentSize);\n+            indentOptions.INDENT_SIZE = indent;\n+            indentOptions.CONTINUATION_INDENT_SIZE = indent;\n             return true;\n         } catch (NumberFormatException e) {\n             return false;\n",
    "summaries": {
      "en": "Set CONTINUATION_INDENT_SIZE to INDENT_SIZE",
      "zh": "将CONTINUATION_INDENT_SIZE设置为INDENT_SIZE"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/actor-sdk/sdk-core/core/core-js/src/main/java/im/actor/core/js/JsFacade.java b/actor-sdk/sdk-core/core/core-js/src/main/java/im/actor/core/js/JsFacade.java\nindex a994a28..8dc9c3d 100644\n--- a/actor-sdk/sdk-core/core/core-js/src/main/java/im/actor/core/js/JsFacade.java\n+++ b/actor-sdk/sdk-core/core/core-js/src/main/java/im/actor/core/js/JsFacade.java\n@@ -635,6 +635,11 @@ public class JsFacade implements Exportable {\n         messenger.sendClipboardPhoto(peer.convert(), blob);\n     }\n \n+    public void sendVoiceMessage(final JsPeer peer, int duration, final JsBlob blob) {\n+        String descriptor = provider.registerUploadFile(blob);\n+        messenger.sendAudio(peer.convert(), \"voice.opus\", duration, descriptor);\n+    }\n+\n     // Drafts\n \n     public void saveDraft(JsPeer peer, String text) {\n",
    "summaries": {
      "en": "Add sendVoiceMessage() method",
      "zh": "添加 sendVoiceMessage()方法"
    }
  },
  {
    "type": "fix",
    "subtype": "I2",
    "change": "diff --git a/plugins/testng/src/com/theoryinpractice/testng/TestNGReferenceContributor.java b/plugins/testng/src/com/theoryinpractice/testng/TestNGReferenceContributor.java\nindex 0a9acf2..6e483fb 100644\n--- a/plugins/testng/src/com/theoryinpractice/testng/TestNGReferenceContributor.java\n+++ b/plugins/testng/src/com/theoryinpractice/testng/TestNGReferenceContributor.java\n@@ -170,7 +170,7 @@ public class TestNGReferenceContributor extends PsiReferenceContributor {\n       if (cls != null) {\n         PsiMethod[] methods = cls.findMethodsByName(methodName, true);\n         for (PsiMethod method : methods) {\n-          if (TestNGUtil.hasTest(method) || TestNGUtil.hasConfig(method)) {\n+          if (TestNGUtil.hasTest(method, false) || TestNGUtil.hasConfig(method)) {\n             return method;\n           }\n         }\n",
    "summaries": {
      "en": "Change the calling parameters of TestNGUtil.hasTest() function",
      "zh": "更改TestNGUtil.hasTest()函数的调用参数"
    }
  },
  {
    "type": "refactor",
    "subtype": "R10",
    "change": "diff --git a/engine/src/main/java/org/terasology/rendering/dag/nodes/PrePostCompositeNode.java b/engine/src/main/java/org/terasology/rendering/dag/nodes/PrePostCompositeNode.java\nindex 1ed02be14..64f79fb13 100644\n--- a/engine/src/main/java/org/terasology/rendering/dag/nodes/PrePostCompositeNode.java\n+++ b/engine/src/main/java/org/terasology/rendering/dag/nodes/PrePostCompositeNode.java\n@@ -32,9 +32,7 @@ import org.terasology.rendering.world.WorldRenderer;\n import static org.lwjgl.opengl.GL11.GL_COLOR_BUFFER_BIT;\n import static org.lwjgl.opengl.GL11.GL_DEPTH_BUFFER_BIT;\n import static org.lwjgl.opengl.GL11.glClear;\n-import static org.terasology.rendering.opengl.OpenGLUtils.bindDisplay;\n import static org.terasology.rendering.opengl.OpenGLUtils.renderFullscreenQuad;\n-import static org.terasology.rendering.opengl.OpenGLUtils.setViewportToSizeOf;\n \n /**\n  * TODO: Add diagram of this node\n@@ -66,17 +64,12 @@ public class PrePostCompositeNode extends AbstractNode {\n     @Override\n     public void process() {\n         PerformanceMonitor.startActivity(\"rendering/prePostComposite\");\n-        sceneReflectiveRefractive = displayResolutionDependentFBOs.get(REFLECTIVE_REFRACTIVE);\n-\n         glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); // TODO: verify this is necessary\n \n         renderFullscreenQuad();\n-\n-        bindDisplay();     // TODO: verify this is necessary\n-        setViewportToSizeOf(READ_ONLY_GBUFFER); // TODO: verify this is necessary\n-\n         displayResolutionDependentFBOs.swapReadWriteBuffers();\n \n+        sceneReflectiveRefractive = displayResolutionDependentFBOs.get(REFLECTIVE_REFRACTIVE);\n         READ_ONLY_GBUFFER.attachDepthBufferTo(sceneReflectiveRefractive);\n         // TODO: verify why we can't move the buffer attachment to before the swap by using WRITE_ONLY_GBUFFER instead.\n         // TODO: See right-side streaks in https://cloud.githubusercontent.com/assets/136392/17794231/456f542a-65b6-11e6-83bb-f2cc3f10ee66.png\n",
    "summaries": {
      "en": "Unbind the binding setting of the readable buffer",
      "zh": "取消可读缓冲区的绑定设置"
    }
  },
  {
    "type": "refactor",
    "subtype": "R10",
    "change": "diff --git a/src/main/java/org/terasology/logic/grammar/SplitRule.java b/src/main/java/org/terasology/logic/grammar/SplitRule.java\nindex 671d8dc11..c2a8e994e 100644\n--- a/src/main/java/org/terasology/logic/grammar/SplitRule.java\n+++ b/src/main/java/org/terasology/logic/grammar/SplitRule.java\n@@ -66,9 +66,9 @@ public class SplitRule extends ComplexRule {\n      */\r\n     private List<Shape> getWallElements(Shape shape) {\r\n         // the origin of the bounding box\r\n-        int px = position.x;\r\n-        int py = position.y;\r\n-        int pz = position.z;\r\n+        /* int px = position.x;\r\n+     int py = position.y;\r\n+     int pz = position.z;*/\r\n         // the original dimensions of the _split_ command\r\n         int dx = dimension.x;\r\n         int dy = dimension.y;\r\n",
    "summaries": {
      "en": "Remove unnecessary comments",
      "zh": "注释无用的代码"
    }
  },
  {
    "type": "cicd",
    "subtype": "Cx",
    "change": "diff --git a/CICD/pipeline.yml b/CICD/pipeline.yml\nindex 678f637..892a597 100644\n--- a/CICD/pipeline.yml\n+++ b/CICD/pipeline.yml\n@@ -1,13 +1,22 @@\n stages:\n   - build\n   - test\n-  - deploy\n+  - staging\n+  - production\n \n jobs:\n   build:\n     stage: build\n     script: 'make build'\n \n   test:\n     stage: test\n     script: 'make test'\n+    \n+  staging:\n+    stage: staging\n+    script: 'make deploy-staging'\n+  \n+  production:\n+    stage: production\n+    script: 'make deploy-production'",
    "summaries": {
      "en": "Add deployment tasks for pre-release and production environments",
      "zh": "添加预发和生产环境部署任务"
    }
  },
  {
    "type": "refactor",
    "subtype": "R6",
    "change": "diff --git a/plugins/android/common/src/org/jetbrains/android/util/AndroidCommonUtils.java b/plugins/android/common/src/org/jetbrains/android/util/AndroidCommonUtils.java\nindex 1708398..46bf04c 100644\n--- a/plugins/android/common/src/org/jetbrains/android/util/AndroidCommonUtils.java\n+++ b/plugins/android/common/src/org/jetbrains/android/util/AndroidCommonUtils.java\n@@ -458,7 +458,7 @@ public class AndroidCommonUtils {\n           revisionNumber = Integer.parseInt(revision);\n         }\n         catch (NumberFormatException e) {\n-          LOG.info(e);\n+          LOG.debug(e);\n         }\n       }\n     }\n",
    "summaries": {
      "en": "Change log level to debug",
      "zh": "修改日志级别为debug"
    }
  },
  {
    "type": "refactor",
    "subtype": "R10",
    "change": "diff --git a/LongTaskAPI/src/org/gephi/utils/longtask/LongTaskExecutor.java b/LongTaskAPI/src/org/gephi/utils/longtask/LongTaskExecutor.java\nindex dd641307d..552770407 100644\n--- a/LongTaskAPI/src/org/gephi/utils/longtask/LongTaskExecutor.java\n+++ b/LongTaskAPI/src/org/gephi/utils/longtask/LongTaskExecutor.java\n@@ -234,11 +234,11 @@ public final class LongTaskExecutor {\n         }\n \n         public boolean cancel() {\n-            if (inBackground) {\n+            /*if (inBackground) {\n                 if (future != null && future.cancel(false)) {\n                     return true;\n                 }\n-            }\n+            }*/\n             if (task != null) {\n                 return task.cancel();\n             }\n",
    "summaries": {
      "en": "Comment out the unnecessary if statement",
      "zh": "注释掉无用的if判断"
    }
  },
  {
    "type": "fix",
    "subtype": "I2",
    "change": "diff --git a/core/src/test/java/tachyon/master/LocalTachyonClusterMultiMaster.java b/core/src/test/java/tachyon/master/LocalTachyonClusterMultiMaster.java\nindex 61ff9c6..22d92c8 100644\n--- a/core/src/test/java/tachyon/master/LocalTachyonClusterMultiMaster.java\n+++ b/core/src/test/java/tachyon/master/LocalTachyonClusterMultiMaster.java\n@@ -104,7 +104,7 @@ public class LocalTachyonClusterMultiMaster {\n \n   private List<TachyonFS> mClients = new ArrayList<TachyonFS>();\n \n-  private LocalTachyonClusterMultiMaster(int masterPort, int workerPort, long workerCapacityBytes,\n+  public LocalTachyonClusterMultiMaster(int masterPort, int workerPort, long workerCapacityBytes,\n       int masters) {\n     mNumOfMasters = masters;\n     mMastersPorts = new ArrayList<Integer>(masters);\n@@ -122,7 +122,8 @@ public class LocalTachyonClusterMultiMaster {\n   }\n \n   public LocalTachyonClusterMultiMaster(long workerCapacityBytes, int masters) {\n-    this(0, 0, workerCapacityBytes, masters);\n+    this(Constants.DEFAULT_MASTER_PORT - 1000, Constants.DEFAULT_WORKER_PORT - 1000,\n+        workerCapacityBytes, masters);\n   }\n \n   public synchronized TachyonFS getClient() throws IOException {\n",
    "summaries": {
      "en": "Modified constructor parameters",
      "zh": "修改构造函数参数"
    }
  },
  {
    "type": "fix",
    "subtype": "I2",
    "change": "diff --git a/moco-core/src/main/java/com/github/dreamhead/moco/handler/JsonResponseHandler.java b/moco-core/src/main/java/com/github/dreamhead/moco/handler/JsonResponseHandler.java\nindex 89d64d46..944f1e56 100644\n--- a/moco-core/src/main/java/com/github/dreamhead/moco/handler/JsonResponseHandler.java\n+++ b/moco-core/src/main/java/com/github/dreamhead/moco/handler/JsonResponseHandler.java\n@@ -20,7 +20,7 @@ public class JsonResponseHandler extends AbstractContentResponseHandler {\n     }\n \n     @Override\n-    protected MediaType getContentType(HttpRequest request) {\n+    protected MediaType getContentType(final HttpRequest request) {\n         return MediaType.create(\"application\", \"json\").withCharset(content.getCharset());\n     }\n }\n",
    "summaries": {
      "en": "Change method parameter to final",
      "zh": "更改方法参数为final"
    }
  },
  {
    "type": "feat",
    "subtype": "E1",
    "change": "diff --git a/packages/SystemUI/src/com/android/systemui/recents/views/TaskStackLayoutAlgorithm.java b/packages/SystemUI/src/com/android/systemui/recents/views/TaskStackLayoutAlgorithm.java\nindex 1ee22e9..726e453 100644\n--- a/packages/SystemUI/src/com/android/systemui/recents/views/TaskStackLayoutAlgorithm.java\n+++ b/packages/SystemUI/src/com/android/systemui/recents/views/TaskStackLayoutAlgorithm.java\n@@ -751,6 +751,11 @@ public class TaskStackLayoutAlgorithm {\n      * Updates the current transforms that would put a TaskView at the front and back of the stack.\n      */\n     private void updateFrontBackTransforms() {\n+        // Return early if we have not yet initialized\n+        if (mStackRect.isEmpty()) {\n+            return;\n+        }\n+\n         float min = mUnfocusedRange.relativeMin +\n                 mFocusState * (mFocusedRange.relativeMin - mUnfocusedRange.relativeMin);\n         float max = mUnfocusedRange.relativeMax +\n",
    "summaries": {
      "en": "Added early return condition in updateFrontBackTransforms() method",
      "zh": "在updateFrontBackTransforms()方法中添加早期返回条件"
    }
  },
  {
    "type": "docs",
    "subtype": "D2",
    "change": "diff --git a/subprojects/core/src/main/groovy/org/gradle/api/artifacts/ComponentModuleMetadataDetails.java b/subprojects/core/src/main/groovy/org/gradle/api/artifacts/ComponentModuleMetadataDetails.java\nindex cd5bca3..7e1d291 100644\n--- a/subprojects/core/src/main/groovy/org/gradle/api/artifacts/ComponentModuleMetadataDetails.java\n+++ b/subprojects/core/src/main/groovy/org/gradle/api/artifacts/ComponentModuleMetadataDetails.java\n@@ -20,6 +20,7 @@ import org.gradle.api.Incubating;\n \n /**\n  * Contains and allows configuring component module metadata information.\n+ * For information and examples please see {@link org.gradle.api.artifacts.dsl.ComponentMetadataHandler}\n  *\n  * @since 2.2\n  */\n@@ -30,7 +31,9 @@ public interface ComponentModuleMetadataDetails extends ComponentModuleMetadata\n      * Configures a replacement module for this module.\n      * A real world example: 'com.google.collections:google-collections' is replaced by 'com.google.guava:guava'.\n      *\n-     * //TODO SF document that it replaces, add coverage for replacing with 'self'\n+     * Subsequent invocations of this method replace the previous 'replacedBy' value.\n+     *\n+     * For information and examples please see {@link org.gradle.api.artifacts.dsl.ComponentMetadataHandler}.\n      *\n      * @param moduleNotation a String like 'com.google.guava:guava', an instance of {@link org.gradle.api.artifacts.ModuleVersionIdentifier}, null is not permitted\n      */\n",
    "summaries": {
      "en": "Add comments for explanation",
      "zh": "添加注释说明"
    }
  },
  {
    "type": "docs",
    "subtype": "D2",
    "change": "diff --git a/core/src/processing/core/PVector.java b/core/src/processing/core/PVector.java\nindex 58f86da..49e54a0 100644\n--- a/core/src/processing/core/PVector.java\n+++ b/core/src/processing/core/PVector.java\n@@ -161,7 +161,7 @@ public class PVector implements Serializable {\n    * @param x the x component of the vector\n    * @param y the y component of the vector\n    * @param z the z component of the vector\n-   * @brief Set the x, y, and z component of the vector\n+   * @brief Set the components of the vector\n    */\n   public void set(float x, float y, float z) {\n     this.x = x;\n@@ -170,11 +170,8 @@ public class PVector implements Serializable {\n   }\n \n   /**\n-   *\n-   * @webref pvector:method\n    * @param x the x component of the vector\n    * @param y the y component of the vector\n-   * @brief Set the x, y components of the vector\n    */\n   public void set(float x, float y) {\n     this.x = x;\n",
    "summaries": {
      "en": "Change and delete unnecessary comments",
      "zh": "更改并删除无用的注释"
    }
  },
  {
    "type": "test",
    "subtype": "T1",
    "change": "diff --git a/src/test/java/org/opentripplanner/routing/edgetype/loader/TestPatternHopFactory.java b/src/test/java/org/opentripplanner/routing/edgetype/loader/TestPatternHopFactory.java\nindex 32807f83c..76c4e8f95 100644\n--- a/src/test/java/org/opentripplanner/routing/edgetype/loader/TestPatternHopFactory.java\n+++ b/src/test/java/org/opentripplanner/routing/edgetype/loader/TestPatternHopFactory.java\n@@ -38,18 +38,16 @@ import org.opentripplanner.gtfs.GtfsLibrary;\n import org.opentripplanner.routing.algorithm.GenericAStar;\n import org.opentripplanner.routing.core.OptimizeType;\n import org.opentripplanner.routing.core.RoutingRequest;\n-import org.opentripplanner.routing.core.State;\n import org.opentripplanner.routing.core.StopTransfer;\n import org.opentripplanner.routing.core.TransferTable;\n import org.opentripplanner.routing.core.TraverseModeSet;\n-import org.opentripplanner.routing.edgetype.PatternDwell;\n import org.opentripplanner.routing.edgetype.PatternHop;\n import org.opentripplanner.routing.edgetype.PlainStreetEdge;\n import org.opentripplanner.routing.edgetype.StreetTransitLink;\n import org.opentripplanner.routing.edgetype.StreetTraversalPermission;\n-import org.opentripplanner.routing.edgetype.TripPattern;\n import org.opentripplanner.routing.edgetype.TransferEdge;\n import org.opentripplanner.routing.edgetype.TransitBoardAlight;\n+import org.opentripplanner.routing.edgetype.TripPattern;\n import org.opentripplanner.routing.edgetype.factory.GTFSPatternHopFactory;\n import org.opentripplanner.routing.graph.Edge;\n import org.opentripplanner.routing.graph.Graph;\n@@ -486,11 +484,10 @@ public class TestPatternHopFactory extends TestCase {\n         ShortestPathTree spt = aStar.getShortestPathTree(options);\n         GraphPath path = spt.getPath(destination, false);\n \n-        // TODO this is wrong (milliseconds)\n-//        long endTime = path.getEndTime();\n-//        Calendar c = new GregorianCalendar();\n-//        c.setTimeInMillis(endTime);\n-//        assertTrue(endTime - startTime.getTimeInMillis() < 7200);\n+        long endTime = path.getEndTime();\n+        Calendar c = new GregorianCalendar();\n+        c.setTimeInMillis(endTime * 1000L);\n+        assertTrue(endTime - TestUtils.toSeconds(startTime) < 7200);\n     }\n \n     public void testFrequencies() {\n",
    "summaries": {
      "en": "Fixed millisecond issue",
      "zh": "修复了毫秒问题"
    }
  },
  {
    "type": "test",
    "subtype": "T1",
    "change": "diff --git a/modules/activiti-engine/src/test/java/org/activiti/examples/mgmt/TablePageQueryTest.java b/modules/activiti-engine/src/test/java/org/activiti/examples/mgmt/TablePageQueryTest.java\nindex 9696f2d6a..c2d298022 100644\n--- a/modules/activiti-engine/src/test/java/org/activiti/examples/mgmt/TablePageQueryTest.java\n+++ b/modules/activiti-engine/src/test/java/org/activiti/examples/mgmt/TablePageQueryTest.java\n@@ -74,8 +74,15 @@ public class TablePageQueryTest extends PluggableActivitiTestCase {\n   \n   private void verifyTaskNames(String[] expectedTaskNames, List<Map<String, Object>> rowData) {\n     assertEquals(expectedTaskNames.length, rowData.size());\n+    String columnKey = \"NAME_\";\n+\n+    // mybatis will return the correct case for postgres table columns from version 3.0.6 on\n+    if (processEngineConfiguration.getDatabaseType().equals(\"postgres\")) {\n+      columnKey = \"name_\";\n+    }\n+    \n     for (int i=0; i < expectedTaskNames.length; i++) {\n-      assertEquals(expectedTaskNames[i], rowData.get(i).get(\"NAME_\"));\n+      assertEquals(expectedTaskNames[i], rowData.get(i).get(columnKey));\n     }\n   }\n   \n",
    "summaries": {
      "en": "Fix case sensitivity issue with table column names for PostgreSQL version",
      "zh": "针对postgres版本，修复表列名称大小写问题"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/handler/src/main/java/io/netty/handler/ssl/util/FingerprintTrustManagerFactory.java b/handler/src/main/java/io/netty/handler/ssl/util/FingerprintTrustManagerFactory.java\nindex 6439528..a209db7 100644\n--- a/handler/src/main/java/io/netty/handler/ssl/util/FingerprintTrustManagerFactory.java\n+++ b/handler/src/main/java/io/netty/handler/ssl/util/FingerprintTrustManagerFactory.java\n@@ -190,6 +190,7 @@ public final class FingerprintTrustManagerFactory extends SimpleTrustManagerFact\n                 int strIdx = i << 1;\n                 farr[i] = (byte) Integer.parseInt(f.substring(strIdx, strIdx + 2), 16);\n             }\n+            list.add(farr);\n         }\n \n         return list.toArray(new byte[list.size()][]);\n",
    "summaries": {
      "en": "Add farr to the list collection",
      "zh": "将farr添加到list集合中"
    }
  },
  {
    "type": "refactor",
    "subtype": "R6",
    "change": "diff --git a/syncany-daemon/src/main/java/org/syncany/operations/daemon/WatchRunner.java b/syncany-daemon/src/main/java/org/syncany/operations/daemon/WatchRunner.java\nindex 2caf386a..e4c0f9f5 100644\n--- a/syncany-daemon/src/main/java/org/syncany/operations/daemon/WatchRunner.java\n+++ b/syncany-daemon/src/main/java/org/syncany/operations/daemon/WatchRunner.java\n@@ -265,8 +265,7 @@ public class WatchRunner implements WatchOperationListener {\n \t\t\tcliOutputStream.close();\n \t\t}\n \t\tcatch (Exception e) {\n-\t\t\tlogger.log(Level.WARNING, \"Exception thrown when running CLI command through daemon: \" + e);\n-\t\t\te.printStackTrace();\n+\t\t\tlogger.log(Level.WARNING, \"Exception thrown when running CLI command through daemon: \" + e, e);\n \t\t\teventBus.post(new BadRequestResponse(cliRequest.getId(), e.getMessage()));\n \t\t}\t\t\n \t}\ndiff --git a/syncany-daemon/src/test/java/org/syncany/tests/util/TestDaemonUtil.java b/syncany-daemon/src/test/java/org/syncany/tests/util/TestDaemonUtil.java\nindex 283d093e..8b41c415 100644\n--- a/syncany-daemon/src/test/java/org/syncany/tests/util/TestDaemonUtil.java\n+++ b/syncany-daemon/src/test/java/org/syncany/tests/util/TestDaemonUtil.java\n@@ -31,7 +31,6 @@ import org.syncany.crypto.CipherUtil;\n  * This class contains various helper methods for daemon related tests.\n  * \n  * @author Pim Otte\n- *\n  */\n public class TestDaemonUtil {\n \tprivate static final String DAEMON_RESOURCE_PATTERN = \"/org/syncany/config/to/%s\";\n",
    "summaries": {
      "en": "Modified log output information",
      "zh": "修改日志记录输出信息"
    }
  },
  {
    "type": "refactor",
    "subtype": "R3",
    "change": "diff --git a/hazelcast/src/main/java/com/hazelcast/impl/BaseManager.java b/hazelcast/src/main/java/com/hazelcast/impl/BaseManager.java\nindex c5ed78129d..60a7987c16 100644\n--- a/hazelcast/src/main/java/com/hazelcast/impl/BaseManager.java\n+++ b/hazelcast/src/main/java/com/hazelcast/impl/BaseManager.java\n@@ -40,7 +40,7 @@ import java.util.concurrent.atomic.AtomicInteger;\n import java.util.logging.Level;\r\n import java.util.logging.Logger;\r\n \r\n-public abstract class BaseManager implements Constants {\r\n+public abstract class BaseManager {\r\n \r\n     protected final static boolean zeroBackup = false;\r\n \r\n",
    "summaries": {
      "en": "Delete Constants interface implementation",
      "zh": "删除Constants 接口实现"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/libs/utils/WordPressUtils/src/main/java/org/wordpress/android/util/ptr/PullToRefreshHelper.java b/libs/utils/WordPressUtils/src/main/java/org/wordpress/android/util/ptr/PullToRefreshHelper.java\nindex dffdb6ecd..d1d393e59 100644\n--- a/libs/utils/WordPressUtils/src/main/java/org/wordpress/android/util/ptr/PullToRefreshHelper.java\n+++ b/libs/utils/WordPressUtils/src/main/java/org/wordpress/android/util/ptr/PullToRefreshHelper.java\n@@ -64,6 +64,8 @@ public class PullToRefreshHelper implements OnRefreshListener {\n             );\n         }\n         setupWizard.setup(mPullToRefreshLayout);\n+        // set network refresh mode as default\n+        setNetworkRefreshMode(true);\n     }\n \n     /**\n",
    "summaries": {
      "en": "Set the network refresh mode to default value",
      "zh": "将网络刷新模式设置为默认值"
    }
  },
  {
    "type": "feat",
    "subtype": "E2",
    "change": "diff --git a/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/PrepareCatalogMojo.java b/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/PrepareCatalogMojo.java\nindex 5b3cd5c4bd..ae1ab13126 100644\n--- a/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/PrepareCatalogMojo.java\n+++ b/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/PrepareCatalogMojo.java\n@@ -863,7 +863,7 @@ public class PrepareCatalogMojo extends AbstractMojo {\n                 component = \"ftp\";\n             } \n             String name = component + \"-component\";\n-            if (!docs.contains(name)) {\n+            if (!docs.contains(name) && (!component.equalsIgnoreCase(\"linkedin\") && !component.equalsIgnoreCase(\"salesforce\"))) {\n                 missing.add(name);\n             }\n         }\n",
    "summaries": {
      "en": "Skipping validation for camel-linkedin and camel-salesforce due to their presence in the same component folder with both API and component",
      "zh": "由于 camel-linkedin 和 camel-salesforce 在同一组件文件夹中具有 API 和组件，因此跳过驼峰式链接和驼峰式销售的验证"
    }
  },
  {
    "type": "refactor",
    "subtype": "R5",
    "change": "diff --git a/src/checkstyle/com/puppycrawl/tools/checkstyle/Scope.java b/src/checkstyle/com/puppycrawl/tools/checkstyle/Scope.java\nindex 867b820d8..cf0625e9a 100644\n--- a/src/checkstyle/com/puppycrawl/tools/checkstyle/Scope.java\n+++ b/src/checkstyle/com/puppycrawl/tools/checkstyle/Scope.java\n@@ -159,7 +159,7 @@ public final class Scope implements Comparable, Serializable\n     static Scope getInstance(String aScopeName)\n     {\n         // canonicalize argument\n-        String scopeName = aScopeName.toLowerCase();\n+        final String scopeName = aScopeName.trim().toLowerCase();\n \n         final Scope retVal = (Scope) NAME_TO_SCOPE.get(scopeName);\n         if (retVal == null) {\n",
    "summaries": {
      "en": "Remove spaces and use final modifier",
      "zh": "去除空格并用final修饰"
    }
  },
  {
    "type": "docs",
    "subtype": "D2",
    "change": "diff --git a/hazelcast/src/main/java/com/hazelcast/map/EntryProcessor.java b/hazelcast/src/main/java/com/hazelcast/map/EntryProcessor.java\nindex 5a3fdfd6d5..083416c707 100644\n--- a/hazelcast/src/main/java/com/hazelcast/map/EntryProcessor.java\n+++ b/hazelcast/src/main/java/com/hazelcast/map/EntryProcessor.java\n@@ -85,7 +85,8 @@ public interface EntryProcessor<K, V> extends Serializable {\n \n     /**\n      * Get the entry processor to be applied to backup entries.\n-     * <p/>\n+     *\n+     * In case of a readonly execution, null can be returned to indicate that no backups should be made.\n      *\n      * @return the back up processor\n      */\n",
    "summaries": {
      "en": "Add comments to explain the backup processor of EntryProcessor",
      "zh": "添加注释说明 EntryProcessor 的备份处理器"
    }
  },
  {
    "type": "docs",
    "subtype": "D2",
    "change": "diff --git a/src/main/java/org/junit/experimental/theories/Theories.java b/src/main/java/org/junit/experimental/theories/Theories.java\nindex 817f553..8c955c3 100644\n--- a/src/main/java/org/junit/experimental/theories/Theories.java\n+++ b/src/main/java/org/junit/experimental/theories/Theories.java\n@@ -51,7 +51,7 @@ import org.junit.runners.model.TestClass;\n  *      }\n  * }\n  * </pre>\n- * This makes it clear that the user's filename should be included in the config file name,\n+ * This makes it clear that the username should be included in the config file name,\n  * only if it doesn't contain a slash. Another test or theory might define what happens when a username does contain\n  * a slash. <code>UserTest</code> will attempt to run <code>filenameIncludesUsername</code> on every compatible data\n  * point defined in the class. If any of the assumptions fail, the data point is silently ignored. If all of the\n",
    "summaries": {
      "en": "Fix Javadoc in Theories",
      "zh": "修复Theories中的Javadoc"
    }
  },
  {
    "type": "fix",
    "subtype": "I2",
    "change": "diff --git a/services/core/java/com/android/server/am/ActivityManagerService.java b/services/core/java/com/android/server/am/ActivityManagerService.java\nindex 79cb60e..a435de7 100755\n--- a/services/core/java/com/android/server/am/ActivityManagerService.java\n+++ b/services/core/java/com/android/server/am/ActivityManagerService.java\n@@ -8054,7 +8054,7 @@ public final class ActivityManagerService extends ActivityManagerNative\n                 checkedGrants = true;\n             }\n             userId = handleIncomingUser(callingPid, callingUid, userId,\n-                    false, ALLOW_NON_FULL_IN_PROFILE,\n+                    false, ALLOW_NON_FULL,\n                     \"checkContentProviderPermissionLocked \" + cpi.authority, null);\n             if (userId != tmpTargetUserId) {\n                 // When we actually went to determine the final targer user ID, this ended\n",
    "summaries": {
      "en": "Change ALLOW_NON_FULL_IN_PROFILE to ALLOW_NON_FULL",
      "zh": "修改 ALLOW_NON_FULL_IN_PROFILE 为 ALLOW_NON_FULL"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/library-core/src/main/java/com/mikepenz/iconics/IconicsDrawable.java b/library-core/src/main/java/com/mikepenz/iconics/IconicsDrawable.java\nindex 86cf5ce..81af678 100644\n--- a/library-core/src/main/java/com/mikepenz/iconics/IconicsDrawable.java\n+++ b/library-core/src/main/java/com/mikepenz/iconics/IconicsDrawable.java\n@@ -260,6 +260,27 @@ public class IconicsDrawable extends Drawable {\n \n \n     /**\n+     * Returns the icon color\n+     */\n+    public int getColor() {\n+        return mIconColor;\n+    }\n+\n+    /**\n+     * Returns the icon contour color\n+     */\n+    public int getContourColor() {\n+        return mContourColor;\n+    }\n+\n+    /**\n+     * Returns the icon background color\n+     */\n+    public int getBackgroundColor() {\n+        return mBackgroundColor;\n+    }\n+\n+    /**\n      * set the icon offset for X from resource\n      *\n      * @param iconOffsetXRes\n",
    "summaries": {
      "en": "Added getter method",
      "zh": "添加 getter 方法"
    }
  },
  {
    "type": "feat",
    "subtype": "E2",
    "change": "diff --git a/src/main/java/org/jboss/netty/channel/socket/nio/NioClientSocketPipelineSink.java b/src/main/java/org/jboss/netty/channel/socket/nio/NioClientSocketPipelineSink.java\nindex cc499b6..b9ea4c0 100644\n--- a/src/main/java/org/jboss/netty/channel/socket/nio/NioClientSocketPipelineSink.java\n+++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioClientSocketPipelineSink.java\n@@ -142,7 +142,9 @@ class NioClientSocketPipelineSink extends AbstractChannelSink {\n                 channel.getCloseFuture().addListener(new ChannelFutureListener() {\n                     public void operationComplete(ChannelFuture f)\n                             throws Exception {\n-                        cf.setFailure(new ClosedChannelException());\n+                        if (!cf.isDone()) {\n+                            cf.setFailure(new ClosedChannelException());\n+                        }\n                     }\n                 });\n                 cf.addListener(ChannelFutureListener.CLOSE_ON_FAILURE);\n@@ -153,6 +155,7 @@ class NioClientSocketPipelineSink extends AbstractChannelSink {\n         } catch (Throwable t) {\n             cf.setFailure(t);\n             fireExceptionCaught(channel, t);\n+            NioWorker.close(channel, succeededFuture(channel));\n         }\n     }\n \n",
    "summaries": {
      "en": "Explicitly close the channel when connection attempts fail",
      "zh": "在连接尝试失败时应显式关闭通道"
    }
  },
  {
    "type": "feat",
    "subtype": "E2",
    "change": "diff --git a/SeriesGuide/src/main/java/com/battlelancer/seriesguide/util/MovieTools.java b/SeriesGuide/src/main/java/com/battlelancer/seriesguide/util/MovieTools.java\nindex 9b181f98e..7445c0bc2 100644\n--- a/SeriesGuide/src/main/java/com/battlelancer/seriesguide/util/MovieTools.java\n+++ b/SeriesGuide/src/main/java/com/battlelancer/seriesguide/util/MovieTools.java\n@@ -352,10 +352,9 @@ public class MovieTools {\n \n         @Override\n         protected void onPostExecute(Integer movieTmdbId) {\n-            // Guarding against odd NPE, https://github.com/UweTrottmann/SeriesGuide/issues/371\n-            EventBus bus = EventBus.getDefault();\n-            if (bus != null) {\n-                bus.post(new MovieChangedEvent(movieTmdbId));\n+            // guard against NPE https://github.com/UweTrottmann/SeriesGuide/issues/371\n+            if (movieTmdbId != null) {\n+                EventBus.getDefault().post(new MovieChangedEvent(movieTmdbId));\n             }\n         }\n     }\n",
    "summaries": {
      "en": "Fixed potential null pointer exception",
      "zh": "修复可能的空指针异常"
    }
  },
  {
    "type": "feat",
    "subtype": "E2",
    "change": "diff --git a/java/debugger/impl/src/com/intellij/debugger/engine/JavaStaticGroup.java b/java/debugger/impl/src/com/intellij/debugger/engine/JavaStaticGroup.java\nindex 1293a0f..60d0b70 100644\n--- a/java/debugger/impl/src/com/intellij/debugger/engine/JavaStaticGroup.java\n+++ b/java/debugger/impl/src/com/intellij/debugger/engine/JavaStaticGroup.java\n@@ -17,7 +17,9 @@ package com.intellij.debugger.engine;\n \n import com.intellij.debugger.engine.evaluation.EvaluationContextImpl;\n import com.intellij.debugger.engine.events.SuspendContextCommandImpl;\n+import com.intellij.debugger.settings.NodeRendererSettings;\n import com.intellij.debugger.ui.impl.watch.*;\n+import com.intellij.debugger.ui.tree.render.ClassRenderer;\n import com.intellij.xdebugger.frame.*;\n import com.sun.jdi.Field;\n import com.sun.jdi.ReferenceType;\n@@ -57,8 +59,14 @@ public class JavaStaticGroup extends XValueGroup implements NodeDescriptorProvid\n \n           final ReferenceType refType = myStaticDescriptor.getType();\n           List<Field> fields = refType.allFields();\n+\n+          final ClassRenderer classRenderer = NodeRendererSettings.getInstance().getClassRenderer();\n           for (Field field : fields) {\n             if (field.isStatic()) {\n+              boolean isSynthetic = DebuggerUtils.isSynthetic(field);\n+              if (!classRenderer.SHOW_SYNTHETICS && isSynthetic) {\n+                continue;\n+              }\n               final FieldDescriptorImpl fieldDescriptor = myNodeManager.getFieldDescriptor(myStaticDescriptor, null, field);\n               children.add(JavaValue.create(fieldDescriptor, myEvaluationContext, myNodeManager));\n               //final DebuggerTreeNodeImpl node = myNodeManager.createNode(fieldDescriptor, myEvaluationContext);\n",
    "summaries": {
      "en": "Set \"show synthetic\" for static nodes",
      "zh": "为静态节点使用 \"show synthetic\" 设置"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/DaoCore/src/main/java/de/greenrobot/dao/query/Join.java b/DaoCore/src/main/java/de/greenrobot/dao/query/Join.java\nindex ab142a0..04dba3f 100644\n--- a/DaoCore/src/main/java/de/greenrobot/dao/query/Join.java\n+++ b/DaoCore/src/main/java/de/greenrobot/dao/query/Join.java\n@@ -80,4 +80,12 @@ public class Join<SRC, DST> {\n         return whereCollector.combineWhereConditions(\" AND \", cond1, cond2, condMore);\n     }\n \n+    /**\n+     * Usually you don't need this value; just in case you are mixing custom\n+     * {@link de.greenrobot.dao.query.WhereCondition.StringCondition} into the query, this value allows to reference\n+     * the joined (target) table.\n+     */\n+    public String getTablePrefix() {\n+        return tablePrefix;\n+    }\n }\n",
    "summaries": {
      "en": "Added getTablePrefix() method",
      "zh": "添加 getTablePrefix()方法"
    }
  },
  {
    "type": "fix",
    "subtype": "I3",
    "change": "diff --git a/platform/platform-impl/src/com/intellij/openapi/options/newEditor/SettingsTreeView.java b/platform/platform-impl/src/com/intellij/openapi/options/newEditor/SettingsTreeView.java\nindex c7cf366..9815a95 100644\n--- a/platform/platform-impl/src/com/intellij/openapi/options/newEditor/SettingsTreeView.java\n+++ b/platform/platform-impl/src/com/intellij/openapi/options/newEditor/SettingsTreeView.java\n@@ -573,12 +573,12 @@ final class SettingsTreeView extends JComponent implements Disposable, OptionsEd\n       }\n       // configure node icon\n       Icon nodeIcon = null;\n-      if (node != null) {\n-        if (0 == node.getChildCount()) {\n+      if (value instanceof DefaultMutableTreeNode) {\n+        DefaultMutableTreeNode treeNode = (DefaultMutableTreeNode)value;\n+        if (0 == treeNode.getChildCount()) {\n           nodeIcon = myTree.getEmptyHandle();\n         }\n-        else if (value instanceof DefaultMutableTreeNode) {\n-          DefaultMutableTreeNode treeNode = (DefaultMutableTreeNode)value;\n+        else {\n           nodeIcon = myTree.isExpanded(new TreePath(treeNode.getPath()))\n                      ? myTree.getExpandedHandle()\n                      : myTree.getCollapsedHandle();\n",
    "summaries": {
      "en": "If a sub-node is filtered, do not display the folding icon",
      "zh": "如果子节点被过滤掉，则不显示折叠图标"
    }
  },
  {
    "type": "refactor",
    "subtype": "R4",
    "change": "diff --git a/client/src/main/java/com/orientechnologies/orient/enterprise/channel/binary/OChannelBinaryAsynchClient.java b/client/src/main/java/com/orientechnologies/orient/enterprise/channel/binary/OChannelBinaryAsynchClient.java\nindex 7f38b2b..7315c81 100755\n--- a/client/src/main/java/com/orientechnologies/orient/enterprise/channel/binary/OChannelBinaryAsynchClient.java\n+++ b/client/src/main/java/com/orientechnologies/orient/enterprise/channel/binary/OChannelBinaryAsynchClient.java\n@@ -20,6 +20,7 @@\n package com.orientechnologies.orient.enterprise.channel.binary;\n \n import com.orientechnologies.common.concur.OTimeoutException;\n+import com.orientechnologies.common.concur.lock.OInterruptedException;\n import com.orientechnologies.common.concur.lock.OLockException;\n import com.orientechnologies.common.exception.OException;\n import com.orientechnologies.common.exception.OSystemException;\n@@ -249,7 +250,7 @@ public class OChannelBinaryAsynchClient extends OChannelBinary {\n \n         } catch (InterruptedException e) {\n           Thread.currentThread().interrupt();\n-\n+          throw  OException.wrapException(new OInterruptedException(\"Thread interrupted while waiting for request\"),e);\n         } finally {\n           if (readLock)\n             releaseReadLock();\n",
    "summaries": {
      "en": "If a thread is interrupted while waiting for a request, throw an OInterruptedException",
      "zh": "如果线程在等待请求时被中断，则抛出OInterruptedException"
    }
  },
  {
    "type": "refactor",
    "subtype": "R5",
    "change": "diff --git a/src/org/mockito/runners/VerboseMockitoJUnitRunner.java b/src/org/mockito/runners/VerboseMockitoJUnitRunner.java\nindex c6b4457..ff5c8bc 100644\n--- a/src/org/mockito/runners/VerboseMockitoJUnitRunner.java\n+++ b/src/org/mockito/runners/VerboseMockitoJUnitRunner.java\n@@ -69,7 +69,7 @@ public class VerboseMockitoJUnitRunner extends Runner {\n                 Throwable throwable = (Throwable) Whitebox.getInternalState(failure, \"fThrownException\");\r\n                 \r\n                 String newMessage = throwable.getMessage();\r\n-                newMessage += \"\\n\" + debuggingInfo.getWarnings();\r\n+                newMessage += \"\\n\" + debuggingInfo.getWarnings() + \"\\n*** The actual failure is because of: ***\\n\";\r\n                 \r\n                 Whitebox.setInternalState(throwable, \"detailMessage\", newMessage);\r\n             }\r\n",
    "summaries": {
      "en": "Add log warnings and actual fault information in exception messages",
      "zh": "在异常信息中添加日志警告和实际故障的信息"
    }
  },
  {
    "type": "fix",
    "subtype": "I2",
    "change": "diff --git a/src/edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunction.java b/src/edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunction.java\nindex 25e8792..3680c4e 100644\n--- a/src/edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunction.java\n+++ b/src/edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunction.java\n@@ -1528,7 +1528,7 @@ public class CRFLogConditionalObjectiveFunction extends AbstractStochasticCachin\n \n       empiricalCountsForADoc(eHat4Update, ind);\n       // TODO(mengqiu) broken, does not do E calculation\n-      expectedCountsForADoc(weights, ind);\n+      expectedCountsForADoc(weights, e4Update, ind);\n \n       /* the commented out code below is to iterate over the batch docs instead of iterating over all\n          parameters at the end, which is more efficient; but it would also require us to clearUpdateEs()\n",
    "summaries": {
      "en": "Add e4Update parameter",
      "zh": "添加e4Update参数"
    }
  },
  {
    "type": "refactor",
    "subtype": "R6",
    "change": "diff --git a/src/main/org/codehaus/groovy/ant/GroovycTask.java b/src/main/org/codehaus/groovy/ant/GroovycTask.java\nindex b4a4cec0e..e1d8901aa 100644\n--- a/src/main/org/codehaus/groovy/ant/GroovycTask.java\n+++ b/src/main/org/codehaus/groovy/ant/GroovycTask.java\n@@ -79,7 +79,7 @@ public class GroovycTask\n         }\n \n         if (count > 0) {\n-            log.info(\"Compiling \" + count + \" sources\" + (count > 1 ? \"s\" : \"\") + \" to \" + destdir);\n+            log.info(\"Compiling \" + count + \" source file\" + (count > 1 ? \"s\" : \"\") + \" to \" + destdir);\n \n             compilation.compile();\n         }\n",
    "summaries": {
      "en": "Modified log information",
      "zh": "修改日志信息"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/src/main/java/water/api/AUC.java b/src/main/java/water/api/AUC.java\nindex 4565f2772..0ee579dcd 100644\n--- a/src/main/java/water/api/AUC.java\n+++ b/src/main/java/water/api/AUC.java\n@@ -122,6 +122,7 @@ public class AUC extends Func {\n     precision = null;\n     recall = null;\n     specificity = null;\n+    mcc = null;\n     max_per_class_error = null;\n     threshold_for_criteria = null;\n     F1_for_criteria = null;\n@@ -523,6 +524,7 @@ public class AUC extends Func {\n       sb.append(\"\\t\" + \"document.getElementById('precision').innerHTML = precision[i];\\n\");\n       sb.append(\"\\t\" + \"document.getElementById('recall').innerHTML = recall[i];\\n\");\n       sb.append(\"\\t\" + \"document.getElementById('specificity').innerHTML = specificity[i];\\n\");\n+      sb.append(\"\\t\" + \"document.getElementById('mcc').innerHTML = mcc[i];\\n\");\n       sb.append(\"\\t\" + \"document.getElementById('max_per_class_error').innerHTML = max_per_class_error[i];\\n\");\n       sb.append(\"\\t\" + \"update(dataset);\\n\");\n       sb.append(\"}\\n\");\n",
    "summaries": {
      "en": "Added a new element mcc",
      "zh": "增加一个新的元素mcc"
    }
  },
  {
    "type": "refactor",
    "subtype": "R5",
    "change": "diff --git a/smack-core/src/main/java/org/jivesoftware/smack/util/SmackExecutorThreadFactory.java b/smack-core/src/main/java/org/jivesoftware/smack/util/SmackExecutorThreadFactory.java\nindex 5823435f..c3c59d7f 100644\n--- a/smack-core/src/main/java/org/jivesoftware/smack/util/SmackExecutorThreadFactory.java\n+++ b/smack-core/src/main/java/org/jivesoftware/smack/util/SmackExecutorThreadFactory.java\n@@ -1,6 +1,6 @@\n /**\n  *\n- * Copyright 2014 Florian Schmaus\n+ * Copyright 2014-2015 Florian Schmaus\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n@@ -35,7 +35,7 @@ public final class SmackExecutorThreadFactory implements ThreadFactory {\n     @Override\n     public Thread newThread(Runnable runnable) {\n         Thread thread = new Thread(runnable);\n-        thread.setName(\"Smack Executor - \" + name + ' ' + count++ + \" (\" + connectionCounterValue + \")\");\n+        thread.setName(\"Smack-\" + name + ' ' + count++ + \" (\" + connectionCounterValue + \")\");\n         thread.setDaemon(true);\n         return thread;\n     }\n",
    "summaries": {
      "en": "Change thread name",
      "zh": "更改线程名称"
    }
  },
  {
    "type": "docs",
    "subtype": "D2",
    "change": "diff --git a/data/src/main/java/com/linkedin/data/schema/validator/DataSchemaAnnotationValidator.java b/data/src/main/java/com/linkedin/data/schema/validator/DataSchemaAnnotationValidator.java\nindex c0a5f168..df6fff67 100644\n--- a/data/src/main/java/com/linkedin/data/schema/validator/DataSchemaAnnotationValidator.java\n+++ b/data/src/main/java/com/linkedin/data/schema/validator/DataSchemaAnnotationValidator.java\n@@ -259,6 +259,9 @@ public class DataSchemaAnnotationValidator implements Validator\n    * This method causes the \"validate\" properties of the schema and referenced schemas to\n    * be parsed and appropriate instances of {@link Validator}'s to be constructed.\n    *\n+   * This method does not throw an exception if there is an initialization error.\n+   * The client should check the return value for initialization errors.\n+   *\n    * @param schema to be parsed to compute the {@link Validator}'s that have to be created.\n    * @param classMap provides the map of the keys to {@link Validator}s that is looked up first\n    *                 before looking for classes with names derived from the key.\n",
    "summaries": {
      "en": "Add comments to clarify the semantic of initialization errors",
      "zh": "添加注释以澄清初始化错误语义"
    }
  },
  {
    "type": "feat",
    "subtype": "E1",
    "change": "diff --git a/languagetool-standalone/src/main/java/org/languagetool/dev/DictionaryBuilder.java b/languagetool-standalone/src/main/java/org/languagetool/dev/DictionaryBuilder.java\nindex 47a084eb09..aedca57fe3 100644\n--- a/languagetool-standalone/src/main/java/org/languagetool/dev/DictionaryBuilder.java\n+++ b/languagetool-standalone/src/main/java/org/languagetool/dev/DictionaryBuilder.java\n@@ -127,7 +127,11 @@ class DictionaryBuilder {\n   }\n \n   protected String getOption(String option) {\n-    return props.getProperty(option).trim();\n+    String property = props.getProperty(option);\n+    if (property == null) {\n+      return null;\n+    }\n+    return property.trim();\n   }\n \n   protected boolean hasOption(String option) {\n",
    "summaries": {
      "en": "Prevent NPE",
      "zh": "防止NPE"
    }
  },
  {
    "type": "refactor",
    "subtype": "R3",
    "change": "diff --git a/portal-impl/src/com/liferay/portal/tools/SourceFormatter.java b/portal-impl/src/com/liferay/portal/tools/SourceFormatter.java\nindex 1832feb2525c..ff37049fbe3d 100644\n--- a/portal-impl/src/com/liferay/portal/tools/SourceFormatter.java\n+++ b/portal-impl/src/com/liferay/portal/tools/SourceFormatter.java\n@@ -702,7 +702,7 @@ public class SourceFormatter {\n \t\t\tString content = _fileUtil.read(file);\n \n \t\t\tif (_isGenerated(content)) {\n-\t\t\t\treturn;\n+\t\t\t\tcontinue;\n \t\t\t}\n \n \t\t\tString className = file.getName();\n",
    "summaries": {
      "en": "Satisfy_isGenerated and skip instead of terminating the method",
      "zh": "满足_isGenerated后跳过而不是终止方法"
    }
  },
  {
    "type": "feat",
    "subtype": "E1",
    "change": "diff --git a/library/src/main/java/com/google/android/exoplayer/TrackRenderer.java b/library/src/main/java/com/google/android/exoplayer/TrackRenderer.java\nindex 851df78..3de9634 100644\n--- a/library/src/main/java/com/google/android/exoplayer/TrackRenderer.java\n+++ b/library/src/main/java/com/google/android/exoplayer/TrackRenderer.java\n@@ -370,7 +370,7 @@ public abstract class TrackRenderer implements ExoPlayerComponent {\n    * @return True if the source is ready. False otherwise.\n    */\n   protected final boolean isSourceReady() {\n-    return stream.isReady();\n+    return readEndOfStream ? streamIsFinal : stream.isReady();\n   }\n \n   // Abstract methods.\n",
    "summaries": {
      "en": "Change isSourceReady() function to check readEndOfStream flag",
      "zh": "更改isSourceReady()函数以检查readEndOfStream标志"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/hystrix-contrib/hystrix-yammer-metrics-publisher/src/main/java/com/netflix/hystrix/contrib/yammermetricspublisher/HystrixYammerMetricsPublisherCommand.java b/hystrix-contrib/hystrix-yammer-metrics-publisher/src/main/java/com/netflix/hystrix/contrib/yammermetricspublisher/HystrixYammerMetricsPublisherCommand.java\nindex 7485782..6349dad 100644\n--- a/hystrix-contrib/hystrix-yammer-metrics-publisher/src/main/java/com/netflix/hystrix/contrib/yammermetricspublisher/HystrixYammerMetricsPublisherCommand.java\n+++ b/hystrix-contrib/hystrix-yammer-metrics-publisher/src/main/java/com/netflix/hystrix/contrib/yammermetricspublisher/HystrixYammerMetricsPublisherCommand.java\n@@ -66,6 +66,7 @@ public class HystrixYammerMetricsPublisherCommand implements HystrixMetricsPubli\n         });\n \n         // cumulative counts\n+        createCumulativeCountForEvent(\"countBadRequests\", HystrixRollingNumberEvent.BAD_REQUEST);\n         createCumulativeCountForEvent(\"countCollapsedRequests\", HystrixRollingNumberEvent.COLLAPSED);\n         createCumulativeCountForEvent(\"countExceptionsThrown\", HystrixRollingNumberEvent.EXCEPTION_THROWN);\n         createCumulativeCountForEvent(\"countFailure\", HystrixRollingNumberEvent.FAILURE);\n@@ -80,6 +81,7 @@ public class HystrixYammerMetricsPublisherCommand implements HystrixMetricsPubli\n         createCumulativeCountForEvent(\"countTimeout\", HystrixRollingNumberEvent.TIMEOUT);\n \n         // rolling counts\n+        createRollingCountForEvent(\"rollingCountBadRequests\", HystrixRollingNumberEvent.BAD_REQUEST);\n         createRollingCountForEvent(\"rollingCountCollapsedRequests\", HystrixRollingNumberEvent.COLLAPSED);\n         createRollingCountForEvent(\"rollingCountExceptionsThrown\", HystrixRollingNumberEvent.EXCEPTION_THROWN);\n         createRollingCountForEvent(\"rollingCountFailure\", HystrixRollingNumberEvent.FAILURE);\n",
    "summaries": {
      "en": "Add cumulative count and rolling count for BAD_REQUEST",
      "zh": "添加 BAD_REQUEST 的累计计数和滚动计数"
    }
  },
  {
    "type": "feat",
    "subtype": "Ex",
    "change": "diff --git a/core/src/main/java/com/orientechnologies/orient/core/metadata/security/OSecurityShared.java b/core/src/main/java/com/orientechnologies/orient/core/metadata/security/OSecurityShared.java\nindex 2651069..7f60eb4 100644\n--- a/core/src/main/java/com/orientechnologies/orient/core/metadata/security/OSecurityShared.java\n+++ b/core/src/main/java/com/orientechnologies/orient/core/metadata/security/OSecurityShared.java\n@@ -37,7 +37,7 @@ import com.orientechnologies.orient.core.storage.OStorageEmbedded;\n  * @author Luca Garulli (l.garulli--at--orientechnologies.com)\r\n  * \r\n  */\r\n-public class OSecurityShared {\r\n+public class OSecurityShared implements OSecurity {\r\n \tprivate OSharedResourceExternal\tlock\t= new OSharedResourceExternal();\r\n \r\n \tpublic OUser authenticate(final String iUserName, final String iUserPassword) {\r\n",
    "summaries": {
      "en": "Implement OSecurity interface",
      "zh": "实现 OSecurity 接口"
    }
  },
  {
    "type": "refactor",
    "subtype": "R3",
    "change": "diff --git a/dexlib/src/main/java/org/jf/dexlib/ClassDataItem.java b/dexlib/src/main/java/org/jf/dexlib/ClassDataItem.java\nindex 1213fa61..0d4b521c 100644\n--- a/dexlib/src/main/java/org/jf/dexlib/ClassDataItem.java\n+++ b/dexlib/src/main/java/org/jf/dexlib/ClassDataItem.java\n@@ -427,11 +427,11 @@ public class ClassDataItem extends Item<ClassDataItem> {\n                 out.annotate(\"access_flags\");\r\n                 out.writeUnsignedLeb128(accessFlags);\r\n                 out.annotate(\"code_off\");\r\n-                out.writeUnsignedLeb128(codeItem==null?0:codeItem.getIndex());\r\n+                out.writeUnsignedLeb128(codeItem==null?0:codeItem.getOffset());\r\n             }else {\r\n                 out.writeUnsignedLeb128(method.getIndex() - previousIndex);\r\n                 out.writeUnsignedLeb128(accessFlags);\r\n-                out.writeUnsignedLeb128(codeItem==null?0:codeItem.getIndex());\r\n+                out.writeUnsignedLeb128(codeItem==null?0:codeItem.getOffset());\r\n             }\r\n         }\r\n \r\n",
    "summaries": {
      "en": "Use the offset of CodeItem instead of the index",
      "zh": "使用CodeItem的偏移量而不是索引"
    }
  },
  {
    "type": "refactor",
    "subtype": "R3",
    "change": "diff --git a/gdx/src/com/badlogic/gdx/utils/Json.java b/gdx/src/com/badlogic/gdx/utils/Json.java\nindex a6b3c75..4724354 100644\n--- a/gdx/src/com/badlogic/gdx/utils/Json.java\n+++ b/gdx/src/com/badlogic/gdx/utils/Json.java\n@@ -817,14 +817,14 @@ public class Json {\n \t * @return May be null. */\n \tpublic <T> T readValue (String name, Class<T> type, Class elementType, T defaultValue, JsonValue jsonMap) {\n \t\tJsonValue jsonValue = jsonMap.get(name);\n-\t\tif (jsonValue == null) return defaultValue;\n-\t\treturn (T)readValue(type, elementType, jsonValue);\n+\t\treturn (T)readValue(type, elementType, defaultValue, jsonValue);\n \t}\n \n \t/** @param type May be null if the type is unknown.\n \t * @param elementType May be null if the type is unknown.\n \t * @return May be null. */\n \tpublic <T> T readValue (Class<T> type, Class elementType, T defaultValue, JsonValue jsonData) {\n+ \t\tif (jsonData == null) return defaultValue;\n \t\treturn (T)readValue(type, elementType, jsonData);\n \t}\n \n",
    "summaries": {
      "en": "Modified the readValue() method in the Json class to include a check for null jsonData",
      "zh": "修改 Json 类中的 readValue()方法，增加对 jsonData 为 null 的判断"
    }
  },
  {
    "type": "test",
    "subtype": "T1",
    "change": "diff --git a/k9mail/src/androidTest/java/com/fsck/k9/mail/store/imap/ImapConnectionTest.java b/k9mail/src/androidTest/java/com/fsck/k9/mail/store/imap/ImapConnectionTest.java\nindex 73a3e36..b10705e 100644\n--- a/k9mail/src/androidTest/java/com/fsck/k9/mail/store/imap/ImapConnectionTest.java\n+++ b/k9mail/src/androidTest/java/com/fsck/k9/mail/store/imap/ImapConnectionTest.java\n@@ -17,15 +17,16 @@ import static org.junit.Assert.assertArrayEquals;\n \n public class ImapConnectionTest extends TestCase {\n     private static final String[] CAPABILITIES = new String[] { \"IMAP4REV1\", \"LITERAL+\", \"QUOTA\" };\n-    \n+\n     private StubMailServer stubMailServer;\n     private ImapConnection connection;\n-    private TestImapSettings settings = new TestImapSettings(UserForImap.TEST_USER);\n+    private TestImapSettings settings;\n \n     @Override\n     public void setUp() throws Exception {\n         super.setUp();\n         stubMailServer = new StubMailServer();\n+        settings = new TestImapSettings(UserForImap.TEST_USER);\n         connection = new ImapConnection(settings, null, null);\n     }\n \n@@ -46,6 +47,10 @@ public class ImapConnectionTest extends TestCase {\n         }\n     }\n \n+    public void testConnectionIsInitiallyClosed() throws Exception {\n+        assertFalse(connection.isOpen());\n+    }\n+\n     public void testSuccessfulOpenConnectionTogglesOpenState() throws Exception {\n         connection.open();\n         assertTrue(connection.isOpen());\n",
    "summaries": {
      "en": "Instantiate the settings object in the setUp() method",
      "zh": "在setUp()方法中，实例化settings对象"
    }
  },
  {
    "type": "refactor",
    "subtype": "R9",
    "change": "diff --git a/curator-recipes/src/main/java/com/netflix/curator/framework/recipes/queue/BlockingQueueConsumer.java b/curator-recipes/src/main/java/com/netflix/curator/framework/recipes/queue/BlockingQueueConsumer.java\nindex 2698a564..2a312848 100644\n--- a/curator-recipes/src/main/java/com/netflix/curator/framework/recipes/queue/BlockingQueueConsumer.java\n+++ b/curator-recipes/src/main/java/com/netflix/curator/framework/recipes/queue/BlockingQueueConsumer.java\n@@ -37,7 +37,7 @@ public class BlockingQueueConsumer<T> implements QueueConsumer<T>\n      */\n     public BlockingQueueConsumer()\n     {\n-        items = new LinkedBlockingQueue<T>();\n+        this(new LinkedBlockingQueue<T>());\n     }\n \n     /**\n@@ -45,7 +45,17 @@ public class BlockingQueueConsumer<T> implements QueueConsumer<T>\n      */\n     public BlockingQueueConsumer(int capacity)\n     {\n-        items = new ArrayBlockingQueue<T>(capacity);\n+        this(new ArrayBlockingQueue<T>(capacity));\n+    }\n+\n+    /**\n+     * Wrap the given blocking queue\n+     *\n+     * @param queue queue to use\n+     */\n+    public BlockingQueueConsumer(BlockingQueue<T> queue)\n+    {\n+        this.items = queue;\n     }\n \n     @Override\n",
    "summaries": {
      "en": "Add a constructor to wrap the given queue",
      "zh": "添加一个构造函数来包装给定的队列"
    }
  },
  {
    "type": "build",
    "subtype": "B1",
    "change": "diff --git a/docs/pom.xml b/docs/pom.xml\nindex f172775..54bd64c 100644\n--- a/docs/pom.xml\n+++ b/docs/pom.xml\n@@ -5,7 +5,7 @@\n     <parent>\n         <groupId>io.trino</groupId>\n         <artifactId>trino-root</artifactId>\n-        <version>416</version>\n+        <version>417-SNAPSHOT</version>\n     </parent>\n \n     <artifactId>trino-docs</artifactId>",
    "summaries": {
      "en": "Update trino-root version to 417-SNAPSHOT",
      "zh": "更新trino-root版本号为417-SNAPSHOT"
    }
  },
  {
    "type": "cicd",
    "subtype": "C1",
    "change": "diff --git a/.github/workflows/site.yml b/.github/workflows/site.yml\nindex 0b8616e..4f47ff1 100644\n--- a/.github/workflows/site.yml\n+++ b/.github/workflows/site.yml\n@@ -74,6 +74,9 @@ jobs:\n     outputs:\n       message: ${{ steps.out.outputs.message}}\n     steps:\n+      - name: Checkout repository from origin \n+        uses: actions/checkout@v3\n+\n       # fetch-depth - number of commits to fetch.\n       # 0 indicates all history for all branches and tags.\n       # 0, because we need access to all branches to create a report.\n@@ -144,6 +147,7 @@ jobs:\n             JOBS_LINK=\"https://github.com/checkstyle/checkstyle/actions/runs/${{github.run_id}}\"\n             API_LINK=\"https://api.github.com/repos/checkstyle/checkstyle/actions/runs/\"\n             API_LINK=\"${API_LINK}${{github.run_id}}/jobs\"\n+            echo \"API_LINK=${API_LINK}\"\n \n             curl --fail-with-body -X GET \"${API_LINK}\" \\\n               -H \"Accept: application/vnd.github+json\" \\",
    "summaries": {
      "en": "Added step to check out code from remote repository",
      "zh": "添加了从远程仓库检出代码的步骤"
    }
  },
  {
    "type": "fix",
    "subtype": "I1",
    "change": "diff --git a/querydsl-core/src/main/java/com/mysema/query/codegen/GenericExporter.java b/querydsl-core/src/main/java/com/mysema/query/codegen/GenericExporter.java\nindex 84ddd052e..2b00947a5 100644\n--- a/querydsl-core/src/main/java/com/mysema/query/codegen/GenericExporter.java\n+++ b/querydsl-core/src/main/java/com/mysema/query/codegen/GenericExporter.java\n@@ -256,7 +256,7 @@ public class GenericExporter {\n                     File file = files.pop();\n                     for (File child : file.listFiles()){\n                         if (child.getName().endsWith(\".class\")){\n-                            String fileName = child.getPath().substring(packagePath.length()+1).replace('/', '.');\n+                            String fileName = child.getName();\n                             String className = pkg.getName() + \".\" + fileName.substring(0, fileName.length()-6);\n                             classes.add(Class.forName(className));\n                         }else if (child.isDirectory()){\n",
    "summaries": {
      "en": "Change the way to get class name",
      "zh": "更改获取类名的方式"
    }
  },
  {
    "type": "build",
    "subtype": "B1",
    "change": "diff --git a/build.gradle b/build.gradle\nindex e84e462..0f68828 100644\n--- a/build.gradle\n+++ b/build.gradle\n@@ -15,14 +15,14 @@\n\n-sourceCompatibility = 1.5\n+sourceCompatibility = 1.8\n version = '1.0'\n jar {\n     manifest {\n         attributes 'Implementation-Title': 'Gradle Quickstart',\n                    'Implementation-Version': version\n     }\n }\n \n-dependencies {\n+dependencies { \n     testCompile group: 'junit', name: 'junit', version: '4.12'\n-    compile group: 'com.google.guava', name: 'guava', version: '18.0'\n+    compile group: 'com.google.guava', name: 'guava', version: '28.2-jre'\n }",
    "summaries": {
      "en": "Update Guava version",
      "zh": "更新guava版本"
    }
  }
]